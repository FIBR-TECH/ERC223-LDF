{
  "contractName": "LDFToken",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        },
        {
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        },
        {
          "name": "data",
          "type": "bytes"
        },
        {
          "name": "custom_fallback",
          "type": "string"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "TransferData",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    }
  ],
  "bytecode": "0x60c0604052601460808190527f4c656e64666c6f204469676974616c204669617400000000000000000000000060a0908152620000409160059190620001e8565b506040805180820190915260038082527f4c4446000000000000000000000000000000000000000000000000000000000060209092019182526200008791600691620001e8565b506007805460ff191690553480156200009f57600080fd5b5060008054600160a060020a0319163317808255604051600160a060020a039190911691907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3620000fd3364010000000062000103810204565b6200028d565b6200011e600482640100000000620018296200015582021704565b604051600160a060020a038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b600160a060020a03811615156200016b57600080fd5b620001808282640100000000620001b0810204565b156200018b57600080fd5b600160a060020a0316600090815260209190915260409020805460ff19166001179055565b6000600160a060020a0382161515620001c857600080fd5b50600160a060020a03166000908152602091909152604090205460ff1690565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200022b57805160ff19168380011785556200025b565b828001600101855582156200025b579182015b828111156200025b5782518255916020019190600101906200023e565b50620002699291506200026d565b5090565b6200028a91905b8082111562000269576000815560010162000274565b90565b61190f806200029d6000396000f3006080604052600436106101195763ffffffff60e060020a60003504166306fdde03811461011e578063095ea7b3146101a857806318160ddd146101e057806323b872dd14610207578063313ce56714610231578063395093511461025c57806342966c681461028057806370a082311461029a578063715018a6146102bb57806379cc6790146102d05780638da5cb5b146102f45780638f32d59b1461032557806395d89b411461033a578063983b2d561461034f5780639865027514610370578063a457c2d714610385578063a9059cbb146103a9578063aa271e1a146103cd578063be45fd62146103ee578063dd62ed3e14610457578063f2fde38b1461047e578063f3fef3a31461049f578063f6368f8a146104c3575b600080fd5b34801561012a57600080fd5b5061013361056a565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561016d578181015183820152602001610155565b50505050905090810190601f16801561019a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101b457600080fd5b506101cc600160a060020a03600435166024356105f8565b604080519115158252519081900360200190f35b3480156101ec57600080fd5b506101f56106e7565b60408051918252519081900360200190f35b34801561021357600080fd5b506101cc600160a060020a03600435811690602435166044356106ed565b34801561023d57600080fd5b506102466107de565b6040805160ff9092168252519081900360200190f35b34801561026857600080fd5b506101cc600160a060020a03600435166024356107e7565b34801561028c57600080fd5b50610298600435610908565b005b3480156102a657600080fd5b506101f5600160a060020a0360043516610915565b3480156102c757600080fd5b50610298610930565b3480156102dc57600080fd5b50610298600160a060020a036004351660243561099a565b34801561030057600080fd5b506103096109a8565b60408051600160a060020a039092168252519081900360200190f35b34801561033157600080fd5b506101cc6109b7565b34801561034657600080fd5b506101336109c8565b34801561035b57600080fd5b50610298600160a060020a0360043516610a23565b34801561037c57600080fd5b50610298610a40565b34801561039157600080fd5b506101cc600160a060020a0360043516602435610a4b565b3480156103b557600080fd5b506101cc600160a060020a0360043516602435610a7f565b3480156103d957600080fd5b506101cc600160a060020a0360043516610ab7565b3480156103fa57600080fd5b50604080516020600460443581810135601f81018490048402850184019095528484526101cc948235600160a060020a0316946024803595369594606494920191908190840183828082843750949750610ad09650505050505050565b34801561046357600080fd5b506101f5600160a060020a0360043581169060243516610b06565b34801561048a57600080fd5b50610298600160a060020a0360043516610b31565b3480156104ab57600080fd5b50610298600160a060020a0360043516602435610b4d565b3480156104cf57600080fd5b50604080516020600460443581810135601f81018490048402850184019095528484526101cc948235600160a060020a031694602480359536959460649492019190819084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a999881019791965091820194509250829150840183828082843750949750610d349650505050505050565b6005805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156105f05780601f106105c5576101008083540402835291602001916105f0565b820191906000526020600020905b8154815290600101906020018083116105d357829003601f168201915b505050505081565b6000600160a060020a0383161515610680576040805160e560020a62461bcd02815260206004820152603460248201527f5b417070726f7665204572726f725d205370656e646572206163636f756e742060448201527f63616e6e6f742062652030782061646472657373000000000000000000000000606482015290519081900360840190fd5b336000818152600260209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b60035490565b6000606060006106fc85611091565b1561076d5761070d86868685611099565b600160a060020a0387166000908152600260209081526040808320338452909152902054909150610744908563ffffffff6113e116565b600160a060020a03871660009081526002602090815260408083203384529091529020556107d5565b610779868686856113f8565b600160a060020a03871660009081526002602090815260408083203384529091529020549091506107b0908563ffffffff6113e116565b600160a060020a03871660009081526002602090815260408083203384529091529020555b95945050505050565b60075460ff1681565b6000600160a060020a038316151561086f576040805160e560020a62461bcd02815260206004820152603660248201527f5b416c6c6f77616e6365204572726f725d205370656e646572206163636f756e60448201527f742063616e6e6f74206265203078206164647265737300000000000000000000606482015290519081900360840190fd5b336000908152600260209081526040808320600160a060020a03871684529091529020546108a3908363ffffffff6115d216565b336000818152600260209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b61091233826115e4565b50565b600160a060020a031660009081526001602052604090205490565b6109386109b7565b151561094357600080fd5b60008054604051600160a060020a03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b6109a48282611668565b5050565b600054600160a060020a031690565b600054600160a060020a0316331490565b6006805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156105f05780601f106105c5576101008083540402835291602001916105f0565b610a2c33610ab7565b1515610a3757600080fd5b610912816116e5565b610a493361172d565b565b336000908152600260209081526040808320600160a060020a03861684529091528120546108a3908363ffffffff6113e116565b60006060610a8c84611091565b15610aa457610a9d33858584611099565b9150610ab0565b610a9d338585846113f8565b5092915050565b6000610aca60048363ffffffff61177516565b92915050565b6000610adb84611091565b15610af357610aec33858585611099565b9050610aff565b610aec338585856113f8565b9392505050565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b610b396109b7565b1515610b4457600080fd5b610912816117ac565b80610b5733610915565b1015610bd3576040805160e560020a62461bcd02815260206004820152603460248201527f42616c616e6365206d7573742062652067726561746572207468656e20616d6f60448201527f756e7420746f206265207472616e736665726564000000000000000000000000606482015290519081900360840190fd5b33600160a060020a0316634d840bcc6040518163ffffffff1660e060020a028152600401602060405180830381600087803b158015610c1157600080fd5b505af1158015610c25573d6000803e3d6000fd5b505050506040513d6020811015610c3b57600080fd5b50511515600114610c96576040805160e560020a62461bcd02815260206004820152601d60248201527f636f6e7472616374206973206e6f742077697468726472617761626c65000000604482015290519081900360640190fd5b600160a060020a038216600090815260016020526040902054610cbf908263ffffffff6115d216565b600160a060020a038316600090815260016020526040808220929092553381522054610cf1908263ffffffff6113e116565b336000818152600160209081526040918290209390935580518481529051600160a060020a038616936000805160206118c4833981519152928290030190a35050565b6000610d3f85611091565b1561107a5783610d4e33610915565b11610def576040805160e560020a62461bcd02815260206004820152604560248201527f5b5472616e73666572204572726f725d2042616c616e6365206d75737420626560448201527f2067726561746572207468656e20616d6f756e7420746f206265207472616e7360648201527f6665726564000000000000000000000000000000000000000000000000000000608482015290519081900360a40190fd5b610e0884610dfc33610915565b9063ffffffff6113e116565b33600090815260016020526040902055610e3184610e2587610915565b9063ffffffff6115d216565b6001600087600160a060020a0316600160a060020a031681526020019081526020016000208190555084600160a060020a03166000836040516020018082805190602001908083835b60208310610e995780518252601f199092019160209182019101610e7a565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b60208310610efc5780518252601f199092019160209182019101610edd565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902060e060020a9004903387876040518563ffffffff1660e060020a0281526004018084600160a060020a0316600160a060020a03168152602001838152602001828051906020019080838360005b83811015610f8e578181015183820152602001610f76565b50505050905090810190601f168015610fbb5780820380516001836020036101000a031916815260200191505b50935050505060006040518083038185885af193505050501515610fdb57fe5b826040518082805190602001908083835b6020831061100b5780518252601f199092019160209182019101610fec565b51815160209384036101000a6000190180199092169116179052604080519290940182900382208a83529351939550600160a060020a038b16945033937f9b6aa1faccbd47218eb2870ae6411b374a3cf25c4285a37ef90bcb3c1fdde9ac9350918290030190a4506001611089565b611086338686866113f8565b90505b949350505050565b6000903b1190565b6000826110a586610915565b11611146576040805160e560020a62461bcd02815260206004820152604560248201527f5b5472616e73666572204572726f725d2042616c616e6365206d75737420626560448201527f2067726561746572207468656e20616d6f756e7420746f206265207472616e7360648201527f6665726564000000000000000000000000000000000000000000000000000000608482015290519081900360a40190fd5b600160a060020a03841615156111cc576040805160e560020a62461bcd02815260206004820152602960248201527f5b5472616e73666572204572726f725d205f746f2063616e6e6f74206265203060448201527f7820616464726573730000000000000000000000000000000000000000000000606482015290519081900360840190fd5b6111d983610dfc87610915565b600160a060020a0386166000908152600160205260409020556111ff83610e2586610915565b6001600086600160a060020a0316600160a060020a031681526020019081526020016000208190555083600160a060020a031663c0ee0b8a8685856040518463ffffffff1660e060020a0281526004018084600160a060020a0316600160a060020a0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156112a757818101518382015260200161128f565b50505050905090810190601f1680156112d45780820380516001836020036101000a031916815260200191505b50945050505050600060405180830381600087803b1580156112f557600080fd5b505af1158015611309573d6000803e3d6000fd5b5050604080518681529051600160a060020a038089169450891692506000805160206118c48339815191529181900360200190a3816040518082805190602001908083835b6020831061136d5780518252601f19909201916020918201910161134e565b51815160209384036101000a6000190180199092169116179052604080519290940182900382208983529351939550600160a060020a038a811695508b16937f9b6aa1faccbd47218eb2870ae6411b374a3cf25c4285a37ef90bcb3c1fdde9ac9350918290030190a4506001949350505050565b600080838311156113f157600080fd5b5050900390565b60008261140486610915565b116114a5576040805160e560020a62461bcd02815260206004820152604560248201527f5b5472616e73666572204572726f725d2042616c616e6365206d75737420626560448201527f2067726561746572207468656e20616d6f756e7420746f206265207472616e7360648201527f6665726564000000000000000000000000000000000000000000000000000000608482015290519081900360a40190fd5b600160a060020a038416151561152b576040805160e560020a62461bcd02815260206004820152602960248201527f5b5472616e73666572204572726f725d205f746f2063616e6e6f74206265203060448201527f7820616464726573730000000000000000000000000000000000000000000000606482015290519081900360840190fd5b61153883610dfc87610915565b600160a060020a03861660009081526001602052604090205561155e83610e2586610915565b600160a060020a0380861660008181526001602090815260409182902094909455805187815290519193928916926000805160206118c483398151915292918290030190a3816040518082805190602001908083836020831061136d5780518252601f19909201916020918201910161134e565b600082820183811015610aff57600080fd5b6003546115f7908263ffffffff6113e116565b600355600160a060020a038216600090815260016020526040902054611623908263ffffffff6113e116565b600160a060020a0383166000818152600160209081526040808320949094558351858152935191936000805160206118c4833981519152929081900390910190a35050565b6116706109b7565b151561167b57600080fd5b61168582826115e4565b600160a060020a0382166000818152600260209081526040808320338085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35050565b6116f660048263ffffffff61182916565b604051600160a060020a038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b61173e60048263ffffffff61187716565b604051600160a060020a038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b6000600160a060020a038216151561178c57600080fd5b50600160a060020a03166000908152602091909152604090205460ff1690565b600160a060020a03811615156117c157600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600160a060020a038116151561183e57600080fd5b6118488282611775565b1561185257600080fd5b600160a060020a0316600090815260209190915260409020805460ff19166001179055565b600160a060020a038116151561188c57600080fd5b6118968282611775565b15156118a157600080fd5b600160a060020a0316600090815260209190915260409020805460ff191690555600ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa165627a7a72305820b51ff72d3e7d903ca68782c2e81abaaef276cdc503c56a1a186f3d5d1040d1ab0029",
  "deployedBytecode": "0x6080604052600436106101195763ffffffff60e060020a60003504166306fdde03811461011e578063095ea7b3146101a857806318160ddd146101e057806323b872dd14610207578063313ce56714610231578063395093511461025c57806342966c681461028057806370a082311461029a578063715018a6146102bb57806379cc6790146102d05780638da5cb5b146102f45780638f32d59b1461032557806395d89b411461033a578063983b2d561461034f5780639865027514610370578063a457c2d714610385578063a9059cbb146103a9578063aa271e1a146103cd578063be45fd62146103ee578063dd62ed3e14610457578063f2fde38b1461047e578063f3fef3a31461049f578063f6368f8a146104c3575b600080fd5b34801561012a57600080fd5b5061013361056a565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561016d578181015183820152602001610155565b50505050905090810190601f16801561019a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101b457600080fd5b506101cc600160a060020a03600435166024356105f8565b604080519115158252519081900360200190f35b3480156101ec57600080fd5b506101f56106e7565b60408051918252519081900360200190f35b34801561021357600080fd5b506101cc600160a060020a03600435811690602435166044356106ed565b34801561023d57600080fd5b506102466107de565b6040805160ff9092168252519081900360200190f35b34801561026857600080fd5b506101cc600160a060020a03600435166024356107e7565b34801561028c57600080fd5b50610298600435610908565b005b3480156102a657600080fd5b506101f5600160a060020a0360043516610915565b3480156102c757600080fd5b50610298610930565b3480156102dc57600080fd5b50610298600160a060020a036004351660243561099a565b34801561030057600080fd5b506103096109a8565b60408051600160a060020a039092168252519081900360200190f35b34801561033157600080fd5b506101cc6109b7565b34801561034657600080fd5b506101336109c8565b34801561035b57600080fd5b50610298600160a060020a0360043516610a23565b34801561037c57600080fd5b50610298610a40565b34801561039157600080fd5b506101cc600160a060020a0360043516602435610a4b565b3480156103b557600080fd5b506101cc600160a060020a0360043516602435610a7f565b3480156103d957600080fd5b506101cc600160a060020a0360043516610ab7565b3480156103fa57600080fd5b50604080516020600460443581810135601f81018490048402850184019095528484526101cc948235600160a060020a0316946024803595369594606494920191908190840183828082843750949750610ad09650505050505050565b34801561046357600080fd5b506101f5600160a060020a0360043581169060243516610b06565b34801561048a57600080fd5b50610298600160a060020a0360043516610b31565b3480156104ab57600080fd5b50610298600160a060020a0360043516602435610b4d565b3480156104cf57600080fd5b50604080516020600460443581810135601f81018490048402850184019095528484526101cc948235600160a060020a031694602480359536959460649492019190819084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a999881019791965091820194509250829150840183828082843750949750610d349650505050505050565b6005805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156105f05780601f106105c5576101008083540402835291602001916105f0565b820191906000526020600020905b8154815290600101906020018083116105d357829003601f168201915b505050505081565b6000600160a060020a0383161515610680576040805160e560020a62461bcd02815260206004820152603460248201527f5b417070726f7665204572726f725d205370656e646572206163636f756e742060448201527f63616e6e6f742062652030782061646472657373000000000000000000000000606482015290519081900360840190fd5b336000818152600260209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b60035490565b6000606060006106fc85611091565b1561076d5761070d86868685611099565b600160a060020a0387166000908152600260209081526040808320338452909152902054909150610744908563ffffffff6113e116565b600160a060020a03871660009081526002602090815260408083203384529091529020556107d5565b610779868686856113f8565b600160a060020a03871660009081526002602090815260408083203384529091529020549091506107b0908563ffffffff6113e116565b600160a060020a03871660009081526002602090815260408083203384529091529020555b95945050505050565b60075460ff1681565b6000600160a060020a038316151561086f576040805160e560020a62461bcd02815260206004820152603660248201527f5b416c6c6f77616e6365204572726f725d205370656e646572206163636f756e60448201527f742063616e6e6f74206265203078206164647265737300000000000000000000606482015290519081900360840190fd5b336000908152600260209081526040808320600160a060020a03871684529091529020546108a3908363ffffffff6115d216565b336000818152600260209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b61091233826115e4565b50565b600160a060020a031660009081526001602052604090205490565b6109386109b7565b151561094357600080fd5b60008054604051600160a060020a03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b6109a48282611668565b5050565b600054600160a060020a031690565b600054600160a060020a0316331490565b6006805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156105f05780601f106105c5576101008083540402835291602001916105f0565b610a2c33610ab7565b1515610a3757600080fd5b610912816116e5565b610a493361172d565b565b336000908152600260209081526040808320600160a060020a03861684529091528120546108a3908363ffffffff6113e116565b60006060610a8c84611091565b15610aa457610a9d33858584611099565b9150610ab0565b610a9d338585846113f8565b5092915050565b6000610aca60048363ffffffff61177516565b92915050565b6000610adb84611091565b15610af357610aec33858585611099565b9050610aff565b610aec338585856113f8565b9392505050565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b610b396109b7565b1515610b4457600080fd5b610912816117ac565b80610b5733610915565b1015610bd3576040805160e560020a62461bcd02815260206004820152603460248201527f42616c616e6365206d7573742062652067726561746572207468656e20616d6f60448201527f756e7420746f206265207472616e736665726564000000000000000000000000606482015290519081900360840190fd5b33600160a060020a0316634d840bcc6040518163ffffffff1660e060020a028152600401602060405180830381600087803b158015610c1157600080fd5b505af1158015610c25573d6000803e3d6000fd5b505050506040513d6020811015610c3b57600080fd5b50511515600114610c96576040805160e560020a62461bcd02815260206004820152601d60248201527f636f6e7472616374206973206e6f742077697468726472617761626c65000000604482015290519081900360640190fd5b600160a060020a038216600090815260016020526040902054610cbf908263ffffffff6115d216565b600160a060020a038316600090815260016020526040808220929092553381522054610cf1908263ffffffff6113e116565b336000818152600160209081526040918290209390935580518481529051600160a060020a038616936000805160206118c4833981519152928290030190a35050565b6000610d3f85611091565b1561107a5783610d4e33610915565b11610def576040805160e560020a62461bcd02815260206004820152604560248201527f5b5472616e73666572204572726f725d2042616c616e6365206d75737420626560448201527f2067726561746572207468656e20616d6f756e7420746f206265207472616e7360648201527f6665726564000000000000000000000000000000000000000000000000000000608482015290519081900360a40190fd5b610e0884610dfc33610915565b9063ffffffff6113e116565b33600090815260016020526040902055610e3184610e2587610915565b9063ffffffff6115d216565b6001600087600160a060020a0316600160a060020a031681526020019081526020016000208190555084600160a060020a03166000836040516020018082805190602001908083835b60208310610e995780518252601f199092019160209182019101610e7a565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b60208310610efc5780518252601f199092019160209182019101610edd565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902060e060020a9004903387876040518563ffffffff1660e060020a0281526004018084600160a060020a0316600160a060020a03168152602001838152602001828051906020019080838360005b83811015610f8e578181015183820152602001610f76565b50505050905090810190601f168015610fbb5780820380516001836020036101000a031916815260200191505b50935050505060006040518083038185885af193505050501515610fdb57fe5b826040518082805190602001908083835b6020831061100b5780518252601f199092019160209182019101610fec565b51815160209384036101000a6000190180199092169116179052604080519290940182900382208a83529351939550600160a060020a038b16945033937f9b6aa1faccbd47218eb2870ae6411b374a3cf25c4285a37ef90bcb3c1fdde9ac9350918290030190a4506001611089565b611086338686866113f8565b90505b949350505050565b6000903b1190565b6000826110a586610915565b11611146576040805160e560020a62461bcd02815260206004820152604560248201527f5b5472616e73666572204572726f725d2042616c616e6365206d75737420626560448201527f2067726561746572207468656e20616d6f756e7420746f206265207472616e7360648201527f6665726564000000000000000000000000000000000000000000000000000000608482015290519081900360a40190fd5b600160a060020a03841615156111cc576040805160e560020a62461bcd02815260206004820152602960248201527f5b5472616e73666572204572726f725d205f746f2063616e6e6f74206265203060448201527f7820616464726573730000000000000000000000000000000000000000000000606482015290519081900360840190fd5b6111d983610dfc87610915565b600160a060020a0386166000908152600160205260409020556111ff83610e2586610915565b6001600086600160a060020a0316600160a060020a031681526020019081526020016000208190555083600160a060020a031663c0ee0b8a8685856040518463ffffffff1660e060020a0281526004018084600160a060020a0316600160a060020a0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156112a757818101518382015260200161128f565b50505050905090810190601f1680156112d45780820380516001836020036101000a031916815260200191505b50945050505050600060405180830381600087803b1580156112f557600080fd5b505af1158015611309573d6000803e3d6000fd5b5050604080518681529051600160a060020a038089169450891692506000805160206118c48339815191529181900360200190a3816040518082805190602001908083835b6020831061136d5780518252601f19909201916020918201910161134e565b51815160209384036101000a6000190180199092169116179052604080519290940182900382208983529351939550600160a060020a038a811695508b16937f9b6aa1faccbd47218eb2870ae6411b374a3cf25c4285a37ef90bcb3c1fdde9ac9350918290030190a4506001949350505050565b600080838311156113f157600080fd5b5050900390565b60008261140486610915565b116114a5576040805160e560020a62461bcd02815260206004820152604560248201527f5b5472616e73666572204572726f725d2042616c616e6365206d75737420626560448201527f2067726561746572207468656e20616d6f756e7420746f206265207472616e7360648201527f6665726564000000000000000000000000000000000000000000000000000000608482015290519081900360a40190fd5b600160a060020a038416151561152b576040805160e560020a62461bcd02815260206004820152602960248201527f5b5472616e73666572204572726f725d205f746f2063616e6e6f74206265203060448201527f7820616464726573730000000000000000000000000000000000000000000000606482015290519081900360840190fd5b61153883610dfc87610915565b600160a060020a03861660009081526001602052604090205561155e83610e2586610915565b600160a060020a0380861660008181526001602090815260409182902094909455805187815290519193928916926000805160206118c483398151915292918290030190a3816040518082805190602001908083836020831061136d5780518252601f19909201916020918201910161134e565b600082820183811015610aff57600080fd5b6003546115f7908263ffffffff6113e116565b600355600160a060020a038216600090815260016020526040902054611623908263ffffffff6113e116565b600160a060020a0383166000818152600160209081526040808320949094558351858152935191936000805160206118c4833981519152929081900390910190a35050565b6116706109b7565b151561167b57600080fd5b61168582826115e4565b600160a060020a0382166000818152600260209081526040808320338085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35050565b6116f660048263ffffffff61182916565b604051600160a060020a038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b61173e60048263ffffffff61187716565b604051600160a060020a038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b6000600160a060020a038216151561178c57600080fd5b50600160a060020a03166000908152602091909152604090205460ff1690565b600160a060020a03811615156117c157600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600160a060020a038116151561183e57600080fd5b6118488282611775565b1561185257600080fd5b600160a060020a0316600090815260209190915260409020805460ff19166001179055565b600160a060020a038116151561188c57600080fd5b6118968282611775565b15156118a157600080fd5b600160a060020a0316600090815260209190915260409020805460ff191690555600ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa165627a7a72305820b51ff72d3e7d903ca68782c2e81abaaef276cdc503c56a1a186f3d5d1040d1ab0029",
  "sourceMap": "618:43:11:-;562:190;618:43;;562:190;618:43;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;665:28:11;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;697:25:11;;;-1:-1:-1;;697:25:11;;;727:23;5:2:-1;;;;30:1;27;20:12;5:2;-1:-1;516:6:14;:19;;-1:-1:-1;;;;;;516:19:14;525:10;516:19;;;;550:40;;-1:-1:-1;;;;;583:6:14;;;;;516;550:40;;516:6;;550:40;269:22:13;280:10;269;;;;:22;:::i;:::-;562:190:11;;674:119:13;730:21;:8;743:7;730:12;;;;;;:21;:::i;:::-;766:20;;-1:-1:-1;;;;;766:20:13;;;;;;;;674:119;:::o;258:181:16:-;-1:-1:-1;;;;;334:21:16;;;;326:30;;;;;;375:18;379:4;385:7;375:3;;;;:18;:::i;:::-;374:19;366:28;;;;;;-1:-1:-1;;;;;405:20:16;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;405:27:16;428:4;405:27;;;258:181::o;780:190::-;876:4;-1:-1:-1;;;;;904:21:16;;;;896:30;;;;;;-1:-1:-1;;;;;;943:20:16;:11;:20;;;;;;;;;;;;;;;780:190::o;562::11:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;562:190:11;;;-1:-1:-1;562:190:11;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "562:190:11:-;;;;;;;;;-1:-1:-1;;;562:190:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;618:43;;8:9:-1;5:2;;;30:1;27;20:12;5:2;618:43:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;618:43:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3578:295:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3578:295:1;-1:-1:-1;;;;;3578:295:1;;;;;;;;;;;;;;;;;;;;;;;;;1347:89;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1347:89:1;;;;;;;;;;;;;;;;;;;;2431:519;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2431:519:1;-1:-1:-1;;;;;2431:519:1;;;;;;;;;;;;697:25:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;697:25:11;;;;;;;;;;;;;;;;;;;;;;;4336:378:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;4336:378:1;-1:-1:-1;;;;;4336:378:1;;;;;;;299:77:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;299:77:2;;;;;;;1589:104:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1589:104:1;-1:-1:-1;;;;;1589:104:1;;;;;1348:137:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1348:137:14;;;;628:93:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;628:93:2;-1:-1:-1;;;;;628:93:2;;;;;;;660:77:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;660:77:14;;;;;;;;-1:-1:-1;;;;;660:77:14;;;;;;;;;;;;;;980:90;;8:9:-1;5:2;;;30:1;27;20:12;5:2;980:90:14;;;;665:28:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;665:28:11;;;;499:90:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;499:90:13;-1:-1:-1;;;;;499:90:13;;;;;594:75;;8:9:-1;5:2;;;30:1;27;20:12;5:2;594:75:13;;;;5181:297:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;5181:297:1;-1:-1:-1;;;;;5181:297:1;;;;;;;7778:311;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;7778:311:1;-1:-1:-1;;;;;7778:311:1;;;;;;;387:107:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;387:107:13;-1:-1:-1;;;;;387:107:13;;;;;7110:293:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;7110:293:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7110:293:1;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7110:293:1;;-1:-1:-1;7110:293:1;;-1:-1:-1;;;;;;;7110:293:1;2021:129;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2021:129:1;-1:-1:-1;;;;;2021:129:1;;;;;;;;;;1656:107:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1656:107:14;-1:-1:-1;;;;;1656:107:14;;;;;12572:455:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;12572:455:1;-1:-1:-1;;;;;12572:455:1;;;;;;;5952:700;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;5952:700:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5952:700:1;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5952:700:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5952:700:1;;;;-1:-1:-1;5952:700:1;-1:-1:-1;5952:700:1;;-1:-1:-1;5952:700:1;;;;;;;;-1:-1:-1;5952:700:1;;-1:-1:-1;5952:700:1;;-1:-1:-1;;;;;;;5952:700:1;618:43:11;;;;;;;;;;;;;;;-1:-1:-1;;618:43:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3578:295:1:-;3643:4;-1:-1:-1;;;;;3668:21:1;;;;3659:87;;;;;-1:-1:-1;;;;;3659:87:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3766:10;3757:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;3757:29:1;;;;;;;;;;;;:37;;;3809:36;;;;;;;3757:29;;3766:10;3809:36;;;;;;;;;;;-1:-1:-1;3862:4:1;3578:295;;;;:::o;1347:89::-;1417:12;;1347:89;:::o;2431:519::-;2510:4;2525:18;2553:11;2577:15;2589:2;2577:11;:15::i;:::-;2574:347;;;2617:43;2637:4;2643:2;2647:5;2654;2617:19;:43::i;:::-;-1:-1:-1;;;;;2703:14:1;;;;;;:8;:14;;;;;;;;2718:10;2703:26;;;;;;;;2608:52;;-1:-1:-1;2703:37:1;;2734:5;2703:37;:30;:37;:::i;:::-;-1:-1:-1;;;;;2674:14:1;;;;;;:8;:14;;;;;;;;2689:10;2674:26;;;;;;;:66;2574:347;;;2788:42;2807:4;2813:2;2817:5;2824;2788:18;:42::i;:::-;-1:-1:-1;;;;;2873:14:1;;;;;;:8;:14;;;;;;;;2888:10;2873:26;;;;;;;;2779:51;;-1:-1:-1;2873:37:1;;2904:5;2873:37;:30;:37;:::i;:::-;-1:-1:-1;;;;;2844:14:1;;;;;;:8;:14;;;;;;;;2859:10;2844:26;;;;;;;:66;2574:347;2937:6;2431:519;-1:-1:-1;;;;;2431:519:1:o;697:25:11:-;;;;;;:::o;4336:378:1:-;4416:4;-1:-1:-1;;;;;4440:21:1;;;;4431:89;;;;;-1:-1:-1;;;;;4431:89:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4573:10;4564:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4564:29:1;;;;;;;;;;:45;;4598:10;4564:45;:33;:45;:::i;:::-;4540:10;4531:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4531:29:1;;;;;;;;;;;;:79;;;4626:60;;;;;;4531:29;;4626:60;;;;;;;;;;;-1:-1:-1;4703:4:1;4336:378;;;;:::o;299:77:2:-;345:24;351:10;363:5;345;:24::i;:::-;299:77;:::o;1589:104:1:-;-1:-1:-1;;;;;1670:16:1;1644:7;1670:16;;;:9;:16;;;;;;;1589:104::o;1348:137:14:-;864:9;:7;:9::i;:::-;856:18;;;;;;;;1446:1;1430:6;;1409:40;;-1:-1:-1;;;;;1430:6:14;;;;1409:40;;1446:1;;1409:40;1476:1;1459:19;;-1:-1:-1;;1459:19:14;;;1348:137::o;628:93:2:-;692:22;702:4;708:5;692:9;:22::i;:::-;628:93;;:::o;660:77:14:-;698:7;724:6;-1:-1:-1;;;;;724:6:14;660:77;:::o;980:90::-;1020:4;1057:6;-1:-1:-1;;;;;1057:6:14;1043:10;:20;;980:90::o;665:28:11:-;;;;;;;;;;;;;;;-1:-1:-1;;665:28:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;499:90:13;343:20;352:10;343:8;:20::i;:::-;335:29;;;;;;;;563:19;574:7;563:10;:19::i;594:75::-;637:25;651:10;637:13;:25::i;:::-;594:75::o;5181:297:1:-;5332:10;5266:4;5323:20;;;:8;:20;;;;;;;;-1:-1:-1;;;;;5323:29:1;;;;;;;;;;:50;;5357:15;5323:50;:33;:50;:::i;7778:311::-;7836:12;7860:18;7891:15;7903:2;7891:11;:15::i;:::-;7888:195;;;7929:49;7949:10;7961:2;7965:5;7972;7929:19;:49::i;:::-;7922:56;;;;7888:195;8024:48;8043:10;8055:2;8059:5;8066;8024:18;:48::i;7888:195::-;7778:311;;;;;:::o;387:107:13:-;443:4;466:21;:8;479:7;466:21;:12;:21;:::i;:::-;459:28;387:107;-1:-1:-1;;387:107:13:o;7110:293:1:-;7180:12;7207:15;7219:2;7207:11;:15::i;:::-;7204:193;;;7245:48;7265:10;7277:2;7281:5;7288:4;7245:19;:48::i;:::-;7238:55;;;;7204:193;7339:47;7358:10;7370:2;7374:5;7381:4;7339:18;:47::i;7204:193::-;7110:293;;;;;:::o;2021:129::-;-1:-1:-1;;;;;2119:15:1;;;2093:7;2119:15;;;:8;:15;;;;;;;;:24;;;;;;;;;;;;;2021:129::o;1656:107:14:-;864:9;:7;:9::i;:::-;856:18;;;;;;;;1728:28;1747:8;1728:18;:28::i;12572:455:1:-;12684:6;12659:21;12669:10;12659:9;:21::i;:::-;:31;;12650:97;;;;;-1:-1:-1;;;;;12650:97:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12773:10;-1:-1:-1;;;;;12765:34:1;;:36;;;;;-1:-1:-1;;;12765:36:1;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12765:36:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12765:36:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;12765:36:1;:44;;12805:4;12765:44;12757:86;;;;;-1:-1:-1;;;;;12757:86:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;12873:16:1;;;;;;:9;:16;;;;;;:28;;12894:6;12873:28;:20;:28;:::i;:::-;-1:-1:-1;;;;;12854:16:1;;;;;;:9;:16;;;;;;:47;;;;12947:10;12937:21;;;;:33;;12963:6;12937:33;:25;:33;:::i;:::-;12923:10;12913:21;;;;:9;:21;;;;;;;;;:57;;;;12985:35;;;;;;;-1:-1:-1;;;;;12985:35:1;;;-1:-1:-1;;;;;;;;;;;12985:35:1;;;;;;;12572:455;;:::o;5952:700::-;6046:12;6073:15;6085:2;6073:11;:15::i;:::-;6070:576;;;6137:5;6113:21;6123:10;6113:9;:21::i;:::-;:29;6104:112;;;;;-1:-1:-1;;;;;6104:112:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6254:32;6280:5;6254:21;6264:10;6254:9;:21::i;:::-;:25;:32;:25;:32;:::i;:::-;6240:10;6230:21;;;;:9;:21;;;;;:56;6316:24;6334:5;6316:13;6326:2;6316:9;:13::i;:::-;:17;:24;:17;:24;:::i;:::-;6300:9;:13;6310:2;-1:-1:-1;;;;;6300:13:1;-1:-1:-1;;;;;6300:13:1;;;;;;;;;;;;:40;;;;6361:2;-1:-1:-1;;;;;6361:7:1;6375:1;6412:15;6395:33;;;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;6395:33:1;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;6395:33:1;;;6385:44;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;6385:44:1;;;;;;;;;;;;;;;;-1:-1:-1;;;6361:95:1;;;6432:10;6444:5;6451:4;6361:95;;;;;-1:-1:-1;;;6361:95:1;;;;;;;-1:-1:-1;;;;;6361:95:1;-1:-1:-1;;;;;6361:95:1;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;6361:95:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6354:103;;;;;;6512:4;6476:41;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;6476:41:1;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6476:41:1;;;-1:-1:-1;6489:10:1;;6476:41;;-1:-1:-1;6476:41:1;;;;;;;-1:-1:-1;6538:4:1;6531:11;;6070:576;6588:47;6607:10;6619:2;6623:5;6630:4;6588:18;:47::i;:::-;6581:54;;6070:576;5952:700;;;;;;:::o;10108:205::-;10166:16;10252:18;;10297:8;;10108:205::o;11707:619::-;11807:12;11859:6;11840:16;11850:5;11840:9;:16::i;:::-;:25;11831:108;;;;;-1:-1:-1;;;;;11831:108:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11958:17:1;;;;11949:72;;;;;-1:-1:-1;;;;;11949:72:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12051:28;12072:6;12051:16;12061:5;12051:9;:16::i;:28::-;-1:-1:-1;;;;;12032:16:1;;;;;;:9;:16;;;;;:47;12106:26;12125:6;12106:14;12116:3;12106:9;:14::i;:26::-;12089:9;:14;12099:3;-1:-1:-1;;;;;12089:14:1;-1:-1:-1;;;;;12089:14:1;;;;;;;;;;;;:43;;;;12152:3;-1:-1:-1;;;;;12142:28:1;;12171:5;12178:6;12186:5;12142:50;;;;;-1:-1:-1;;;12142:50:1;;;;;;;-1:-1:-1;;;;;12142:50:1;-1:-1:-1;;;;;12142:50:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;12142:50:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12142:50:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;12216:28:1;;;;;;;;-1:-1:-1;;;;;12216:28:1;;;;-1:-1:-1;12216:28:1;;;-1:-1:-1;;;;;;;;;;;;12216:28:1;;;;;;;;12292:5;12259:39;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;12259:39:1;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;12259:39:1;;;;-1:-1:-1;12259:39:1;;;;;-1:-1:-1;12259:39:1;;;;;;;-1:-1:-1;12315:4:1;11707:619;;;;;;:::o;1155:145:17:-;1213:7;;1240:6;;;;1232:15;;;;;;-1:-1:-1;;1269:5:17;;;1155:145::o;10695:550:1:-;10794:12;10846:6;10827:16;10837:5;10827:9;:16::i;:::-;:25;10818:108;;;;;-1:-1:-1;;;;;10818:108:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;10945:17:1;;;;10936:72;;;;;-1:-1:-1;;;;;10936:72:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11038:28;11059:6;11038:16;11048:5;11038:9;:16::i;:28::-;-1:-1:-1;;;;;11019:16:1;;;;;;:9;:16;;;;;:47;11093:26;11112:6;11093:14;11103:3;11093:9;:14::i;:26::-;-1:-1:-1;;;;;11076:14:1;;;;;;;:9;:14;;;;;;;;;:43;;;;11135:28;;;;;;;11076:14;;11135:28;;;;-1:-1:-1;;;;;;;;;;;11135:28:1;;;;;;;;11211:5;11178:39;;;;;;;;;;;;;66:2:-1;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;1371:145:17;1429:7;1460:5;;;1483:6;;;;1475:15;;;;;8967:222:1;9048:12;;:23;;9065:5;9048:23;:16;:23;:::i;:::-;9033:12;:38;-1:-1:-1;;;;;9102:18:1;;;;;;:9;:18;;;;;;:29;;9125:5;9102:29;:22;:29;:::i;:::-;-1:-1:-1;;;;;9081:18:1;;;;;;:9;:18;;;;;;;;:50;;;;9146:36;;;;;;;9081:18;;-1:-1:-1;;;;;;;;;;;9146:36:1;;;;;;;;;;8967:222;;:::o;9505:349::-;864:9:14;:7;:9::i;:::-;856:18;;;;;;;;9751:21:1;9757:7;9766:5;9751;:21::i;:::-;-1:-1:-1;;;;;9787:60:1;;9817:17;;;;:8;:17;;;;;;;;9805:10;9817:29;;;;;;;;;;;9787:60;;;;;;;9805:10;;9787:60;;;;;;;;;;;;9505:349;;:::o;674:119:13:-;730:21;:8;743:7;730:21;:12;:21;:::i;:::-;766:20;;-1:-1:-1;;;;;766:20:13;;;;;;;;674:119;:::o;798:127::-;857:24;:8;873:7;857:24;:15;:24;:::i;:::-;896:22;;-1:-1:-1;;;;;896:22:13;;;;;;;;798:127;:::o;780:190:16:-;876:4;-1:-1:-1;;;;;904:21:16;;;;896:30;;;;;;-1:-1:-1;;;;;;943:20:16;:11;:20;;;;;;;;;;;;;;;780:190::o;1907:183:14:-;-1:-1:-1;;;;;1980:22:14;;;;1972:31;;;;;;2039:6;;;2018:38;;-1:-1:-1;;;;;2018:38:14;;;;2039:6;;;2018:38;;;2066:6;:17;;-1:-1:-1;;2066:17:14;-1:-1:-1;;;;;2066:17:14;;;;;;;;;;1907:183::o;258:181:16:-;-1:-1:-1;;;;;334:21:16;;;;326:30;;;;;;375:18;379:4;385:7;375:3;:18::i;:::-;374:19;366:28;;;;;;-1:-1:-1;;;;;405:20:16;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;405:27:16;428:4;405:27;;;258:181::o;511:184::-;-1:-1:-1;;;;;590:21:16;;;;582:30;;;;;;630:18;634:4;640:7;630:3;:18::i;:::-;622:27;;;;;;;;-1:-1:-1;;;;;660:20:16;683:5;660:20;;;;;;;;;;;:28;;-1:-1:-1;;660:28:16;;;511:184::o",
  "source": "pragma solidity ^0.4.24;\n\nimport \"./ERC223Mintable.sol\";\nimport \"./ERC223Burnable.sol\";\n\n/**\n * @title ERC223 Token\n *\n * @dev Lendflo implementation of ERC223 Token originally suggested by: \n * https://github.com/Dexaran/ERC223-token-standard\n * and strongly based on standard ERC20 Token:\n * https://github.com/OpenZeppelin/openzeppelin-solidity/blob/master/contracts/token/ERC20/ERC20.sol\n * Lendflo ERC223 implements light fallback function that is not pure\n * and therefore allows to execute other functions in the contract after the transfer of funds.\n */\ncontract LDFToken is ERC223Mintable, ERC223Burnable{\n\n  string public name = \"Lendflo Digital Fiat\";\n  string public symbol = \"LDF\";\n  uint8 public decimals = 0;\n\n  constructor() public {}\n}",
  "sourcePath": "/home/ubuntu/Lendflo-LDF-ERC223/contracts/LDFToken.sol",
  "ast": {
    "absolutePath": "/home/ubuntu/Lendflo-LDF-ERC223/contracts/LDFToken.sol",
    "exportedSymbols": {
      "LDFToken": [
        1401
      ]
    },
    "id": 1402,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1381,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:11"
      },
      {
        "absolutePath": "/home/ubuntu/Lendflo-LDF-ERC223/contracts/ERC223Mintable.sol",
        "file": "./ERC223Mintable.sol",
        "id": 1382,
        "nodeType": "ImportDirective",
        "scope": 1402,
        "sourceUnit": 948,
        "src": "26:30:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/ubuntu/Lendflo-LDF-ERC223/contracts/ERC223Burnable.sol",
        "file": "./ERC223Burnable.sol",
        "id": 1383,
        "nodeType": "ImportDirective",
        "scope": 1402,
        "sourceUnit": 867,
        "src": "57:30:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1384,
              "name": "ERC223Mintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 947,
              "src": "583:14:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC223Mintable_$947",
                "typeString": "contract ERC223Mintable"
              }
            },
            "id": 1385,
            "nodeType": "InheritanceSpecifier",
            "src": "583:14:11"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1386,
              "name": "ERC223Burnable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 866,
              "src": "599:14:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC223Burnable_$866",
                "typeString": "contract ERC223Burnable"
              }
            },
            "id": 1387,
            "nodeType": "InheritanceSpecifier",
            "src": "599:14:11"
          }
        ],
        "contractDependencies": [
          835,
          866,
          947,
          1561,
          1670
        ],
        "contractKind": "contract",
        "documentation": "@title ERC223 Token\n * @dev Lendflo implementation of ERC223 Token originally suggested by: \nhttps://github.com/Dexaran/ERC223-token-standard\nand strongly based on standard ERC20 Token:\nhttps://github.com/OpenZeppelin/openzeppelin-solidity/blob/master/contracts/token/ERC20/ERC20.sol\nLendflo ERC223 implements light fallback function that is not pure\nand therefore allows to execute other functions in the contract after the transfer of funds.",
        "fullyImplemented": true,
        "id": 1401,
        "linearizedBaseContracts": [
          1401,
          866,
          947,
          1561,
          835,
          1670
        ],
        "name": "LDFToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1390,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 1401,
            "src": "618:43:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 1388,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "618:6:11",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "4c656e64666c6f204469676974616c2046696174",
              "id": 1389,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "639:22:11",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_2698fbba4a534c117b80ece121283eb038e15649e5ee1773666b5aac8da23b47",
                "typeString": "literal_string \"Lendflo Digital Fiat\""
              },
              "value": "Lendflo Digital Fiat"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1393,
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "scope": 1401,
            "src": "665:28:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 1391,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "665:6:11",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "4c4446",
              "id": 1392,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "688:5:11",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_3ab6fbe3a1284a9736bde8b0b1cbca1ec6795868719ff20d9be292b58efc4708",
                "typeString": "literal_string \"LDF\""
              },
              "value": "LDF"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1396,
            "name": "decimals",
            "nodeType": "VariableDeclaration",
            "scope": 1401,
            "src": "697:25:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 1394,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "697:5:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 1395,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "721:1:11",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1399,
              "nodeType": "Block",
              "src": "748:2:11",
              "statements": []
            },
            "documentation": null,
            "id": 1400,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1397,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "738:2:11"
            },
            "payable": false,
            "returnParameters": {
              "id": 1398,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "748:0:11"
            },
            "scope": 1401,
            "src": "727:23:11",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1402,
        "src": "562:190:11"
      }
    ],
    "src": "0:752:11"
  },
  "legacyAST": {
    "absolutePath": "/home/ubuntu/Lendflo-LDF-ERC223/contracts/LDFToken.sol",
    "exportedSymbols": {
      "LDFToken": [
        1401
      ]
    },
    "id": 1402,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1381,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:11"
      },
      {
        "absolutePath": "/home/ubuntu/Lendflo-LDF-ERC223/contracts/ERC223Mintable.sol",
        "file": "./ERC223Mintable.sol",
        "id": 1382,
        "nodeType": "ImportDirective",
        "scope": 1402,
        "sourceUnit": 948,
        "src": "26:30:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/ubuntu/Lendflo-LDF-ERC223/contracts/ERC223Burnable.sol",
        "file": "./ERC223Burnable.sol",
        "id": 1383,
        "nodeType": "ImportDirective",
        "scope": 1402,
        "sourceUnit": 867,
        "src": "57:30:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1384,
              "name": "ERC223Mintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 947,
              "src": "583:14:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC223Mintable_$947",
                "typeString": "contract ERC223Mintable"
              }
            },
            "id": 1385,
            "nodeType": "InheritanceSpecifier",
            "src": "583:14:11"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1386,
              "name": "ERC223Burnable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 866,
              "src": "599:14:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC223Burnable_$866",
                "typeString": "contract ERC223Burnable"
              }
            },
            "id": 1387,
            "nodeType": "InheritanceSpecifier",
            "src": "599:14:11"
          }
        ],
        "contractDependencies": [
          835,
          866,
          947,
          1561,
          1670
        ],
        "contractKind": "contract",
        "documentation": "@title ERC223 Token\n * @dev Lendflo implementation of ERC223 Token originally suggested by: \nhttps://github.com/Dexaran/ERC223-token-standard\nand strongly based on standard ERC20 Token:\nhttps://github.com/OpenZeppelin/openzeppelin-solidity/blob/master/contracts/token/ERC20/ERC20.sol\nLendflo ERC223 implements light fallback function that is not pure\nand therefore allows to execute other functions in the contract after the transfer of funds.",
        "fullyImplemented": true,
        "id": 1401,
        "linearizedBaseContracts": [
          1401,
          866,
          947,
          1561,
          835,
          1670
        ],
        "name": "LDFToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1390,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 1401,
            "src": "618:43:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 1388,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "618:6:11",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "4c656e64666c6f204469676974616c2046696174",
              "id": 1389,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "639:22:11",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_2698fbba4a534c117b80ece121283eb038e15649e5ee1773666b5aac8da23b47",
                "typeString": "literal_string \"Lendflo Digital Fiat\""
              },
              "value": "Lendflo Digital Fiat"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1393,
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "scope": 1401,
            "src": "665:28:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 1391,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "665:6:11",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "4c4446",
              "id": 1392,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "688:5:11",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_3ab6fbe3a1284a9736bde8b0b1cbca1ec6795868719ff20d9be292b58efc4708",
                "typeString": "literal_string \"LDF\""
              },
              "value": "LDF"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1396,
            "name": "decimals",
            "nodeType": "VariableDeclaration",
            "scope": 1401,
            "src": "697:25:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 1394,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "697:5:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 1395,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "721:1:11",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1399,
              "nodeType": "Block",
              "src": "748:2:11",
              "statements": []
            },
            "documentation": null,
            "id": 1400,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1397,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "738:2:11"
            },
            "payable": false,
            "returnParameters": {
              "id": 1398,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "748:0:11"
            },
            "scope": 1401,
            "src": "727:23:11",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1402,
        "src": "562:190:11"
      }
    ],
    "src": "0:752:11"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Linux.g++"
  },
  "networks": {},
  "schemaVersion": "3.0.1",
  "updatedAt": "2019-02-12T17:53:42.210Z",
  "devdoc": {
    "methods": {
      "allowance(address,address)": {
        "details": "Function to check the amount of tokens that an owner allowed to a spender.",
        "params": {
          "owner": "address The address which owns the funds.",
          "spender": "address The address which will spend the funds."
        },
        "return": "A uint256 specifying the amount of tokens still available for the spender."
      },
      "approve(address,uint256)": {
        "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
        "params": {
          "spender": "The address which will spend the funds.",
          "value": "The amount of tokens to be spent."
        }
      },
      "balanceOf(address)": {
        "details": "Function to return a balance of the address.",
        "return": "A uint256 specifying the amount of tokens by the spender."
      },
      "burn(uint256)": {
        "details": "Burns a specific amount of tokens.",
        "params": {
          "value": "The amount of token to be burned."
        }
      },
      "burnFrom(address,uint256)": {
        "details": "Burns a specific amount of tokens from the target address and decrements allowance",
        "params": {
          "from": "address The address which you want to send tokens from",
          "value": "uint256 The amount of token to be burned"
        }
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol",
        "params": {
          "spender": "The address which will spend the funds.",
          "subtractedValue": "The amount of tokens to decrease the allowance by."
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol",
        "params": {
          "addedValue": "The amount of tokens to increase the allowance by.",
          "spender": "The address which will spend the funds."
        }
      },
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "totalSupply()": {
        "details": "Function to access total supply of tokens ",
        "return": "A uint256 specifying the total amount of coins in circulation."
      },
      "transfer(address,uint256)": {
        "details": "Public function that allows to transfer tokens. Function implements recognition if the recepeient is a contract or not and executes different subfunctions.",
        "params": {
          "to": "Address of the recepient of the tokens.",
          "value": "The amount of the tokens to be transfered."
        },
        "return": "A bool defining if the transfer was succesful."
      },
      "transfer(address,uint256,bytes)": {
        "details": "Public function that allows to transfer tokens with additional data.  Function implements recognition if the recepeient is a contract or not and executes different subfunctions.",
        "params": {
          "data": "Additional data to be send to the recepient.",
          "to": "Address of the recepient of the tokens.",
          "value": "The amount of the tokens to be transfered."
        },
        "return": "A bool defining if the transfer was succesful."
      },
      "transfer(address,uint256,bytes,string)": {
        "details": "Public function that allows to transfer tokens with additional data  and customized fallback.",
        "params": {
          "custom_fallback": "Customized fallback that is executed after the transfer of the tokens.",
          "data": "Additional data to be send to the recepient.",
          "to": "Address of the recepient of the tokens.",
          "value": "The amount of the tokens to be transfered."
        },
        "return": "A bool defining if the transfer was succesful."
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfer tokens from one address to another",
        "params": {
          "from": "address The address which you want to send tokens from",
          "to": "address The address which you want to transfer to",
          "value": "uint256 the amount of tokens to be transferred"
        }
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      },
      "withdraw(address,uint256)": {
        "details": "withdraw tokens from the contract. Function can only be called by a contract which holds the money.",
        "params": {
          "_from": "address that executed the contract",
          "_value": "amount of tokens to withdraw"
        }
      }
    },
    "title": "ERC223 Token"
  },
  "userdoc": {
    "methods": {
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      }
    }
  }
}