{
  "contractName": "ERC223Burnable",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        },
        {
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        },
        {
          "name": "data",
          "type": "bytes"
        },
        {
          "name": "custom_fallback",
          "type": "string"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "TransferData",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x6080604081905260008054600160a060020a0319163317808255600160a060020a0316917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a361151b806100576000396000f3006080604052600436106100d75763ffffffff60e060020a600035041663095ea7b381146100dc57806318160ddd1461011457806323b872dd1461013b578063395093511461016557806342966c681461018957806370a08231146101a3578063715018a6146101c457806379cc6790146101d95780638da5cb5b146101fd5780638f32d59b1461022e578063a457c2d714610243578063a9059cbb14610267578063be45fd621461028b578063dd62ed3e146102f4578063f2fde38b1461031b578063f3fef3a31461033c578063f6368f8a14610360575b600080fd5b3480156100e857600080fd5b50610100600160a060020a0360043516602435610407565b604080519115158252519081900360200190f35b34801561012057600080fd5b506101296104f6565b60408051918252519081900360200190f35b34801561014757600080fd5b50610100600160a060020a03600435811690602435166044356104fc565b34801561017157600080fd5b50610100600160a060020a03600435166024356105ed565b34801561019557600080fd5b506101a160043561070e565b005b3480156101af57600080fd5b50610129600160a060020a036004351661071b565b3480156101d057600080fd5b506101a1610736565b3480156101e557600080fd5b506101a1600160a060020a03600435166024356107a0565b34801561020957600080fd5b506102126107ae565b60408051600160a060020a039092168252519081900360200190f35b34801561023a57600080fd5b506101006107bd565b34801561024f57600080fd5b50610100600160a060020a03600435166024356107ce565b34801561027357600080fd5b50610100600160a060020a0360043516602435610802565b34801561029757600080fd5b50604080516020600460443581810135601f8101849004840285018401909552848452610100948235600160a060020a031694602480359536959460649492019190819084018382808284375094975061083a9650505050505050565b34801561030057600080fd5b50610129600160a060020a0360043581169060243516610870565b34801561032757600080fd5b506101a1600160a060020a036004351661089b565b34801561034857600080fd5b506101a1600160a060020a03600435166024356108b7565b34801561036c57600080fd5b50604080516020600460443581810135601f8101849004840285018401909552848452610100948235600160a060020a031694602480359536959460649492019190819084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a999881019791965091820194509250829150840183828082843750949750610a9e9650505050505050565b6000600160a060020a038316151561048f576040805160e560020a62461bcd02815260206004820152603460248201527f5b417070726f7665204572726f725d205370656e646572206163636f756e742060448201527f63616e6e6f742062652030782061646472657373000000000000000000000000606482015290519081900360840190fd5b336000818152600260209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b60035490565b60006060600061050b85610dfc565b1561057c5761051c86868685610e04565b600160a060020a0387166000908152600260209081526040808320338452909152902054909150610553908563ffffffff61114d16565b600160a060020a03871660009081526002602090815260408083203384529091529020556105e4565b61058886868685611164565b600160a060020a03871660009081526002602090815260408083203384529091529020549091506105bf908563ffffffff61114d16565b600160a060020a03871660009081526002602090815260408083203384529091529020555b95945050505050565b6000600160a060020a0383161515610675576040805160e560020a62461bcd02815260206004820152603660248201527f5b416c6c6f77616e6365204572726f725d205370656e646572206163636f756e60448201527f742063616e6e6f74206265203078206164647265737300000000000000000000606482015290519081900360840190fd5b336000908152600260209081526040808320600160a060020a03871684529091529020546106a9908363ffffffff61133f16565b336000818152600260209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b6107183382611351565b50565b600160a060020a031660009081526001602052604090205490565b61073e6107bd565b151561074957600080fd5b60008054604051600160a060020a03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b6107aa82826113d5565b5050565b600054600160a060020a031690565b600054600160a060020a0316331490565b336000908152600260209081526040808320600160a060020a03861684529091528120546106a9908363ffffffff61114d16565b6000606061080f84610dfc565b156108275761082033858584610e04565b9150610833565b61082033858584611164565b5092915050565b600061084584610dfc565b1561085d5761085633858585610e04565b9050610869565b61085633858585611164565b9392505050565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b6108a36107bd565b15156108ae57600080fd5b61071881611452565b806108c13361071b565b101561093d576040805160e560020a62461bcd02815260206004820152603460248201527f42616c616e6365206d7573742062652067726561746572207468656e20616d6f60448201527f756e7420746f206265207472616e736665726564000000000000000000000000606482015290519081900360840190fd5b33600160a060020a0316634d840bcc6040518163ffffffff1660e060020a028152600401602060405180830381600087803b15801561097b57600080fd5b505af115801561098f573d6000803e3d6000fd5b505050506040513d60208110156109a557600080fd5b50511515600114610a00576040805160e560020a62461bcd02815260206004820152601d60248201527f636f6e7472616374206973206e6f742077697468726472617761626c65000000604482015290519081900360640190fd5b600160a060020a038216600090815260016020526040902054610a29908263ffffffff61133f16565b600160a060020a038316600090815260016020526040808220929092553381522054610a5b908263ffffffff61114d16565b336000818152600160209081526040918290209390935580518481529051600160a060020a038616936000805160206114d0833981519152928290030190a35050565b6000610aa985610dfc565b15610de55783610ab83361071b565b1015610b5a576040805160e560020a62461bcd02815260206004820152604560248201527f5b5472616e73666572204572726f725d2042616c616e6365206d75737420626560448201527f2067726561746572207468656e20616d6f756e7420746f206265207472616e7360648201527f6665726564000000000000000000000000000000000000000000000000000000608482015290519081900360a40190fd5b610b7384610b673361071b565b9063ffffffff61114d16565b33600090815260016020526040902055610b9c84610b908761071b565b9063ffffffff61133f16565b6001600087600160a060020a0316600160a060020a031681526020019081526020016000208190555084600160a060020a03166000836040516020018082805190602001908083835b60208310610c045780518252601f199092019160209182019101610be5565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b60208310610c675780518252601f199092019160209182019101610c48565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902060e060020a9004903387876040518563ffffffff1660e060020a0281526004018084600160a060020a0316600160a060020a03168152602001838152602001828051906020019080838360005b83811015610cf9578181015183820152602001610ce1565b50505050905090810190601f168015610d265780820380516001836020036101000a031916815260200191505b50935050505060006040518083038185885af193505050501515610d4657fe5b826040518082805190602001908083835b60208310610d765780518252601f199092019160209182019101610d57565b51815160209384036101000a6000190180199092169116179052604080519290940182900382208a83529351939550600160a060020a038b16945033937f9b6aa1faccbd47218eb2870ae6411b374a3cf25c4285a37ef90bcb3c1fdde9ac9350918290030190a4506001610df4565b610df133868686611164565b90505b949350505050565b6000903b1190565b600082610e108661071b565b1015610eb2576040805160e560020a62461bcd02815260206004820152604560248201527f5b5472616e73666572204572726f725d2042616c616e6365206d75737420626560448201527f2067726561746572207468656e20616d6f756e7420746f206265207472616e7360648201527f6665726564000000000000000000000000000000000000000000000000000000608482015290519081900360a40190fd5b600160a060020a0384161515610f38576040805160e560020a62461bcd02815260206004820152602960248201527f5b5472616e73666572204572726f725d205f746f2063616e6e6f74206265203060448201527f7820616464726573730000000000000000000000000000000000000000000000606482015290519081900360840190fd5b610f4583610b678761071b565b600160a060020a038616600090815260016020526040902055610f6b83610b908661071b565b6001600086600160a060020a0316600160a060020a031681526020019081526020016000208190555083600160a060020a031663c0ee0b8a8685856040518463ffffffff1660e060020a0281526004018084600160a060020a0316600160a060020a0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611013578181015183820152602001610ffb565b50505050905090810190601f1680156110405780820380516001836020036101000a031916815260200191505b50945050505050600060405180830381600087803b15801561106157600080fd5b505af1158015611075573d6000803e3d6000fd5b5050604080518681529051600160a060020a038089169450891692506000805160206114d08339815191529181900360200190a3816040518082805190602001908083835b602083106110d95780518252601f1990920191602091820191016110ba565b51815160209384036101000a6000190180199092169116179052604080519290940182900382208983529351939550600160a060020a038a811695508b16937f9b6aa1faccbd47218eb2870ae6411b374a3cf25c4285a37ef90bcb3c1fdde9ac9350918290030190a4506001949350505050565b6000808383111561115d57600080fd5b5050900390565b6000826111708661071b565b1015611212576040805160e560020a62461bcd02815260206004820152604560248201527f5b5472616e73666572204572726f725d2042616c616e6365206d75737420626560448201527f2067726561746572207468656e20616d6f756e7420746f206265207472616e7360648201527f6665726564000000000000000000000000000000000000000000000000000000608482015290519081900360a40190fd5b600160a060020a0384161515611298576040805160e560020a62461bcd02815260206004820152602960248201527f5b5472616e73666572204572726f725d205f746f2063616e6e6f74206265203060448201527f7820616464726573730000000000000000000000000000000000000000000000606482015290519081900360840190fd5b6112a583610b678761071b565b600160a060020a0386166000908152600160205260409020556112cb83610b908661071b565b600160a060020a0380861660008181526001602090815260409182902094909455805187815290519193928916926000805160206114d083398151915292918290030190a381604051808280519060200190808383602083106110d95780518252601f1990920191602091820191016110ba565b60008282018381101561086957600080fd5b600354611364908263ffffffff61114d16565b600355600160a060020a038216600090815260016020526040902054611390908263ffffffff61114d16565b600160a060020a0383166000818152600160209081526040808320949094558351858152935191936000805160206114d0833981519152929081900390910190a35050565b6113dd6107bd565b15156113e857600080fd5b6113f28282611351565b600160a060020a0382166000818152600260209081526040808320338085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35050565b600160a060020a038116151561146757600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03929092169190911790555600ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa165627a7a72305820dc964b7b1025a3881fd1c7f77687edc585d4a03916925a8397228f77f80d216d0029",
  "deployedBytecode": "0x6080604052600436106100d75763ffffffff60e060020a600035041663095ea7b381146100dc57806318160ddd1461011457806323b872dd1461013b578063395093511461016557806342966c681461018957806370a08231146101a3578063715018a6146101c457806379cc6790146101d95780638da5cb5b146101fd5780638f32d59b1461022e578063a457c2d714610243578063a9059cbb14610267578063be45fd621461028b578063dd62ed3e146102f4578063f2fde38b1461031b578063f3fef3a31461033c578063f6368f8a14610360575b600080fd5b3480156100e857600080fd5b50610100600160a060020a0360043516602435610407565b604080519115158252519081900360200190f35b34801561012057600080fd5b506101296104f6565b60408051918252519081900360200190f35b34801561014757600080fd5b50610100600160a060020a03600435811690602435166044356104fc565b34801561017157600080fd5b50610100600160a060020a03600435166024356105ed565b34801561019557600080fd5b506101a160043561070e565b005b3480156101af57600080fd5b50610129600160a060020a036004351661071b565b3480156101d057600080fd5b506101a1610736565b3480156101e557600080fd5b506101a1600160a060020a03600435166024356107a0565b34801561020957600080fd5b506102126107ae565b60408051600160a060020a039092168252519081900360200190f35b34801561023a57600080fd5b506101006107bd565b34801561024f57600080fd5b50610100600160a060020a03600435166024356107ce565b34801561027357600080fd5b50610100600160a060020a0360043516602435610802565b34801561029757600080fd5b50604080516020600460443581810135601f8101849004840285018401909552848452610100948235600160a060020a031694602480359536959460649492019190819084018382808284375094975061083a9650505050505050565b34801561030057600080fd5b50610129600160a060020a0360043581169060243516610870565b34801561032757600080fd5b506101a1600160a060020a036004351661089b565b34801561034857600080fd5b506101a1600160a060020a03600435166024356108b7565b34801561036c57600080fd5b50604080516020600460443581810135601f8101849004840285018401909552848452610100948235600160a060020a031694602480359536959460649492019190819084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a999881019791965091820194509250829150840183828082843750949750610a9e9650505050505050565b6000600160a060020a038316151561048f576040805160e560020a62461bcd02815260206004820152603460248201527f5b417070726f7665204572726f725d205370656e646572206163636f756e742060448201527f63616e6e6f742062652030782061646472657373000000000000000000000000606482015290519081900360840190fd5b336000818152600260209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b60035490565b60006060600061050b85610dfc565b1561057c5761051c86868685610e04565b600160a060020a0387166000908152600260209081526040808320338452909152902054909150610553908563ffffffff61114d16565b600160a060020a03871660009081526002602090815260408083203384529091529020556105e4565b61058886868685611164565b600160a060020a03871660009081526002602090815260408083203384529091529020549091506105bf908563ffffffff61114d16565b600160a060020a03871660009081526002602090815260408083203384529091529020555b95945050505050565b6000600160a060020a0383161515610675576040805160e560020a62461bcd02815260206004820152603660248201527f5b416c6c6f77616e6365204572726f725d205370656e646572206163636f756e60448201527f742063616e6e6f74206265203078206164647265737300000000000000000000606482015290519081900360840190fd5b336000908152600260209081526040808320600160a060020a03871684529091529020546106a9908363ffffffff61133f16565b336000818152600260209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b6107183382611351565b50565b600160a060020a031660009081526001602052604090205490565b61073e6107bd565b151561074957600080fd5b60008054604051600160a060020a03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b6107aa82826113d5565b5050565b600054600160a060020a031690565b600054600160a060020a0316331490565b336000908152600260209081526040808320600160a060020a03861684529091528120546106a9908363ffffffff61114d16565b6000606061080f84610dfc565b156108275761082033858584610e04565b9150610833565b61082033858584611164565b5092915050565b600061084584610dfc565b1561085d5761085633858585610e04565b9050610869565b61085633858585611164565b9392505050565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b6108a36107bd565b15156108ae57600080fd5b61071881611452565b806108c13361071b565b101561093d576040805160e560020a62461bcd02815260206004820152603460248201527f42616c616e6365206d7573742062652067726561746572207468656e20616d6f60448201527f756e7420746f206265207472616e736665726564000000000000000000000000606482015290519081900360840190fd5b33600160a060020a0316634d840bcc6040518163ffffffff1660e060020a028152600401602060405180830381600087803b15801561097b57600080fd5b505af115801561098f573d6000803e3d6000fd5b505050506040513d60208110156109a557600080fd5b50511515600114610a00576040805160e560020a62461bcd02815260206004820152601d60248201527f636f6e7472616374206973206e6f742077697468726472617761626c65000000604482015290519081900360640190fd5b600160a060020a038216600090815260016020526040902054610a29908263ffffffff61133f16565b600160a060020a038316600090815260016020526040808220929092553381522054610a5b908263ffffffff61114d16565b336000818152600160209081526040918290209390935580518481529051600160a060020a038616936000805160206114d0833981519152928290030190a35050565b6000610aa985610dfc565b15610de55783610ab83361071b565b1015610b5a576040805160e560020a62461bcd02815260206004820152604560248201527f5b5472616e73666572204572726f725d2042616c616e6365206d75737420626560448201527f2067726561746572207468656e20616d6f756e7420746f206265207472616e7360648201527f6665726564000000000000000000000000000000000000000000000000000000608482015290519081900360a40190fd5b610b7384610b673361071b565b9063ffffffff61114d16565b33600090815260016020526040902055610b9c84610b908761071b565b9063ffffffff61133f16565b6001600087600160a060020a0316600160a060020a031681526020019081526020016000208190555084600160a060020a03166000836040516020018082805190602001908083835b60208310610c045780518252601f199092019160209182019101610be5565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b60208310610c675780518252601f199092019160209182019101610c48565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902060e060020a9004903387876040518563ffffffff1660e060020a0281526004018084600160a060020a0316600160a060020a03168152602001838152602001828051906020019080838360005b83811015610cf9578181015183820152602001610ce1565b50505050905090810190601f168015610d265780820380516001836020036101000a031916815260200191505b50935050505060006040518083038185885af193505050501515610d4657fe5b826040518082805190602001908083835b60208310610d765780518252601f199092019160209182019101610d57565b51815160209384036101000a6000190180199092169116179052604080519290940182900382208a83529351939550600160a060020a038b16945033937f9b6aa1faccbd47218eb2870ae6411b374a3cf25c4285a37ef90bcb3c1fdde9ac9350918290030190a4506001610df4565b610df133868686611164565b90505b949350505050565b6000903b1190565b600082610e108661071b565b1015610eb2576040805160e560020a62461bcd02815260206004820152604560248201527f5b5472616e73666572204572726f725d2042616c616e6365206d75737420626560448201527f2067726561746572207468656e20616d6f756e7420746f206265207472616e7360648201527f6665726564000000000000000000000000000000000000000000000000000000608482015290519081900360a40190fd5b600160a060020a0384161515610f38576040805160e560020a62461bcd02815260206004820152602960248201527f5b5472616e73666572204572726f725d205f746f2063616e6e6f74206265203060448201527f7820616464726573730000000000000000000000000000000000000000000000606482015290519081900360840190fd5b610f4583610b678761071b565b600160a060020a038616600090815260016020526040902055610f6b83610b908661071b565b6001600086600160a060020a0316600160a060020a031681526020019081526020016000208190555083600160a060020a031663c0ee0b8a8685856040518463ffffffff1660e060020a0281526004018084600160a060020a0316600160a060020a0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611013578181015183820152602001610ffb565b50505050905090810190601f1680156110405780820380516001836020036101000a031916815260200191505b50945050505050600060405180830381600087803b15801561106157600080fd5b505af1158015611075573d6000803e3d6000fd5b5050604080518681529051600160a060020a038089169450891692506000805160206114d08339815191529181900360200190a3816040518082805190602001908083835b602083106110d95780518252601f1990920191602091820191016110ba565b51815160209384036101000a6000190180199092169116179052604080519290940182900382208983529351939550600160a060020a038a811695508b16937f9b6aa1faccbd47218eb2870ae6411b374a3cf25c4285a37ef90bcb3c1fdde9ac9350918290030190a4506001949350505050565b6000808383111561115d57600080fd5b5050900390565b6000826111708661071b565b1015611212576040805160e560020a62461bcd02815260206004820152604560248201527f5b5472616e73666572204572726f725d2042616c616e6365206d75737420626560448201527f2067726561746572207468656e20616d6f756e7420746f206265207472616e7360648201527f6665726564000000000000000000000000000000000000000000000000000000608482015290519081900360a40190fd5b600160a060020a0384161515611298576040805160e560020a62461bcd02815260206004820152602960248201527f5b5472616e73666572204572726f725d205f746f2063616e6e6f74206265203060448201527f7820616464726573730000000000000000000000000000000000000000000000606482015290519081900360840190fd5b6112a583610b678761071b565b600160a060020a0386166000908152600160205260409020556112cb83610b908661071b565b600160a060020a0380861660008181526001602090815260409182902094909455805187815290519193928916926000805160206114d083398151915292918290030190a381604051808280519060200190808383602083106110d95780518252601f1990920191602091820191016110ba565b60008282018381101561086957600080fd5b600354611364908263ffffffff61114d16565b600355600160a060020a038216600090815260016020526040902054611390908263ffffffff61114d16565b600160a060020a0383166000818152600160209081526040808320949094558351858152935191936000805160206114d0833981519152929081900390910190a35050565b6113dd6107bd565b15156113e857600080fd5b6113f28282611351565b600160a060020a0382166000818152600260209081526040808320338085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35050565b600160a060020a038116151561146757600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03929092169190911790555600ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa165627a7a72305820dc964b7b1025a3881fd1c7f77687edc585d4a03916925a8397228f77f80d216d0029",
  "sourceMap": "142:581:2:-;;;;;516:6:14;:19;;-1:-1:-1;;;;;;516:19:14;525:10;516:19;;;;-1:-1:-1;;;;;583:6:14;;550:40;;516:6;;550:40;142:581:2;;;;;;",
  "deployedSourceMap": "142:581:2:-;;;;;;;;;-1:-1:-1;;;142:581:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3659:301:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3659:301:1;-1:-1:-1;;;;;3659:301:1;;;;;;;;;;;;;;;;;;;;;;;;;1377:91;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1377:91:1;;;;;;;;;;;;;;;;;;;;2489:531;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2489:531:1;-1:-1:-1;;;;;2489:531:1;;;;;;;;;;;;4434:385;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;4434:385:1;-1:-1:-1;;;;;4434:385:1;;;;;;;299:77:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;299:77:2;;;;;;;1627:106:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1627:106:1;-1:-1:-1;;;;;1627:106:1;;;;;1348:137:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1348:137:14;;;;628:93:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;628:93:2;-1:-1:-1;;;;;628:93:2;;;;;;;660:77:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;660:77:14;;;;;;;;-1:-1:-1;;;;;660:77:14;;;;;;;;;;;;;;980:90;;8:9:-1;5:2;;;30:1;27;20:12;5:2;980:90:14;;;;5297:303:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;5297:303:1;-1:-1:-1;;;;;5297:303:1;;;;;;;7950:319;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;7950:319:1;-1:-1:-1;;;;;7950:319:1;;;;;;;7266:300;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;7266:300:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7266:300:1;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7266:300:1;;-1:-1:-1;7266:300:1;;-1:-1:-1;;;;;;;7266:300:1;2069:131;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2069:131:1;-1:-1:-1;;;;;2069:131:1;;;;;;;;;;1656:107:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1656:107:14;-1:-1:-1;;;;;1656:107:14;;;;;12857:461:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;12857:461:1;-1:-1:-1;;;;;12857:461:1;;;;;;;6085:713;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;6085:713:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6085:713:1;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6085:713:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6085:713:1;;;;-1:-1:-1;6085:713:1;-1:-1:-1;6085:713:1;;-1:-1:-1;6085:713:1;;;;;;;;-1:-1:-1;6085:713:1;;-1:-1:-1;6085:713:1;;-1:-1:-1;;;;;;;6085:713:1;3659:301;3724:4;-1:-1:-1;;;;;3750:21:1;;;;3741:87;;;;;-1:-1:-1;;;;;3741:87:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3850:10;3841:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;3841:29:1;;;;;;;;;;;;:37;;;3894:36;;;;;;;3841:29;;3850:10;3894:36;;;;;;;;;;;-1:-1:-1;3948:4:1;3659:301;;;;:::o;1377:91::-;1448:12;;1377:91;:::o;2489:531::-;2568:4;2584:18;2613:11;2638:15;2650:2;2638:11;:15::i;:::-;2635:354;;;2679:43;2699:4;2705:2;2709:5;2716;2679:19;:43::i;:::-;-1:-1:-1;;;;;2766:14:1;;;;;;:8;:14;;;;;;;;2781:10;2766:26;;;;;;;;2670:52;;-1:-1:-1;2766:37:1;;2797:5;2766:37;:30;:37;:::i;:::-;-1:-1:-1;;;;;2737:14:1;;;;;;:8;:14;;;;;;;;2752:10;2737:26;;;;;;;:66;2635:354;;;2854:42;2873:4;2879:2;2883:5;2890;2854:18;:42::i;:::-;-1:-1:-1;;;;;2940:14:1;;;;;;:8;:14;;;;;;;;2955:10;2940:26;;;;;;;;2845:51;;-1:-1:-1;2940:37:1;;2971:5;2940:37;:30;:37;:::i;:::-;-1:-1:-1;;;;;2911:14:1;;;;;;:8;:14;;;;;;;;2926:10;2911:26;;;;;;;:66;2635:354;3006:6;2489:531;-1:-1:-1;;;;;2489:531:1:o;4434:385::-;4514:4;-1:-1:-1;;;;;4539:21:1;;;;4530:89;;;;;-1:-1:-1;;;;;4530:89:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4674:10;4665:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4665:29:1;;;;;;;;;;:45;;4699:10;4665:45;:33;:45;:::i;:::-;4641:10;4632:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4632:29:1;;;;;;;;;;;;:79;;;4729:60;;;;;;4632:29;;4729:60;;;;;;;;;;;-1:-1:-1;4807:4:1;4434:385;;;;:::o;299:77:2:-;345:24;351:10;363:5;345;:24::i;:::-;299:77;:::o;1627:106:1:-;-1:-1:-1;;;;;1709:16:1;1682:7;1709:16;;;:9;:16;;;;;;;1627:106::o;1348:137:14:-;864:9;:7;:9::i;:::-;856:18;;;;;;;;1446:1;1430:6;;1409:40;;-1:-1:-1;;;;;1430:6:14;;;;1409:40;;1446:1;;1409:40;1476:1;1459:19;;-1:-1:-1;;1459:19:14;;;1348:137::o;628:93:2:-;692:22;702:4;708:5;692:9;:22::i;:::-;628:93;;:::o;660:77:14:-;698:7;724:6;-1:-1:-1;;;;;724:6:14;660:77;:::o;980:90::-;1020:4;1057:6;-1:-1:-1;;;;;1057:6:14;1043:10;:20;;980:90::o;5297:303:1:-;5450:10;5382:4;5441:20;;;:8;:20;;;;;;;;-1:-1:-1;;;;;5441:29:1;;;;;;;;;;:50;;5475:15;5441:50;:33;:50;:::i;7950:319::-;8008:12;8033:18;8065:15;8077:2;8065:11;:15::i;:::-;8062:200;;;8104:49;8124:10;8136:2;8140:5;8147;8104:19;:49::i;:::-;8097:56;;;;8062:200;8202:48;8221:10;8233:2;8237:5;8244;8202:18;:48::i;8062:200::-;7950:319;;;;;:::o;7266:300::-;7336:12;7364:15;7376:2;7364:11;:15::i;:::-;7361:198;;;7403:48;7423:10;7435:2;7439:5;7446:4;7403:19;:48::i;:::-;7396:55;;;;7361:198;7500:47;7519:10;7531:2;7535:5;7542:4;7500:18;:47::i;7361:198::-;7266:300;;;;;:::o;2069:131::-;-1:-1:-1;;;;;2168:15:1;;;2141:7;2168:15;;;:8;:15;;;;;;;;:24;;;;;;;;;;;;;2069:131::o;1656:107:14:-;864:9;:7;:9::i;:::-;856:18;;;;;;;;1728:28;1747:8;1728:18;:28::i;12857:461:1:-;12972:6;12947:21;12957:10;12947:9;:21::i;:::-;:31;;12938:97;;;;;-1:-1:-1;;;;;12938:97:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13062:10;-1:-1:-1;;;;;13054:34:1;;:36;;;;;-1:-1:-1;;;13054:36:1;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13054:36:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13054:36:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;13054:36:1;:44;;13094:4;13054:44;13046:86;;;;;-1:-1:-1;;;;;13046:86:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;13162:16:1;;;;;;:9;:16;;;;;;:28;;13183:6;13162:28;:20;:28;:::i;:::-;-1:-1:-1;;;;;13143:16:1;;;;;;:9;:16;;;;;;:47;;;;13236:10;13226:21;;;;:33;;13252:6;13226:33;:25;:33;:::i;:::-;13212:10;13202:21;;;;:9;:21;;;;;;;;;:57;;;;13275:35;;;;;;;-1:-1:-1;;;;;13275:35:1;;;-1:-1:-1;;;;;;;;;;;13275:35:1;;;;;;;12857:461;;:::o;6085:713::-;6179:12;6207:15;6219:2;6207:11;:15::i;:::-;6204:587;;;6273:5;6248:21;6258:10;6248:9;:21::i;:::-;:30;;6239:113;;;;;-1:-1:-1;;;;;6239:113:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6391:32;6417:5;6391:21;6401:10;6391:9;:21::i;:::-;:25;:32;:25;:32;:::i;:::-;6377:10;6367:21;;;;:9;:21;;;;;:56;6454:24;6472:5;6454:13;6464:2;6454:9;:13::i;:::-;:17;:24;:17;:24;:::i;:::-;6438:9;:13;6448:2;-1:-1:-1;;;;;6438:13:1;-1:-1:-1;;;;;6438:13:1;;;;;;;;;;;;:40;;;;6500:2;-1:-1:-1;;;;;6500:7:1;6514:1;6551:15;6534:33;;;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;6534:33:1;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;6534:33:1;;;6524:44;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;6524:44:1;;;;;;;;;;;;;;;;-1:-1:-1;;;6500:95:1;;;6571:10;6583:5;6590:4;6500:95;;;;;-1:-1:-1;;;6500:95:1;;;;;;;-1:-1:-1;;;;;6500:95:1;-1:-1:-1;;;;;6500:95:1;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;6500:95:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6493:103;;;;;;6652:4;6616:41;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;6616:41:1;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6616:41:1;;;-1:-1:-1;6629:10:1;;6616:41;;-1:-1:-1;6616:41:1;;;;;;;-1:-1:-1;6679:4:1;6672:11;;6204:587;6732:47;6751:10;6763:2;6767:5;6774:4;6732:18;:47::i;:::-;6725:54;;6204:587;6085:713;;;;;;:::o;10337:211::-;10395:16;10484:18;;10531:8;;10337:211::o;11973:631::-;12073:12;12127:6;12107:16;12117:5;12107:9;:16::i;:::-;:26;;12098:109;;;;;-1:-1:-1;;;;;12098:109:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;12227:17:1;;;;12218:72;;;;;-1:-1:-1;;;;;12218:72:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12322:28;12343:6;12322:16;12332:5;12322:9;:16::i;:28::-;-1:-1:-1;;;;;12303:16:1;;;;;;:9;:16;;;;;:47;12378:26;12397:6;12378:14;12388:3;12378:9;:14::i;:26::-;12361:9;:14;12371:3;-1:-1:-1;;;;;12361:14:1;-1:-1:-1;;;;;12361:14:1;;;;;;;;;;;;:43;;;;12425:3;-1:-1:-1;;;;;12415:28:1;;12444:5;12451:6;12459:5;12415:50;;;;;-1:-1:-1;;;12415:50:1;;;;;;;-1:-1:-1;;;;;12415:50:1;-1:-1:-1;;;;;12415:50:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;12415:50:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12415:50:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;12491:28:1;;;;;;;;-1:-1:-1;;;;;12491:28:1;;;;-1:-1:-1;12491:28:1;;;-1:-1:-1;;;;;;;;;;;;12491:28:1;;;;;;;;12568:5;12535:39;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;12535:39:1;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;12535:39:1;;;;-1:-1:-1;12535:39:1;;;;;-1:-1:-1;12535:39:1;;;;;;;-1:-1:-1;12592:4:1;11973:631;;;;;;:::o;1155:145:17:-;1213:7;;1240:6;;;;1232:15;;;;;;-1:-1:-1;;1269:5:17;;;1155:145::o;10940:561:1:-;11039:12;11093:6;11073:16;11083:5;11073:9;:16::i;:::-;:26;;11064:109;;;;;-1:-1:-1;;;;;11064:109:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11193:17:1;;;;11184:72;;;;;-1:-1:-1;;;;;11184:72:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11288:28;11309:6;11288:16;11298:5;11288:9;:16::i;:28::-;-1:-1:-1;;;;;11269:16:1;;;;;;:9;:16;;;;;:47;11344:26;11363:6;11344:14;11354:3;11344:9;:14::i;:26::-;-1:-1:-1;;;;;11327:14:1;;;;;;;:9;:14;;;;;;;;;:43;;;;11388:28;;;;;;;11327:14;;11388:28;;;;-1:-1:-1;;;;;;;;;;;11388:28:1;;;;;;;;11465:5;11432:39;;;;;;;;;;;;;66:2:-1;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;1371:145:17;1429:7;1460:5;;;1483:6;;;;1475:15;;;;;9170:226:1;9252:12;;:23;;9269:5;9252:23;:16;:23;:::i;:::-;9237:12;:38;-1:-1:-1;;;;;9307:18:1;;;;;;:9;:18;;;;;;:29;;9330:5;9307:29;:22;:29;:::i;:::-;-1:-1:-1;;;;;9286:18:1;;;;;;:9;:18;;;;;;;;:50;;;;9352:36;;;;;;;9286:18;;-1:-1:-1;;;;;;;;;;;9352:36:1;;;;;;;;;;9170:226;;:::o;9721:354::-;864:9:14;:7;:9::i;:::-;856:18;;;;;;;;9970:21:1;9976:7;9985:5;9970;:21::i;:::-;-1:-1:-1;;;;;10007:60:1;;10037:17;;;;:8;:17;;;;;;;;10025:10;10037:29;;;;;;;;;;;10007:60;;;;;;;10025:10;;10007:60;;;;;;;;;;;;9721:354;;:::o;1907:183:14:-;-1:-1:-1;;;;;1980:22:14;;;;1972:31;;;;;;2039:6;;;2018:38;;-1:-1:-1;;;;;2018:38:14;;;;2039:6;;;2018:38;;;2066:6;:17;;-1:-1:-1;;2066:17:14;-1:-1:-1;;;;;2066:17:14;;;;;;;;;;1907:183::o",
  "source": "pragma solidity ^0.4.24;\n\nimport \"./ERC223.sol\";\n\n/**\n * @title Burnable Token\n * @dev Token that can be irreversibly burned (destroyed).\n */\ncontract ERC223Burnable is ERC223 {\n    /**\n     * @dev Burns a specific amount of tokens.\n     * @param value The amount of token to be burned.\n     */\n    function burn(uint256 value) public {\n        _burn(msg.sender, value);\n    }\n\n    /**\n     * @dev Burns a specific amount of tokens from the target address and decrements allowance\n     * @param from address The address which you want to send tokens from\n     * @param value uint256 The amount of token to be burned\n     */\n    function burnFrom(address from, uint256 value) public {\n        _burnFrom(from, value);\n    }\n}",
  "sourcePath": "/home/ubuntu/Lendflo-LDF-ERC223/contracts/ERC223Burnable.sol",
  "ast": {
    "absolutePath": "/home/ubuntu/Lendflo-LDF-ERC223/contracts/ERC223Burnable.sol",
    "exportedSymbols": {
      "ERC223Burnable": [
        866
      ]
    },
    "id": 867,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 837,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:2"
      },
      {
        "absolutePath": "/home/ubuntu/Lendflo-LDF-ERC223/contracts/ERC223.sol",
        "file": "./ERC223.sol",
        "id": 838,
        "nodeType": "ImportDirective",
        "scope": 867,
        "sourceUnit": 836,
        "src": "26:22:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 839,
              "name": "ERC223",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 835,
              "src": "169:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC223_$835",
                "typeString": "contract ERC223"
              }
            },
            "id": 840,
            "nodeType": "InheritanceSpecifier",
            "src": "169:6:2"
          }
        ],
        "contractDependencies": [
          835,
          1672
        ],
        "contractKind": "contract",
        "documentation": "@title Burnable Token\n@dev Token that can be irreversibly burned (destroyed).",
        "fullyImplemented": true,
        "id": 866,
        "linearizedBaseContracts": [
          866,
          835,
          1672
        ],
        "name": "ERC223Burnable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 851,
              "nodeType": "Block",
              "src": "335:41:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 846,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1978,
                          "src": "351:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 847,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "351:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 848,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 842,
                        "src": "363:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 845,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 582,
                      "src": "345:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 849,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "345:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 850,
                  "nodeType": "ExpressionStatement",
                  "src": "345:24:2"
                }
              ]
            },
            "documentation": "@dev Burns a specific amount of tokens.\n@param value The amount of token to be burned.",
            "id": 852,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 843,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 842,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 852,
                  "src": "313:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 841,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "313:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "312:15:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 844,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "335:0:2"
            },
            "scope": 866,
            "src": "299:77:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 864,
              "nodeType": "Block",
              "src": "682:39:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 860,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 854,
                        "src": "702:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 861,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 856,
                        "src": "708:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 859,
                      "name": "_burnFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 609,
                      "src": "692:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "692:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 863,
                  "nodeType": "ExpressionStatement",
                  "src": "692:22:2"
                }
              ]
            },
            "documentation": "@dev Burns a specific amount of tokens from the target address and decrements allowance\n@param from address The address which you want to send tokens from\n@param value uint256 The amount of token to be burned",
            "id": 865,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "burnFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 857,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 854,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 865,
                  "src": "646:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 853,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "646:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 856,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 865,
                  "src": "660:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 855,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "660:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "645:29:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 858,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "682:0:2"
            },
            "scope": 866,
            "src": "628:93:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 867,
        "src": "142:581:2"
      }
    ],
    "src": "0:723:2"
  },
  "legacyAST": {
    "absolutePath": "/home/ubuntu/Lendflo-LDF-ERC223/contracts/ERC223Burnable.sol",
    "exportedSymbols": {
      "ERC223Burnable": [
        866
      ]
    },
    "id": 867,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 837,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:2"
      },
      {
        "absolutePath": "/home/ubuntu/Lendflo-LDF-ERC223/contracts/ERC223.sol",
        "file": "./ERC223.sol",
        "id": 838,
        "nodeType": "ImportDirective",
        "scope": 867,
        "sourceUnit": 836,
        "src": "26:22:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 839,
              "name": "ERC223",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 835,
              "src": "169:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC223_$835",
                "typeString": "contract ERC223"
              }
            },
            "id": 840,
            "nodeType": "InheritanceSpecifier",
            "src": "169:6:2"
          }
        ],
        "contractDependencies": [
          835,
          1672
        ],
        "contractKind": "contract",
        "documentation": "@title Burnable Token\n@dev Token that can be irreversibly burned (destroyed).",
        "fullyImplemented": true,
        "id": 866,
        "linearizedBaseContracts": [
          866,
          835,
          1672
        ],
        "name": "ERC223Burnable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 851,
              "nodeType": "Block",
              "src": "335:41:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 846,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1978,
                          "src": "351:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 847,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "351:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 848,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 842,
                        "src": "363:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 845,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 582,
                      "src": "345:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 849,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "345:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 850,
                  "nodeType": "ExpressionStatement",
                  "src": "345:24:2"
                }
              ]
            },
            "documentation": "@dev Burns a specific amount of tokens.\n@param value The amount of token to be burned.",
            "id": 852,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 843,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 842,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 852,
                  "src": "313:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 841,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "313:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "312:15:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 844,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "335:0:2"
            },
            "scope": 866,
            "src": "299:77:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 864,
              "nodeType": "Block",
              "src": "682:39:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 860,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 854,
                        "src": "702:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 861,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 856,
                        "src": "708:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 859,
                      "name": "_burnFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 609,
                      "src": "692:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "692:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 863,
                  "nodeType": "ExpressionStatement",
                  "src": "692:22:2"
                }
              ]
            },
            "documentation": "@dev Burns a specific amount of tokens from the target address and decrements allowance\n@param from address The address which you want to send tokens from\n@param value uint256 The amount of token to be burned",
            "id": 865,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "burnFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 857,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 854,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 865,
                  "src": "646:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 853,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "646:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 856,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 865,
                  "src": "660:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 855,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "660:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "645:29:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 858,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "682:0:2"
            },
            "scope": 866,
            "src": "628:93:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 867,
        "src": "142:581:2"
      }
    ],
    "src": "0:723:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Linux.g++"
  },
  "networks": {},
  "schemaVersion": "3.0.1",
  "updatedAt": "2019-05-20T08:10:12.214Z",
  "devdoc": {
    "methods": {
      "allowance(address,address)": {
        "details": "Function to check the amount of tokens that an owner allowed to a spender.\r",
        "params": {
          "owner": "address The address which owns the funds.\r",
          "spender": "address The address which will spend the funds.\r"
        },
        "return": "A uint256 specifying the amount of tokens still available for the spender.\r"
      },
      "approve(address,uint256)": {
        "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\r Beware that changing an allowance with this method brings the risk that someone may use both the old\r and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\r race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\r https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r",
        "params": {
          "spender": "The address which will spend the funds.\r",
          "value": "The amount of tokens to be spent.\r"
        }
      },
      "balanceOf(address)": {
        "details": "Function to return a balance of the address.\r",
        "return": "A uint256 specifying the amount of tokens by the spender.\r"
      },
      "burn(uint256)": {
        "details": "Burns a specific amount of tokens.",
        "params": {
          "value": "The amount of token to be burned."
        }
      },
      "burnFrom(address,uint256)": {
        "details": "Burns a specific amount of tokens from the target address and decrements allowance",
        "params": {
          "from": "address The address which you want to send tokens from",
          "value": "uint256 The amount of token to be burned"
        }
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Decrease the amount of tokens that an owner allowed to a spender.\r approve should be called when allowed_[spender] == 0. To decrement\r allowed value is better to use this function to avoid 2 calls (and wait until\r the first transaction is mined)\r From MonolithDAO Token.sol\r",
        "params": {
          "spender": "The address which will spend the funds.\r",
          "subtractedValue": "The amount of tokens to decrease the allowance by.\r"
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Increase the amount of tokens that an owner allowed to a spender.\r approve should be called when allowed_[_spender] == 0. To increment\r allowed value is better to use this function to avoid 2 calls (and wait until\r the first transaction is mined)\r From MonolithDAO Token.sol\r",
        "params": {
          "addedValue": "The amount of tokens to increase the allowance by.\r",
          "spender": "The address which will spend the funds.\r"
        }
      },
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "totalSupply()": {
        "details": "Function to access total supply of tokens \r",
        "return": "A uint256 specifying the total amount of coins in circulation.\r"
      },
      "transfer(address,uint256)": {
        "details": "Public function that allows to transfer tokens.\r Function implements recognition if the recepeient is a contract or not and executes different subfunctions.\r",
        "params": {
          "to": "Address of the recepient of the tokens.\r",
          "value": "The amount of the tokens to be transfered.\r"
        },
        "return": "A bool defining if the transfer was succesful.\r"
      },
      "transfer(address,uint256,bytes)": {
        "details": "Public function that allows to transfer tokens with additional data. \r Function implements recognition if the recepeient is a contract or not and executes different subfunctions.\r",
        "params": {
          "data": "Additional data to be send to the recepient.\r",
          "to": "Address of the recepient of the tokens.\r",
          "value": "The amount of the tokens to be transfered.\r"
        },
        "return": "A bool defining if the transfer was succesful.\r"
      },
      "transfer(address,uint256,bytes,string)": {
        "details": "Public function that allows to transfer tokens with additional data \r and customized fallback.\r",
        "params": {
          "custom_fallback": "Customized fallback that is executed after the transfer of the tokens.\r",
          "data": "Additional data to be send to the recepient.\r",
          "to": "Address of the recepient of the tokens.\r",
          "value": "The amount of the tokens to be transfered.\r"
        },
        "return": "A bool defining if the transfer was succesful.\r"
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfer tokens from one address to another\r",
        "params": {
          "from": "address The address which you want to send tokens from\r",
          "to": "address The address which you want to transfer to\r",
          "value": "uint256 the amount of tokens to be transferred\r"
        }
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      },
      "withdraw(address,uint256)": {
        "details": "withdraw tokens from the contract. Function can only be called by a contract which holds the money.\r",
        "params": {
          "_from": "address that executed the contract\r",
          "_value": "amount of tokens to withdraw\r"
        }
      }
    },
    "title": "Burnable Token"
  },
  "userdoc": {
    "methods": {
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      }
    }
  }
}