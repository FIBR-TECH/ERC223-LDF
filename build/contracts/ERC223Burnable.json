{
  "contractName": "ERC223Burnable",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        },
        {
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        },
        {
          "name": "data",
          "type": "bytes"
        },
        {
          "name": "custom_fallback",
          "type": "string"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "TransferData",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x6080604081905260008054600160a060020a0319163317808255600160a060020a0316917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3611518806100576000396000f3006080604052600436106100d75763ffffffff60e060020a600035041663095ea7b381146100dc57806318160ddd1461011457806323b872dd1461013b578063395093511461016557806342966c681461018957806370a08231146101a3578063715018a6146101c457806379cc6790146101d95780638da5cb5b146101fd5780638f32d59b1461022e578063a457c2d714610243578063a9059cbb14610267578063be45fd621461028b578063dd62ed3e146102f4578063f2fde38b1461031b578063f3fef3a31461033c578063f6368f8a14610360575b600080fd5b3480156100e857600080fd5b50610100600160a060020a0360043516602435610407565b604080519115158252519081900360200190f35b34801561012057600080fd5b506101296104f6565b60408051918252519081900360200190f35b34801561014757600080fd5b50610100600160a060020a03600435811690602435166044356104fc565b34801561017157600080fd5b50610100600160a060020a03600435166024356105ed565b34801561019557600080fd5b506101a160043561070e565b005b3480156101af57600080fd5b50610129600160a060020a036004351661071b565b3480156101d057600080fd5b506101a1610736565b3480156101e557600080fd5b506101a1600160a060020a03600435166024356107a0565b34801561020957600080fd5b506102126107ae565b60408051600160a060020a039092168252519081900360200190f35b34801561023a57600080fd5b506101006107bd565b34801561024f57600080fd5b50610100600160a060020a03600435166024356107ce565b34801561027357600080fd5b50610100600160a060020a0360043516602435610802565b34801561029757600080fd5b50604080516020600460443581810135601f8101849004840285018401909552848452610100948235600160a060020a031694602480359536959460649492019190819084018382808284375094975061083a9650505050505050565b34801561030057600080fd5b50610129600160a060020a0360043581169060243516610870565b34801561032757600080fd5b506101a1600160a060020a036004351661089b565b34801561034857600080fd5b506101a1600160a060020a03600435166024356108b7565b34801561036c57600080fd5b50604080516020600460443581810135601f8101849004840285018401909552848452610100948235600160a060020a031694602480359536959460649492019190819084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a999881019791965091820194509250829150840183828082843750949750610a9e9650505050505050565b6000600160a060020a038316151561048f576040805160e560020a62461bcd02815260206004820152603460248201527f5b417070726f7665204572726f725d205370656e646572206163636f756e742060448201527f63616e6e6f742062652030782061646472657373000000000000000000000000606482015290519081900360840190fd5b336000818152600260209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b60035490565b60006060600061050b85610dfb565b1561057c5761051c86868685610e03565b600160a060020a0387166000908152600260209081526040808320338452909152902054909150610553908563ffffffff61114b16565b600160a060020a03871660009081526002602090815260408083203384529091529020556105e4565b61058886868685611162565b600160a060020a03871660009081526002602090815260408083203384529091529020549091506105bf908563ffffffff61114b16565b600160a060020a03871660009081526002602090815260408083203384529091529020555b95945050505050565b6000600160a060020a0383161515610675576040805160e560020a62461bcd02815260206004820152603660248201527f5b416c6c6f77616e6365204572726f725d205370656e646572206163636f756e60448201527f742063616e6e6f74206265203078206164647265737300000000000000000000606482015290519081900360840190fd5b336000908152600260209081526040808320600160a060020a03871684529091529020546106a9908363ffffffff61133c16565b336000818152600260209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b610718338261134e565b50565b600160a060020a031660009081526001602052604090205490565b61073e6107bd565b151561074957600080fd5b60008054604051600160a060020a03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b6107aa82826113d2565b5050565b600054600160a060020a031690565b600054600160a060020a0316331490565b336000908152600260209081526040808320600160a060020a03861684529091528120546106a9908363ffffffff61114b16565b6000606061080f84610dfb565b156108275761082033858584610e03565b9150610833565b61082033858584611162565b5092915050565b600061084584610dfb565b1561085d5761085633858585610e03565b9050610869565b61085633858585611162565b9392505050565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b6108a36107bd565b15156108ae57600080fd5b6107188161144f565b806108c13361071b565b101561093d576040805160e560020a62461bcd02815260206004820152603460248201527f42616c616e6365206d7573742062652067726561746572207468656e20616d6f60448201527f756e7420746f206265207472616e736665726564000000000000000000000000606482015290519081900360840190fd5b33600160a060020a0316634d840bcc6040518163ffffffff1660e060020a028152600401602060405180830381600087803b15801561097b57600080fd5b505af115801561098f573d6000803e3d6000fd5b505050506040513d60208110156109a557600080fd5b50511515600114610a00576040805160e560020a62461bcd02815260206004820152601d60248201527f636f6e7472616374206973206e6f742077697468726472617761626c65000000604482015290519081900360640190fd5b600160a060020a038216600090815260016020526040902054610a29908263ffffffff61133c16565b600160a060020a038316600090815260016020526040808220929092553381522054610a5b908263ffffffff61114b16565b336000818152600160209081526040918290209390935580518481529051600160a060020a038616936000805160206114cd833981519152928290030190a35050565b6000610aa985610dfb565b15610de45783610ab83361071b565b11610b59576040805160e560020a62461bcd02815260206004820152604560248201527f5b5472616e73666572204572726f725d2042616c616e6365206d75737420626560448201527f2067726561746572207468656e20616d6f756e7420746f206265207472616e7360648201527f6665726564000000000000000000000000000000000000000000000000000000608482015290519081900360a40190fd5b610b7284610b663361071b565b9063ffffffff61114b16565b33600090815260016020526040902055610b9b84610b8f8761071b565b9063ffffffff61133c16565b6001600087600160a060020a0316600160a060020a031681526020019081526020016000208190555084600160a060020a03166000836040516020018082805190602001908083835b60208310610c035780518252601f199092019160209182019101610be4565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b60208310610c665780518252601f199092019160209182019101610c47565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902060e060020a9004903387876040518563ffffffff1660e060020a0281526004018084600160a060020a0316600160a060020a03168152602001838152602001828051906020019080838360005b83811015610cf8578181015183820152602001610ce0565b50505050905090810190601f168015610d255780820380516001836020036101000a031916815260200191505b50935050505060006040518083038185885af193505050501515610d4557fe5b826040518082805190602001908083835b60208310610d755780518252601f199092019160209182019101610d56565b51815160209384036101000a6000190180199092169116179052604080519290940182900382208a83529351939550600160a060020a038b16945033937f9b6aa1faccbd47218eb2870ae6411b374a3cf25c4285a37ef90bcb3c1fdde9ac9350918290030190a4506001610df3565b610df033868686611162565b90505b949350505050565b6000903b1190565b600082610e0f8661071b565b11610eb0576040805160e560020a62461bcd02815260206004820152604560248201527f5b5472616e73666572204572726f725d2042616c616e6365206d75737420626560448201527f2067726561746572207468656e20616d6f756e7420746f206265207472616e7360648201527f6665726564000000000000000000000000000000000000000000000000000000608482015290519081900360a40190fd5b600160a060020a0384161515610f36576040805160e560020a62461bcd02815260206004820152602960248201527f5b5472616e73666572204572726f725d205f746f2063616e6e6f74206265203060448201527f7820616464726573730000000000000000000000000000000000000000000000606482015290519081900360840190fd5b610f4383610b668761071b565b600160a060020a038616600090815260016020526040902055610f6983610b8f8661071b565b6001600086600160a060020a0316600160a060020a031681526020019081526020016000208190555083600160a060020a031663c0ee0b8a8685856040518463ffffffff1660e060020a0281526004018084600160a060020a0316600160a060020a0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611011578181015183820152602001610ff9565b50505050905090810190601f16801561103e5780820380516001836020036101000a031916815260200191505b50945050505050600060405180830381600087803b15801561105f57600080fd5b505af1158015611073573d6000803e3d6000fd5b5050604080518681529051600160a060020a038089169450891692506000805160206114cd8339815191529181900360200190a3816040518082805190602001908083835b602083106110d75780518252601f1990920191602091820191016110b8565b51815160209384036101000a6000190180199092169116179052604080519290940182900382208983529351939550600160a060020a038a811695508b16937f9b6aa1faccbd47218eb2870ae6411b374a3cf25c4285a37ef90bcb3c1fdde9ac9350918290030190a4506001949350505050565b6000808383111561115b57600080fd5b5050900390565b60008261116e8661071b565b1161120f576040805160e560020a62461bcd02815260206004820152604560248201527f5b5472616e73666572204572726f725d2042616c616e6365206d75737420626560448201527f2067726561746572207468656e20616d6f756e7420746f206265207472616e7360648201527f6665726564000000000000000000000000000000000000000000000000000000608482015290519081900360a40190fd5b600160a060020a0384161515611295576040805160e560020a62461bcd02815260206004820152602960248201527f5b5472616e73666572204572726f725d205f746f2063616e6e6f74206265203060448201527f7820616464726573730000000000000000000000000000000000000000000000606482015290519081900360840190fd5b6112a283610b668761071b565b600160a060020a0386166000908152600160205260409020556112c883610b8f8661071b565b600160a060020a0380861660008181526001602090815260409182902094909455805187815290519193928916926000805160206114cd83398151915292918290030190a381604051808280519060200190808383602083106110d75780518252601f1990920191602091820191016110b8565b60008282018381101561086957600080fd5b600354611361908263ffffffff61114b16565b600355600160a060020a03821660009081526001602052604090205461138d908263ffffffff61114b16565b600160a060020a0383166000818152600160209081526040808320949094558351858152935191936000805160206114cd833981519152929081900390910190a35050565b6113da6107bd565b15156113e557600080fd5b6113ef828261134e565b600160a060020a0382166000818152600260209081526040808320338085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35050565b600160a060020a038116151561146457600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03929092169190911790555600ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa165627a7a7230582033b34e987ee9ed7bd13ed2ba7fa3f1a18ffb859f7a4eae333c08faa10797f23f0029",
  "deployedBytecode": "0x6080604052600436106100d75763ffffffff60e060020a600035041663095ea7b381146100dc57806318160ddd1461011457806323b872dd1461013b578063395093511461016557806342966c681461018957806370a08231146101a3578063715018a6146101c457806379cc6790146101d95780638da5cb5b146101fd5780638f32d59b1461022e578063a457c2d714610243578063a9059cbb14610267578063be45fd621461028b578063dd62ed3e146102f4578063f2fde38b1461031b578063f3fef3a31461033c578063f6368f8a14610360575b600080fd5b3480156100e857600080fd5b50610100600160a060020a0360043516602435610407565b604080519115158252519081900360200190f35b34801561012057600080fd5b506101296104f6565b60408051918252519081900360200190f35b34801561014757600080fd5b50610100600160a060020a03600435811690602435166044356104fc565b34801561017157600080fd5b50610100600160a060020a03600435166024356105ed565b34801561019557600080fd5b506101a160043561070e565b005b3480156101af57600080fd5b50610129600160a060020a036004351661071b565b3480156101d057600080fd5b506101a1610736565b3480156101e557600080fd5b506101a1600160a060020a03600435166024356107a0565b34801561020957600080fd5b506102126107ae565b60408051600160a060020a039092168252519081900360200190f35b34801561023a57600080fd5b506101006107bd565b34801561024f57600080fd5b50610100600160a060020a03600435166024356107ce565b34801561027357600080fd5b50610100600160a060020a0360043516602435610802565b34801561029757600080fd5b50604080516020600460443581810135601f8101849004840285018401909552848452610100948235600160a060020a031694602480359536959460649492019190819084018382808284375094975061083a9650505050505050565b34801561030057600080fd5b50610129600160a060020a0360043581169060243516610870565b34801561032757600080fd5b506101a1600160a060020a036004351661089b565b34801561034857600080fd5b506101a1600160a060020a03600435166024356108b7565b34801561036c57600080fd5b50604080516020600460443581810135601f8101849004840285018401909552848452610100948235600160a060020a031694602480359536959460649492019190819084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a999881019791965091820194509250829150840183828082843750949750610a9e9650505050505050565b6000600160a060020a038316151561048f576040805160e560020a62461bcd02815260206004820152603460248201527f5b417070726f7665204572726f725d205370656e646572206163636f756e742060448201527f63616e6e6f742062652030782061646472657373000000000000000000000000606482015290519081900360840190fd5b336000818152600260209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b60035490565b60006060600061050b85610dfb565b1561057c5761051c86868685610e03565b600160a060020a0387166000908152600260209081526040808320338452909152902054909150610553908563ffffffff61114b16565b600160a060020a03871660009081526002602090815260408083203384529091529020556105e4565b61058886868685611162565b600160a060020a03871660009081526002602090815260408083203384529091529020549091506105bf908563ffffffff61114b16565b600160a060020a03871660009081526002602090815260408083203384529091529020555b95945050505050565b6000600160a060020a0383161515610675576040805160e560020a62461bcd02815260206004820152603660248201527f5b416c6c6f77616e6365204572726f725d205370656e646572206163636f756e60448201527f742063616e6e6f74206265203078206164647265737300000000000000000000606482015290519081900360840190fd5b336000908152600260209081526040808320600160a060020a03871684529091529020546106a9908363ffffffff61133c16565b336000818152600260209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b610718338261134e565b50565b600160a060020a031660009081526001602052604090205490565b61073e6107bd565b151561074957600080fd5b60008054604051600160a060020a03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b6107aa82826113d2565b5050565b600054600160a060020a031690565b600054600160a060020a0316331490565b336000908152600260209081526040808320600160a060020a03861684529091528120546106a9908363ffffffff61114b16565b6000606061080f84610dfb565b156108275761082033858584610e03565b9150610833565b61082033858584611162565b5092915050565b600061084584610dfb565b1561085d5761085633858585610e03565b9050610869565b61085633858585611162565b9392505050565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b6108a36107bd565b15156108ae57600080fd5b6107188161144f565b806108c13361071b565b101561093d576040805160e560020a62461bcd02815260206004820152603460248201527f42616c616e6365206d7573742062652067726561746572207468656e20616d6f60448201527f756e7420746f206265207472616e736665726564000000000000000000000000606482015290519081900360840190fd5b33600160a060020a0316634d840bcc6040518163ffffffff1660e060020a028152600401602060405180830381600087803b15801561097b57600080fd5b505af115801561098f573d6000803e3d6000fd5b505050506040513d60208110156109a557600080fd5b50511515600114610a00576040805160e560020a62461bcd02815260206004820152601d60248201527f636f6e7472616374206973206e6f742077697468726472617761626c65000000604482015290519081900360640190fd5b600160a060020a038216600090815260016020526040902054610a29908263ffffffff61133c16565b600160a060020a038316600090815260016020526040808220929092553381522054610a5b908263ffffffff61114b16565b336000818152600160209081526040918290209390935580518481529051600160a060020a038616936000805160206114cd833981519152928290030190a35050565b6000610aa985610dfb565b15610de45783610ab83361071b565b11610b59576040805160e560020a62461bcd02815260206004820152604560248201527f5b5472616e73666572204572726f725d2042616c616e6365206d75737420626560448201527f2067726561746572207468656e20616d6f756e7420746f206265207472616e7360648201527f6665726564000000000000000000000000000000000000000000000000000000608482015290519081900360a40190fd5b610b7284610b663361071b565b9063ffffffff61114b16565b33600090815260016020526040902055610b9b84610b8f8761071b565b9063ffffffff61133c16565b6001600087600160a060020a0316600160a060020a031681526020019081526020016000208190555084600160a060020a03166000836040516020018082805190602001908083835b60208310610c035780518252601f199092019160209182019101610be4565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b60208310610c665780518252601f199092019160209182019101610c47565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902060e060020a9004903387876040518563ffffffff1660e060020a0281526004018084600160a060020a0316600160a060020a03168152602001838152602001828051906020019080838360005b83811015610cf8578181015183820152602001610ce0565b50505050905090810190601f168015610d255780820380516001836020036101000a031916815260200191505b50935050505060006040518083038185885af193505050501515610d4557fe5b826040518082805190602001908083835b60208310610d755780518252601f199092019160209182019101610d56565b51815160209384036101000a6000190180199092169116179052604080519290940182900382208a83529351939550600160a060020a038b16945033937f9b6aa1faccbd47218eb2870ae6411b374a3cf25c4285a37ef90bcb3c1fdde9ac9350918290030190a4506001610df3565b610df033868686611162565b90505b949350505050565b6000903b1190565b600082610e0f8661071b565b11610eb0576040805160e560020a62461bcd02815260206004820152604560248201527f5b5472616e73666572204572726f725d2042616c616e6365206d75737420626560448201527f2067726561746572207468656e20616d6f756e7420746f206265207472616e7360648201527f6665726564000000000000000000000000000000000000000000000000000000608482015290519081900360a40190fd5b600160a060020a0384161515610f36576040805160e560020a62461bcd02815260206004820152602960248201527f5b5472616e73666572204572726f725d205f746f2063616e6e6f74206265203060448201527f7820616464726573730000000000000000000000000000000000000000000000606482015290519081900360840190fd5b610f4383610b668761071b565b600160a060020a038616600090815260016020526040902055610f6983610b8f8661071b565b6001600086600160a060020a0316600160a060020a031681526020019081526020016000208190555083600160a060020a031663c0ee0b8a8685856040518463ffffffff1660e060020a0281526004018084600160a060020a0316600160a060020a0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611011578181015183820152602001610ff9565b50505050905090810190601f16801561103e5780820380516001836020036101000a031916815260200191505b50945050505050600060405180830381600087803b15801561105f57600080fd5b505af1158015611073573d6000803e3d6000fd5b5050604080518681529051600160a060020a038089169450891692506000805160206114cd8339815191529181900360200190a3816040518082805190602001908083835b602083106110d75780518252601f1990920191602091820191016110b8565b51815160209384036101000a6000190180199092169116179052604080519290940182900382208983529351939550600160a060020a038a811695508b16937f9b6aa1faccbd47218eb2870ae6411b374a3cf25c4285a37ef90bcb3c1fdde9ac9350918290030190a4506001949350505050565b6000808383111561115b57600080fd5b5050900390565b60008261116e8661071b565b1161120f576040805160e560020a62461bcd02815260206004820152604560248201527f5b5472616e73666572204572726f725d2042616c616e6365206d75737420626560448201527f2067726561746572207468656e20616d6f756e7420746f206265207472616e7360648201527f6665726564000000000000000000000000000000000000000000000000000000608482015290519081900360a40190fd5b600160a060020a0384161515611295576040805160e560020a62461bcd02815260206004820152602960248201527f5b5472616e73666572204572726f725d205f746f2063616e6e6f74206265203060448201527f7820616464726573730000000000000000000000000000000000000000000000606482015290519081900360840190fd5b6112a283610b668761071b565b600160a060020a0386166000908152600160205260409020556112c883610b8f8661071b565b600160a060020a0380861660008181526001602090815260409182902094909455805187815290519193928916926000805160206114cd83398151915292918290030190a381604051808280519060200190808383602083106110d75780518252601f1990920191602091820191016110b8565b60008282018381101561086957600080fd5b600354611361908263ffffffff61114b16565b600355600160a060020a03821660009081526001602052604090205461138d908263ffffffff61114b16565b600160a060020a0383166000818152600160209081526040808320949094558351858152935191936000805160206114cd833981519152929081900390910190a35050565b6113da6107bd565b15156113e557600080fd5b6113ef828261134e565b600160a060020a0382166000818152600260209081526040808320338085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35050565b600160a060020a038116151561146457600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03929092169190911790555600ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa165627a7a7230582033b34e987ee9ed7bd13ed2ba7fa3f1a18ffb859f7a4eae333c08faa10797f23f0029",
  "sourceMap": "142:581:2:-;;;;;516:6:14;:19;;-1:-1:-1;;;;;;516:19:14;525:10;516:19;;;;-1:-1:-1;;;;;583:6:14;;550:40;;516:6;;550:40;142:581:2;;;;;;",
  "deployedSourceMap": "142:581:2:-;;;;;;;;;-1:-1:-1;;;142:581:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3578:295:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3578:295:1;-1:-1:-1;;;;;3578:295:1;;;;;;;;;;;;;;;;;;;;;;;;;1347:89;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1347:89:1;;;;;;;;;;;;;;;;;;;;2431:519;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2431:519:1;-1:-1:-1;;;;;2431:519:1;;;;;;;;;;;;4336:378;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;4336:378:1;-1:-1:-1;;;;;4336:378:1;;;;;;;299:77:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;299:77:2;;;;;;;1589:104:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1589:104:1;-1:-1:-1;;;;;1589:104:1;;;;;1348:137:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1348:137:14;;;;628:93:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;628:93:2;-1:-1:-1;;;;;628:93:2;;;;;;;660:77:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;660:77:14;;;;;;;;-1:-1:-1;;;;;660:77:14;;;;;;;;;;;;;;980:90;;8:9:-1;5:2;;;30:1;27;20:12;5:2;980:90:14;;;;5181:297:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;5181:297:1;-1:-1:-1;;;;;5181:297:1;;;;;;;7778:311;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;7778:311:1;-1:-1:-1;;;;;7778:311:1;;;;;;;7110:293;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;7110:293:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7110:293:1;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7110:293:1;;-1:-1:-1;7110:293:1;;-1:-1:-1;;;;;;;7110:293:1;2021:129;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2021:129:1;-1:-1:-1;;;;;2021:129:1;;;;;;;;;;1656:107:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1656:107:14;-1:-1:-1;;;;;1656:107:14;;;;;12572:455:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;12572:455:1;-1:-1:-1;;;;;12572:455:1;;;;;;;5952:700;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;5952:700:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5952:700:1;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5952:700:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5952:700:1;;;;-1:-1:-1;5952:700:1;-1:-1:-1;5952:700:1;;-1:-1:-1;5952:700:1;;;;;;;;-1:-1:-1;5952:700:1;;-1:-1:-1;5952:700:1;;-1:-1:-1;;;;;;;5952:700:1;3578:295;3643:4;-1:-1:-1;;;;;3668:21:1;;;;3659:87;;;;;-1:-1:-1;;;;;3659:87:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3766:10;3757:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;3757:29:1;;;;;;;;;;;;:37;;;3809:36;;;;;;;3757:29;;3766:10;3809:36;;;;;;;;;;;-1:-1:-1;3862:4:1;3578:295;;;;:::o;1347:89::-;1417:12;;1347:89;:::o;2431:519::-;2510:4;2525:18;2553:11;2577:15;2589:2;2577:11;:15::i;:::-;2574:347;;;2617:43;2637:4;2643:2;2647:5;2654;2617:19;:43::i;:::-;-1:-1:-1;;;;;2703:14:1;;;;;;:8;:14;;;;;;;;2718:10;2703:26;;;;;;;;2608:52;;-1:-1:-1;2703:37:1;;2734:5;2703:37;:30;:37;:::i;:::-;-1:-1:-1;;;;;2674:14:1;;;;;;:8;:14;;;;;;;;2689:10;2674:26;;;;;;;:66;2574:347;;;2788:42;2807:4;2813:2;2817:5;2824;2788:18;:42::i;:::-;-1:-1:-1;;;;;2873:14:1;;;;;;:8;:14;;;;;;;;2888:10;2873:26;;;;;;;;2779:51;;-1:-1:-1;2873:37:1;;2904:5;2873:37;:30;:37;:::i;:::-;-1:-1:-1;;;;;2844:14:1;;;;;;:8;:14;;;;;;;;2859:10;2844:26;;;;;;;:66;2574:347;2937:6;2431:519;-1:-1:-1;;;;;2431:519:1:o;4336:378::-;4416:4;-1:-1:-1;;;;;4440:21:1;;;;4431:89;;;;;-1:-1:-1;;;;;4431:89:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4573:10;4564:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4564:29:1;;;;;;;;;;:45;;4598:10;4564:45;:33;:45;:::i;:::-;4540:10;4531:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4531:29:1;;;;;;;;;;;;:79;;;4626:60;;;;;;4531:29;;4626:60;;;;;;;;;;;-1:-1:-1;4703:4:1;4336:378;;;;:::o;299:77:2:-;345:24;351:10;363:5;345;:24::i;:::-;299:77;:::o;1589:104:1:-;-1:-1:-1;;;;;1670:16:1;1644:7;1670:16;;;:9;:16;;;;;;;1589:104::o;1348:137:14:-;864:9;:7;:9::i;:::-;856:18;;;;;;;;1446:1;1430:6;;1409:40;;-1:-1:-1;;;;;1430:6:14;;;;1409:40;;1446:1;;1409:40;1476:1;1459:19;;-1:-1:-1;;1459:19:14;;;1348:137::o;628:93:2:-;692:22;702:4;708:5;692:9;:22::i;:::-;628:93;;:::o;660:77:14:-;698:7;724:6;-1:-1:-1;;;;;724:6:14;660:77;:::o;980:90::-;1020:4;1057:6;-1:-1:-1;;;;;1057:6:14;1043:10;:20;;980:90::o;5181:297:1:-;5332:10;5266:4;5323:20;;;:8;:20;;;;;;;;-1:-1:-1;;;;;5323:29:1;;;;;;;;;;:50;;5357:15;5323:50;:33;:50;:::i;7778:311::-;7836:12;7860:18;7891:15;7903:2;7891:11;:15::i;:::-;7888:195;;;7929:49;7949:10;7961:2;7965:5;7972;7929:19;:49::i;:::-;7922:56;;;;7888:195;8024:48;8043:10;8055:2;8059:5;8066;8024:18;:48::i;7888:195::-;7778:311;;;;;:::o;7110:293::-;7180:12;7207:15;7219:2;7207:11;:15::i;:::-;7204:193;;;7245:48;7265:10;7277:2;7281:5;7288:4;7245:19;:48::i;:::-;7238:55;;;;7204:193;7339:47;7358:10;7370:2;7374:5;7381:4;7339:18;:47::i;7204:193::-;7110:293;;;;;:::o;2021:129::-;-1:-1:-1;;;;;2119:15:1;;;2093:7;2119:15;;;:8;:15;;;;;;;;:24;;;;;;;;;;;;;2021:129::o;1656:107:14:-;864:9;:7;:9::i;:::-;856:18;;;;;;;;1728:28;1747:8;1728:18;:28::i;12572:455:1:-;12684:6;12659:21;12669:10;12659:9;:21::i;:::-;:31;;12650:97;;;;;-1:-1:-1;;;;;12650:97:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12773:10;-1:-1:-1;;;;;12765:34:1;;:36;;;;;-1:-1:-1;;;12765:36:1;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12765:36:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12765:36:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;12765:36:1;:44;;12805:4;12765:44;12757:86;;;;;-1:-1:-1;;;;;12757:86:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;12873:16:1;;;;;;:9;:16;;;;;;:28;;12894:6;12873:28;:20;:28;:::i;:::-;-1:-1:-1;;;;;12854:16:1;;;;;;:9;:16;;;;;;:47;;;;12947:10;12937:21;;;;:33;;12963:6;12937:33;:25;:33;:::i;:::-;12923:10;12913:21;;;;:9;:21;;;;;;;;;:57;;;;12985:35;;;;;;;-1:-1:-1;;;;;12985:35:1;;;-1:-1:-1;;;;;;;;;;;12985:35:1;;;;;;;12572:455;;:::o;5952:700::-;6046:12;6073:15;6085:2;6073:11;:15::i;:::-;6070:576;;;6137:5;6113:21;6123:10;6113:9;:21::i;:::-;:29;6104:112;;;;;-1:-1:-1;;;;;6104:112:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6254:32;6280:5;6254:21;6264:10;6254:9;:21::i;:::-;:25;:32;:25;:32;:::i;:::-;6240:10;6230:21;;;;:9;:21;;;;;:56;6316:24;6334:5;6316:13;6326:2;6316:9;:13::i;:::-;:17;:24;:17;:24;:::i;:::-;6300:9;:13;6310:2;-1:-1:-1;;;;;6300:13:1;-1:-1:-1;;;;;6300:13:1;;;;;;;;;;;;:40;;;;6361:2;-1:-1:-1;;;;;6361:7:1;6375:1;6412:15;6395:33;;;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;6395:33:1;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;6395:33:1;;;6385:44;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;6385:44:1;;;;;;;;;;;;;;;;-1:-1:-1;;;6361:95:1;;;6432:10;6444:5;6451:4;6361:95;;;;;-1:-1:-1;;;6361:95:1;;;;;;;-1:-1:-1;;;;;6361:95:1;-1:-1:-1;;;;;6361:95:1;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;6361:95:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6354:103;;;;;;6512:4;6476:41;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;6476:41:1;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6476:41:1;;;-1:-1:-1;6489:10:1;;6476:41;;-1:-1:-1;6476:41:1;;;;;;;-1:-1:-1;6538:4:1;6531:11;;6070:576;6588:47;6607:10;6619:2;6623:5;6630:4;6588:18;:47::i;:::-;6581:54;;6070:576;5952:700;;;;;;:::o;10108:205::-;10166:16;10252:18;;10297:8;;10108:205::o;11707:619::-;11807:12;11859:6;11840:16;11850:5;11840:9;:16::i;:::-;:25;11831:108;;;;;-1:-1:-1;;;;;11831:108:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11958:17:1;;;;11949:72;;;;;-1:-1:-1;;;;;11949:72:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12051:28;12072:6;12051:16;12061:5;12051:9;:16::i;:28::-;-1:-1:-1;;;;;12032:16:1;;;;;;:9;:16;;;;;:47;12106:26;12125:6;12106:14;12116:3;12106:9;:14::i;:26::-;12089:9;:14;12099:3;-1:-1:-1;;;;;12089:14:1;-1:-1:-1;;;;;12089:14:1;;;;;;;;;;;;:43;;;;12152:3;-1:-1:-1;;;;;12142:28:1;;12171:5;12178:6;12186:5;12142:50;;;;;-1:-1:-1;;;12142:50:1;;;;;;;-1:-1:-1;;;;;12142:50:1;-1:-1:-1;;;;;12142:50:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;12142:50:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12142:50:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;12216:28:1;;;;;;;;-1:-1:-1;;;;;12216:28:1;;;;-1:-1:-1;12216:28:1;;;-1:-1:-1;;;;;;;;;;;;12216:28:1;;;;;;;;12292:5;12259:39;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;12259:39:1;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;12259:39:1;;;;-1:-1:-1;12259:39:1;;;;;-1:-1:-1;12259:39:1;;;;;;;-1:-1:-1;12315:4:1;11707:619;;;;;;:::o;1155:145:17:-;1213:7;;1240:6;;;;1232:15;;;;;;-1:-1:-1;;1269:5:17;;;1155:145::o;10695:550:1:-;10794:12;10846:6;10827:16;10837:5;10827:9;:16::i;:::-;:25;10818:108;;;;;-1:-1:-1;;;;;10818:108:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;10945:17:1;;;;10936:72;;;;;-1:-1:-1;;;;;10936:72:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11038:28;11059:6;11038:16;11048:5;11038:9;:16::i;:28::-;-1:-1:-1;;;;;11019:16:1;;;;;;:9;:16;;;;;:47;11093:26;11112:6;11093:14;11103:3;11093:9;:14::i;:26::-;-1:-1:-1;;;;;11076:14:1;;;;;;;:9;:14;;;;;;;;;:43;;;;11135:28;;;;;;;11076:14;;11135:28;;;;-1:-1:-1;;;;;;;;;;;11135:28:1;;;;;;;;11211:5;11178:39;;;;;;;;;;;;;66:2:-1;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;1371:145:17;1429:7;1460:5;;;1483:6;;;;1475:15;;;;;8967:222:1;9048:12;;:23;;9065:5;9048:23;:16;:23;:::i;:::-;9033:12;:38;-1:-1:-1;;;;;9102:18:1;;;;;;:9;:18;;;;;;:29;;9125:5;9102:29;:22;:29;:::i;:::-;-1:-1:-1;;;;;9081:18:1;;;;;;:9;:18;;;;;;;;:50;;;;9146:36;;;;;;;9081:18;;-1:-1:-1;;;;;;;;;;;9146:36:1;;;;;;;;;;8967:222;;:::o;9505:349::-;864:9:14;:7;:9::i;:::-;856:18;;;;;;;;9751:21:1;9757:7;9766:5;9751;:21::i;:::-;-1:-1:-1;;;;;9787:60:1;;9817:17;;;;:8;:17;;;;;;;;9805:10;9817:29;;;;;;;;;;;9787:60;;;;;;;9805:10;;9787:60;;;;;;;;;;;;9505:349;;:::o;1907:183:14:-;-1:-1:-1;;;;;1980:22:14;;;;1972:31;;;;;;2039:6;;;2018:38;;-1:-1:-1;;;;;2018:38:14;;;;2039:6;;;2018:38;;;2066:6;:17;;-1:-1:-1;;2066:17:14;-1:-1:-1;;;;;2066:17:14;;;;;;;;;;1907:183::o",
  "source": "pragma solidity ^0.4.24;\n\nimport \"./ERC223.sol\";\n\n/**\n * @title Burnable Token\n * @dev Token that can be irreversibly burned (destroyed).\n */\ncontract ERC223Burnable is ERC223 {\n    /**\n     * @dev Burns a specific amount of tokens.\n     * @param value The amount of token to be burned.\n     */\n    function burn(uint256 value) public {\n        _burn(msg.sender, value);\n    }\n\n    /**\n     * @dev Burns a specific amount of tokens from the target address and decrements allowance\n     * @param from address The address which you want to send tokens from\n     * @param value uint256 The amount of token to be burned\n     */\n    function burnFrom(address from, uint256 value) public {\n        _burnFrom(from, value);\n    }\n}",
  "sourcePath": "/home/ubuntu/Lendflo-LDF-ERC223/contracts/ERC223Burnable.sol",
  "ast": {
    "absolutePath": "/home/ubuntu/Lendflo-LDF-ERC223/contracts/ERC223Burnable.sol",
    "exportedSymbols": {
      "ERC223Burnable": [
        866
      ]
    },
    "id": 867,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 837,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:2"
      },
      {
        "absolutePath": "/home/ubuntu/Lendflo-LDF-ERC223/contracts/ERC223.sol",
        "file": "./ERC223.sol",
        "id": 838,
        "nodeType": "ImportDirective",
        "scope": 867,
        "sourceUnit": 836,
        "src": "26:22:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 839,
              "name": "ERC223",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 835,
              "src": "169:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC223_$835",
                "typeString": "contract ERC223"
              }
            },
            "id": 840,
            "nodeType": "InheritanceSpecifier",
            "src": "169:6:2"
          }
        ],
        "contractDependencies": [
          835,
          1670
        ],
        "contractKind": "contract",
        "documentation": "@title Burnable Token\n@dev Token that can be irreversibly burned (destroyed).",
        "fullyImplemented": true,
        "id": 866,
        "linearizedBaseContracts": [
          866,
          835,
          1670
        ],
        "name": "ERC223Burnable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 851,
              "nodeType": "Block",
              "src": "335:41:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 846,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1976,
                          "src": "351:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 847,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "351:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 848,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 842,
                        "src": "363:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 845,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 582,
                      "src": "345:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 849,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "345:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 850,
                  "nodeType": "ExpressionStatement",
                  "src": "345:24:2"
                }
              ]
            },
            "documentation": "@dev Burns a specific amount of tokens.\n@param value The amount of token to be burned.",
            "id": 852,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 843,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 842,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 852,
                  "src": "313:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 841,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "313:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "312:15:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 844,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "335:0:2"
            },
            "scope": 866,
            "src": "299:77:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 864,
              "nodeType": "Block",
              "src": "682:39:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 860,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 854,
                        "src": "702:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 861,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 856,
                        "src": "708:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 859,
                      "name": "_burnFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 609,
                      "src": "692:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "692:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 863,
                  "nodeType": "ExpressionStatement",
                  "src": "692:22:2"
                }
              ]
            },
            "documentation": "@dev Burns a specific amount of tokens from the target address and decrements allowance\n@param from address The address which you want to send tokens from\n@param value uint256 The amount of token to be burned",
            "id": 865,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "burnFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 857,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 854,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 865,
                  "src": "646:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 853,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "646:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 856,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 865,
                  "src": "660:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 855,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "660:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "645:29:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 858,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "682:0:2"
            },
            "scope": 866,
            "src": "628:93:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 867,
        "src": "142:581:2"
      }
    ],
    "src": "0:723:2"
  },
  "legacyAST": {
    "absolutePath": "/home/ubuntu/Lendflo-LDF-ERC223/contracts/ERC223Burnable.sol",
    "exportedSymbols": {
      "ERC223Burnable": [
        866
      ]
    },
    "id": 867,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 837,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:2"
      },
      {
        "absolutePath": "/home/ubuntu/Lendflo-LDF-ERC223/contracts/ERC223.sol",
        "file": "./ERC223.sol",
        "id": 838,
        "nodeType": "ImportDirective",
        "scope": 867,
        "sourceUnit": 836,
        "src": "26:22:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 839,
              "name": "ERC223",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 835,
              "src": "169:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC223_$835",
                "typeString": "contract ERC223"
              }
            },
            "id": 840,
            "nodeType": "InheritanceSpecifier",
            "src": "169:6:2"
          }
        ],
        "contractDependencies": [
          835,
          1670
        ],
        "contractKind": "contract",
        "documentation": "@title Burnable Token\n@dev Token that can be irreversibly burned (destroyed).",
        "fullyImplemented": true,
        "id": 866,
        "linearizedBaseContracts": [
          866,
          835,
          1670
        ],
        "name": "ERC223Burnable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 851,
              "nodeType": "Block",
              "src": "335:41:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 846,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1976,
                          "src": "351:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 847,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "351:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 848,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 842,
                        "src": "363:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 845,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 582,
                      "src": "345:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 849,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "345:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 850,
                  "nodeType": "ExpressionStatement",
                  "src": "345:24:2"
                }
              ]
            },
            "documentation": "@dev Burns a specific amount of tokens.\n@param value The amount of token to be burned.",
            "id": 852,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 843,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 842,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 852,
                  "src": "313:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 841,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "313:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "312:15:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 844,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "335:0:2"
            },
            "scope": 866,
            "src": "299:77:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 864,
              "nodeType": "Block",
              "src": "682:39:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 860,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 854,
                        "src": "702:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 861,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 856,
                        "src": "708:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 859,
                      "name": "_burnFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 609,
                      "src": "692:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "692:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 863,
                  "nodeType": "ExpressionStatement",
                  "src": "692:22:2"
                }
              ]
            },
            "documentation": "@dev Burns a specific amount of tokens from the target address and decrements allowance\n@param from address The address which you want to send tokens from\n@param value uint256 The amount of token to be burned",
            "id": 865,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "burnFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 857,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 854,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 865,
                  "src": "646:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 853,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "646:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 856,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 865,
                  "src": "660:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 855,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "660:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "645:29:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 858,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "682:0:2"
            },
            "scope": 866,
            "src": "628:93:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 867,
        "src": "142:581:2"
      }
    ],
    "src": "0:723:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Linux.g++"
  },
  "networks": {},
  "schemaVersion": "3.0.1",
  "updatedAt": "2019-02-12T17:53:42.199Z",
  "devdoc": {
    "methods": {
      "allowance(address,address)": {
        "details": "Function to check the amount of tokens that an owner allowed to a spender.",
        "params": {
          "owner": "address The address which owns the funds.",
          "spender": "address The address which will spend the funds."
        },
        "return": "A uint256 specifying the amount of tokens still available for the spender."
      },
      "approve(address,uint256)": {
        "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
        "params": {
          "spender": "The address which will spend the funds.",
          "value": "The amount of tokens to be spent."
        }
      },
      "balanceOf(address)": {
        "details": "Function to return a balance of the address.",
        "return": "A uint256 specifying the amount of tokens by the spender."
      },
      "burn(uint256)": {
        "details": "Burns a specific amount of tokens.",
        "params": {
          "value": "The amount of token to be burned."
        }
      },
      "burnFrom(address,uint256)": {
        "details": "Burns a specific amount of tokens from the target address and decrements allowance",
        "params": {
          "from": "address The address which you want to send tokens from",
          "value": "uint256 The amount of token to be burned"
        }
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol",
        "params": {
          "spender": "The address which will spend the funds.",
          "subtractedValue": "The amount of tokens to decrease the allowance by."
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol",
        "params": {
          "addedValue": "The amount of tokens to increase the allowance by.",
          "spender": "The address which will spend the funds."
        }
      },
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "totalSupply()": {
        "details": "Function to access total supply of tokens ",
        "return": "A uint256 specifying the total amount of coins in circulation."
      },
      "transfer(address,uint256)": {
        "details": "Public function that allows to transfer tokens. Function implements recognition if the recepeient is a contract or not and executes different subfunctions.",
        "params": {
          "to": "Address of the recepient of the tokens.",
          "value": "The amount of the tokens to be transfered."
        },
        "return": "A bool defining if the transfer was succesful."
      },
      "transfer(address,uint256,bytes)": {
        "details": "Public function that allows to transfer tokens with additional data.  Function implements recognition if the recepeient is a contract or not and executes different subfunctions.",
        "params": {
          "data": "Additional data to be send to the recepient.",
          "to": "Address of the recepient of the tokens.",
          "value": "The amount of the tokens to be transfered."
        },
        "return": "A bool defining if the transfer was succesful."
      },
      "transfer(address,uint256,bytes,string)": {
        "details": "Public function that allows to transfer tokens with additional data  and customized fallback.",
        "params": {
          "custom_fallback": "Customized fallback that is executed after the transfer of the tokens.",
          "data": "Additional data to be send to the recepient.",
          "to": "Address of the recepient of the tokens.",
          "value": "The amount of the tokens to be transfered."
        },
        "return": "A bool defining if the transfer was succesful."
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfer tokens from one address to another",
        "params": {
          "from": "address The address which you want to send tokens from",
          "to": "address The address which you want to transfer to",
          "value": "uint256 the amount of tokens to be transferred"
        }
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      },
      "withdraw(address,uint256)": {
        "details": "withdraw tokens from the contract. Function can only be called by a contract which holds the money.",
        "params": {
          "_from": "address that executed the contract",
          "_value": "amount of tokens to withdraw"
        }
      }
    },
    "title": "Burnable Token"
  },
  "userdoc": {
    "methods": {
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      }
    }
  }
}