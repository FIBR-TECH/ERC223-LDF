{
  "contractName": "LDFToken",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        },
        {
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_holder",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        },
        {
          "name": "data",
          "type": "bytes"
        },
        {
          "name": "custom_fallback",
          "type": "string"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "TransferData",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "Test1",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "",
          "type": "address"
        }
      ],
      "name": "Test2",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    }
  ],
  "bytecode": "0x60c0604052601460808190527f4c656e64666c6f204469676974616c204669617400000000000000000000000060a0908152620000409160069190620001e8565b506040805180820190915260038082527f4c4446000000000000000000000000000000000000000000000000000000000060209092019182526200008791600791620001e8565b506008805460ff191690553480156200009f57600080fd5b5060008054600160a060020a0319163317808255604051600160a060020a039190911691907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3620000fd3364010000000062000103810204565b6200028d565b6200011e600582640100000000620018cf6200015582021704565b604051600160a060020a038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b600160a060020a03811615156200016b57600080fd5b620001808282640100000000620001b0810204565b156200018b57600080fd5b600160a060020a0316600090815260209190915260409020805460ff19166001179055565b6000600160a060020a0382161515620001c857600080fd5b50600160a060020a03166000908152602091909152604090205460ff1690565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200022b57805160ff19168380011785556200025b565b828001600101855582156200025b579182015b828111156200025b5782518255916020019190600101906200023e565b50620002699291506200026d565b5090565b6200028a91905b8082111562000269576000815560010162000274565b90565b6119d5806200029d6000396000f3006080604052600436106101195763ffffffff60e060020a60003504166306fdde03811461011e578063095ea7b3146101a857806318160ddd146101e057806323b872dd14610207578063313ce56714610231578063395093511461025c57806342966c681461028057806370a082311461029a578063715018a6146102bb57806379cc6790146102d05780638da5cb5b146102f45780638f32d59b1461032557806395d89b411461033a578063983b2d561461034f5780639865027514610370578063a457c2d714610385578063a9059cbb146103a9578063aa271e1a146103cd578063be45fd62146103ee578063dd62ed3e14610457578063f2fde38b1461047e578063f3fef3a31461049f578063f6368f8a146104c3575b600080fd5b34801561012a57600080fd5b5061013361056a565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561016d578181015183820152602001610155565b50505050905090810190601f16801561019a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101b457600080fd5b506101cc600160a060020a03600435166024356105f8565b604080519115158252519081900360200190f35b3480156101ec57600080fd5b506101f56106e7565b60408051918252519081900360200190f35b34801561021357600080fd5b506101cc600160a060020a03600435811690602435166044356106ed565b34801561023d57600080fd5b506102466107de565b6040805160ff9092168252519081900360200190f35b34801561026857600080fd5b506101cc600160a060020a03600435166024356107e7565b34801561028c57600080fd5b50610298600435610908565b005b3480156102a657600080fd5b506101f5600160a060020a0360043516610915565b3480156102c757600080fd5b50610298610930565b3480156102dc57600080fd5b50610298600160a060020a036004351660243561099a565b34801561030057600080fd5b506103096109a8565b60408051600160a060020a039092168252519081900360200190f35b34801561033157600080fd5b506101cc6109b7565b34801561034657600080fd5b506101336109c8565b34801561035b57600080fd5b50610298600160a060020a0360043516610a23565b34801561037c57600080fd5b50610298610a40565b34801561039157600080fd5b506101cc600160a060020a0360043516602435610a4b565b3480156103b557600080fd5b506101cc600160a060020a0360043516602435610a7f565b3480156103d957600080fd5b506101cc600160a060020a0360043516610ab7565b3480156103fa57600080fd5b50604080516020600460443581810135601f81018490048402850184019095528484526101cc948235600160a060020a0316946024803595369594606494920191908190840183828082843750949750610ad09650505050505050565b34801561046357600080fd5b506101f5600160a060020a0360043581169060243516610b06565b34801561048a57600080fd5b50610298600160a060020a0360043516610b31565b3480156104ab57600080fd5b50610298600160a060020a0360043516602435610b4d565b3480156104cf57600080fd5b50604080516020600460443581810135601f81018490048402850184019095528484526101cc948235600160a060020a031694602480359536959460649492019190819084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a999881019791965091820194509250829150840183828082843750949750610e0a9650505050505050565b6006805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156105f05780601f106105c5576101008083540402835291602001916105f0565b820191906000526020600020905b8154815290600101906020018083116105d357829003601f168201915b505050505081565b6000600160a060020a0383161515610680576040805160e560020a62461bcd02815260206004820152603460248201527f5b417070726f7665204572726f725d205370656e646572206163636f756e742060448201527f63616e6e6f742062652030782061646472657373000000000000000000000000606482015290519081900360840190fd5b336000818152600260209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b60035490565b6000606060006106fc8561112e565b1561076d5761070d86868685611136565b600160a060020a0387166000908152600260209081526040808320338452909152902054909150610744908563ffffffff61145716565b600160a060020a03871660009081526002602090815260408083203384529091529020556107d5565b6107798686868561146e565b600160a060020a03871660009081526002602090815260408083203384529091529020549091506107b0908563ffffffff61145716565b600160a060020a03871660009081526002602090815260408083203384529091529020555b95945050505050565b60085460ff1681565b6000600160a060020a038316151561086f576040805160e560020a62461bcd02815260206004820152603660248201527f5b416c6c6f77616e6365204572726f725d205370656e646572206163636f756e60448201527f742063616e6e6f74206265203078206164647265737300000000000000000000606482015290519081900360840190fd5b336000908152600260209081526040808320600160a060020a03871684529091529020546108a3908363ffffffff61162116565b336000818152600260209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b6109123382611633565b50565b600160a060020a031660009081526001602052604090205490565b6109386109b7565b151561094357600080fd5b60008054604051600160a060020a03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b6109a482826116c9565b5050565b600054600160a060020a031690565b600054600160a060020a0316331490565b6007805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156105f05780601f106105c5576101008083540402835291602001916105f0565b610a2c33610ab7565b1515610a3757600080fd5b6109128161178b565b610a49336117d3565b565b336000908152600260209081526040808320600160a060020a03861684529091528120546108a3908363ffffffff61145716565b60006060610a8c8461112e565b15610aa457610a9d33858584611136565b9150610ab0565b610a9d3385858461146e565b5092915050565b6000610aca60058363ffffffff61181b16565b92915050565b6000610adb8461112e565b15610af357610aec33858585611136565b9050610aff565b610aec3385858561146e565b9392505050565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b610b396109b7565b1515610b4457600080fd5b61091281611852565b600081610b5984610915565b1015610bc2576040805160e560020a62461bcd028152602060048201526045602482015260008051602061196a833981519152604482015260008051602061198a833981519152606482015260da60020a6419995c995902608482015290519081900360a40190fd5b82600160a060020a0316638da5cb5b6040518163ffffffff1660e060020a028152600401602060405180830381600087803b158015610c0057600080fd5b505af1158015610c14573d6000803e3d6000fd5b505050506040513d6020811015610c2a57600080fd5b5051600160a060020a03163314610c9e576040805160e560020a62461bcd028152602060048201526045602482015260008051602061196a833981519152604482015260008051602061198a833981519152606482015260da60020a6419995c995902608482015290519081900360a40190fd5b82600160a060020a0316634e69d5606040518163ffffffff1660e060020a028152600401602060405180830381600087803b158015610cdc57600080fd5b505af1158015610cf0573d6000803e3d6000fd5b505050506040513d6020811015610d0657600080fd5b50516040805182815290519192507f43789b30e4c6d53e2735e5701207b0529b2cc229b1bb02b9691d39ea218da7d7919081900360200190a160018114610d97576040805160e560020a62461bcd02815260206004820152601d60248201527f636f6e7472616374206973206e6f742077697468726472617761626c65000000604482015290519081900360640190fd5b33600090815260016020526040902054610db7908363ffffffff61162116565b3360009081526001602052604080822092909255600160a060020a03851681522054610de9908363ffffffff61145716565b600160a060020a039093166000908152600160205260409020929092555050565b6000610e158561112e565b156111175783610e2433610915565b11610e8c576040805160e560020a62461bcd028152602060048201526045602482015260008051602061196a833981519152604482015260008051602061198a833981519152606482015260da60020a6419995c995902608482015290519081900360a40190fd5b610ea584610e9933610915565b9063ffffffff61145716565b33600090815260016020526040902055610ece84610ec287610915565b9063ffffffff61162116565b6001600087600160a060020a0316600160a060020a031681526020019081526020016000208190555084600160a060020a03166000836040516020018082805190602001908083835b60208310610f365780518252601f199092019160209182019101610f17565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b60208310610f995780518252601f199092019160209182019101610f7a565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902060e060020a9004903387876040518563ffffffff1660e060020a0281526004018084600160a060020a0316600160a060020a03168152602001838152602001828051906020019080838360005b8381101561102b578181015183820152602001611013565b50505050905090810190601f1680156110585780820380516001836020036101000a031916815260200191505b50935050505060006040518083038185885af19350505050151561107857fe5b826040518082805190602001908083835b602083106110a85780518252601f199092019160209182019101611089565b51815160209384036101000a6000190180199092169116179052604080519290940182900382208a83529351939550600160a060020a038b16945033937f9b6aa1faccbd47218eb2870ae6411b374a3cf25c4285a37ef90bcb3c1fdde9ac9350918290030190a4506001611126565b6111233386868661146e565b90505b949350505050565b6000903b1190565b60008261114286610915565b116111aa576040805160e560020a62461bcd028152602060048201526045602482015260008051602061196a833981519152604482015260008051602061198a833981519152606482015260da60020a6419995c995902608482015290519081900360a40190fd5b600160a060020a0384161515611230576040805160e560020a62461bcd02815260206004820152602960248201527f5b5472616e73666572204572726f725d205f746f2063616e6e6f74206265203060448201527f7820616464726573730000000000000000000000000000000000000000000000606482015290519081900360840190fd5b61123d83610e9987610915565b600160a060020a03861660009081526001602052604090205561126383610ec286610915565b6001600086600160a060020a0316600160a060020a031681526020019081526020016000208190555083600160a060020a031663c0ee0b8a8685856040518463ffffffff1660e060020a0281526004018084600160a060020a0316600160a060020a0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561130b5781810151838201526020016112f3565b50505050905090810190601f1680156113385780820380516001836020036101000a031916815260200191505b50945050505050600060405180830381600087803b15801561135957600080fd5b505af115801561136d573d6000803e3d6000fd5b5050604080518681529051600160a060020a038089169450891692507fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a3816040518082805190602001908083835b602083106113e35780518252601f1990920191602091820191016113c4565b51815160209384036101000a6000190180199092169116179052604080519290940182900382208983529351939550600160a060020a038a811695508b16937f9b6aa1faccbd47218eb2870ae6411b374a3cf25c4285a37ef90bcb3c1fdde9ac9350918290030190a4506001949350505050565b6000808383111561146757600080fd5b5050900390565b60008261147a86610915565b116114e2576040805160e560020a62461bcd028152602060048201526045602482015260008051602061196a833981519152604482015260008051602061198a833981519152606482015260da60020a6419995c995902608482015290519081900360a40190fd5b600160a060020a0384161515611568576040805160e560020a62461bcd02815260206004820152602960248201527f5b5472616e73666572204572726f725d205f746f2063616e6e6f74206265203060448201527f7820616464726573730000000000000000000000000000000000000000000000606482015290519081900360840190fd5b61157583610e9987610915565b600160a060020a03861660009081526001602052604090205561159b83610ec286610915565b600160a060020a0380861660008181526001602090815260409182902094909455805187815290519193928916927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a381604051808280519060200190808383602083106113e35780518252601f1990920191602091820191016113c4565b600082820183811015610aff57600080fd5b600354611646908263ffffffff61145716565b600355600160a060020a038216600090815260016020526040902054611672908263ffffffff61145716565b600160a060020a0383166000818152600160209081526040808320949094558351858152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a35050565b600160a060020a03821660009081526002602090815260408083203384529091529020546116fd908263ffffffff61145716565b600160a060020a038316600090815260026020908152604080832033845290915290205561172b8282611633565b600160a060020a0382166000818152600260209081526040808320338085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35050565b61179c60058263ffffffff6118cf16565b604051600160a060020a038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b6117e460058263ffffffff61191d16565b604051600160a060020a038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b6000600160a060020a038216151561183257600080fd5b50600160a060020a03166000908152602091909152604090205460ff1690565b600160a060020a038116151561186757600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600160a060020a03811615156118e457600080fd5b6118ee828261181b565b156118f857600080fd5b600160a060020a0316600090815260209190915260409020805460ff19166001179055565b600160a060020a038116151561193257600080fd5b61193c828261181b565b151561194757600080fd5b600160a060020a0316600090815260209190915260409020805460ff1916905556005b5472616e73666572204572726f725d2042616c616e6365206d7573742062652067726561746572207468656e20616d6f756e7420746f206265207472616e73a165627a7a7230582011446ee260fcb2c1ca8e889bd7c4436a3a7491a2b32c7c9ace58678f66e860e50029",
  "deployedBytecode": "0x6080604052600436106101195763ffffffff60e060020a60003504166306fdde03811461011e578063095ea7b3146101a857806318160ddd146101e057806323b872dd14610207578063313ce56714610231578063395093511461025c57806342966c681461028057806370a082311461029a578063715018a6146102bb57806379cc6790146102d05780638da5cb5b146102f45780638f32d59b1461032557806395d89b411461033a578063983b2d561461034f5780639865027514610370578063a457c2d714610385578063a9059cbb146103a9578063aa271e1a146103cd578063be45fd62146103ee578063dd62ed3e14610457578063f2fde38b1461047e578063f3fef3a31461049f578063f6368f8a146104c3575b600080fd5b34801561012a57600080fd5b5061013361056a565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561016d578181015183820152602001610155565b50505050905090810190601f16801561019a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101b457600080fd5b506101cc600160a060020a03600435166024356105f8565b604080519115158252519081900360200190f35b3480156101ec57600080fd5b506101f56106e7565b60408051918252519081900360200190f35b34801561021357600080fd5b506101cc600160a060020a03600435811690602435166044356106ed565b34801561023d57600080fd5b506102466107de565b6040805160ff9092168252519081900360200190f35b34801561026857600080fd5b506101cc600160a060020a03600435166024356107e7565b34801561028c57600080fd5b50610298600435610908565b005b3480156102a657600080fd5b506101f5600160a060020a0360043516610915565b3480156102c757600080fd5b50610298610930565b3480156102dc57600080fd5b50610298600160a060020a036004351660243561099a565b34801561030057600080fd5b506103096109a8565b60408051600160a060020a039092168252519081900360200190f35b34801561033157600080fd5b506101cc6109b7565b34801561034657600080fd5b506101336109c8565b34801561035b57600080fd5b50610298600160a060020a0360043516610a23565b34801561037c57600080fd5b50610298610a40565b34801561039157600080fd5b506101cc600160a060020a0360043516602435610a4b565b3480156103b557600080fd5b506101cc600160a060020a0360043516602435610a7f565b3480156103d957600080fd5b506101cc600160a060020a0360043516610ab7565b3480156103fa57600080fd5b50604080516020600460443581810135601f81018490048402850184019095528484526101cc948235600160a060020a0316946024803595369594606494920191908190840183828082843750949750610ad09650505050505050565b34801561046357600080fd5b506101f5600160a060020a0360043581169060243516610b06565b34801561048a57600080fd5b50610298600160a060020a0360043516610b31565b3480156104ab57600080fd5b50610298600160a060020a0360043516602435610b4d565b3480156104cf57600080fd5b50604080516020600460443581810135601f81018490048402850184019095528484526101cc948235600160a060020a031694602480359536959460649492019190819084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a999881019791965091820194509250829150840183828082843750949750610e0a9650505050505050565b6006805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156105f05780601f106105c5576101008083540402835291602001916105f0565b820191906000526020600020905b8154815290600101906020018083116105d357829003601f168201915b505050505081565b6000600160a060020a0383161515610680576040805160e560020a62461bcd02815260206004820152603460248201527f5b417070726f7665204572726f725d205370656e646572206163636f756e742060448201527f63616e6e6f742062652030782061646472657373000000000000000000000000606482015290519081900360840190fd5b336000818152600260209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b60035490565b6000606060006106fc8561112e565b1561076d5761070d86868685611136565b600160a060020a0387166000908152600260209081526040808320338452909152902054909150610744908563ffffffff61145716565b600160a060020a03871660009081526002602090815260408083203384529091529020556107d5565b6107798686868561146e565b600160a060020a03871660009081526002602090815260408083203384529091529020549091506107b0908563ffffffff61145716565b600160a060020a03871660009081526002602090815260408083203384529091529020555b95945050505050565b60085460ff1681565b6000600160a060020a038316151561086f576040805160e560020a62461bcd02815260206004820152603660248201527f5b416c6c6f77616e6365204572726f725d205370656e646572206163636f756e60448201527f742063616e6e6f74206265203078206164647265737300000000000000000000606482015290519081900360840190fd5b336000908152600260209081526040808320600160a060020a03871684529091529020546108a3908363ffffffff61162116565b336000818152600260209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b6109123382611633565b50565b600160a060020a031660009081526001602052604090205490565b6109386109b7565b151561094357600080fd5b60008054604051600160a060020a03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b6109a482826116c9565b5050565b600054600160a060020a031690565b600054600160a060020a0316331490565b6007805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156105f05780601f106105c5576101008083540402835291602001916105f0565b610a2c33610ab7565b1515610a3757600080fd5b6109128161178b565b610a49336117d3565b565b336000908152600260209081526040808320600160a060020a03861684529091528120546108a3908363ffffffff61145716565b60006060610a8c8461112e565b15610aa457610a9d33858584611136565b9150610ab0565b610a9d3385858461146e565b5092915050565b6000610aca60058363ffffffff61181b16565b92915050565b6000610adb8461112e565b15610af357610aec33858585611136565b9050610aff565b610aec3385858561146e565b9392505050565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b610b396109b7565b1515610b4457600080fd5b61091281611852565b600081610b5984610915565b1015610bc2576040805160e560020a62461bcd028152602060048201526045602482015260008051602061196a833981519152604482015260008051602061198a833981519152606482015260da60020a6419995c995902608482015290519081900360a40190fd5b82600160a060020a0316638da5cb5b6040518163ffffffff1660e060020a028152600401602060405180830381600087803b158015610c0057600080fd5b505af1158015610c14573d6000803e3d6000fd5b505050506040513d6020811015610c2a57600080fd5b5051600160a060020a03163314610c9e576040805160e560020a62461bcd028152602060048201526045602482015260008051602061196a833981519152604482015260008051602061198a833981519152606482015260da60020a6419995c995902608482015290519081900360a40190fd5b82600160a060020a0316634e69d5606040518163ffffffff1660e060020a028152600401602060405180830381600087803b158015610cdc57600080fd5b505af1158015610cf0573d6000803e3d6000fd5b505050506040513d6020811015610d0657600080fd5b50516040805182815290519192507f43789b30e4c6d53e2735e5701207b0529b2cc229b1bb02b9691d39ea218da7d7919081900360200190a160018114610d97576040805160e560020a62461bcd02815260206004820152601d60248201527f636f6e7472616374206973206e6f742077697468726472617761626c65000000604482015290519081900360640190fd5b33600090815260016020526040902054610db7908363ffffffff61162116565b3360009081526001602052604080822092909255600160a060020a03851681522054610de9908363ffffffff61145716565b600160a060020a039093166000908152600160205260409020929092555050565b6000610e158561112e565b156111175783610e2433610915565b11610e8c576040805160e560020a62461bcd028152602060048201526045602482015260008051602061196a833981519152604482015260008051602061198a833981519152606482015260da60020a6419995c995902608482015290519081900360a40190fd5b610ea584610e9933610915565b9063ffffffff61145716565b33600090815260016020526040902055610ece84610ec287610915565b9063ffffffff61162116565b6001600087600160a060020a0316600160a060020a031681526020019081526020016000208190555084600160a060020a03166000836040516020018082805190602001908083835b60208310610f365780518252601f199092019160209182019101610f17565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b60208310610f995780518252601f199092019160209182019101610f7a565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902060e060020a9004903387876040518563ffffffff1660e060020a0281526004018084600160a060020a0316600160a060020a03168152602001838152602001828051906020019080838360005b8381101561102b578181015183820152602001611013565b50505050905090810190601f1680156110585780820380516001836020036101000a031916815260200191505b50935050505060006040518083038185885af19350505050151561107857fe5b826040518082805190602001908083835b602083106110a85780518252601f199092019160209182019101611089565b51815160209384036101000a6000190180199092169116179052604080519290940182900382208a83529351939550600160a060020a038b16945033937f9b6aa1faccbd47218eb2870ae6411b374a3cf25c4285a37ef90bcb3c1fdde9ac9350918290030190a4506001611126565b6111233386868661146e565b90505b949350505050565b6000903b1190565b60008261114286610915565b116111aa576040805160e560020a62461bcd028152602060048201526045602482015260008051602061196a833981519152604482015260008051602061198a833981519152606482015260da60020a6419995c995902608482015290519081900360a40190fd5b600160a060020a0384161515611230576040805160e560020a62461bcd02815260206004820152602960248201527f5b5472616e73666572204572726f725d205f746f2063616e6e6f74206265203060448201527f7820616464726573730000000000000000000000000000000000000000000000606482015290519081900360840190fd5b61123d83610e9987610915565b600160a060020a03861660009081526001602052604090205561126383610ec286610915565b6001600086600160a060020a0316600160a060020a031681526020019081526020016000208190555083600160a060020a031663c0ee0b8a8685856040518463ffffffff1660e060020a0281526004018084600160a060020a0316600160a060020a0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561130b5781810151838201526020016112f3565b50505050905090810190601f1680156113385780820380516001836020036101000a031916815260200191505b50945050505050600060405180830381600087803b15801561135957600080fd5b505af115801561136d573d6000803e3d6000fd5b5050604080518681529051600160a060020a038089169450891692507fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a3816040518082805190602001908083835b602083106113e35780518252601f1990920191602091820191016113c4565b51815160209384036101000a6000190180199092169116179052604080519290940182900382208983529351939550600160a060020a038a811695508b16937f9b6aa1faccbd47218eb2870ae6411b374a3cf25c4285a37ef90bcb3c1fdde9ac9350918290030190a4506001949350505050565b6000808383111561146757600080fd5b5050900390565b60008261147a86610915565b116114e2576040805160e560020a62461bcd028152602060048201526045602482015260008051602061196a833981519152604482015260008051602061198a833981519152606482015260da60020a6419995c995902608482015290519081900360a40190fd5b600160a060020a0384161515611568576040805160e560020a62461bcd02815260206004820152602960248201527f5b5472616e73666572204572726f725d205f746f2063616e6e6f74206265203060448201527f7820616464726573730000000000000000000000000000000000000000000000606482015290519081900360840190fd5b61157583610e9987610915565b600160a060020a03861660009081526001602052604090205561159b83610ec286610915565b600160a060020a0380861660008181526001602090815260409182902094909455805187815290519193928916927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a381604051808280519060200190808383602083106113e35780518252601f1990920191602091820191016113c4565b600082820183811015610aff57600080fd5b600354611646908263ffffffff61145716565b600355600160a060020a038216600090815260016020526040902054611672908263ffffffff61145716565b600160a060020a0383166000818152600160209081526040808320949094558351858152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a35050565b600160a060020a03821660009081526002602090815260408083203384529091529020546116fd908263ffffffff61145716565b600160a060020a038316600090815260026020908152604080832033845290915290205561172b8282611633565b600160a060020a0382166000818152600260209081526040808320338085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35050565b61179c60058263ffffffff6118cf16565b604051600160a060020a038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b6117e460058263ffffffff61191d16565b604051600160a060020a038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b6000600160a060020a038216151561183257600080fd5b50600160a060020a03166000908152602091909152604090205460ff1690565b600160a060020a038116151561186757600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600160a060020a03811615156118e457600080fd5b6118ee828261181b565b156118f857600080fd5b600160a060020a0316600090815260209190915260409020805460ff19166001179055565b600160a060020a038116151561193257600080fd5b61193c828261181b565b151561194757600080fd5b600160a060020a0316600090815260209190915260409020805460ff1916905556005b5472616e73666572204572726f725d2042616c616e6365206d7573742062652067726561746572207468656e20616d6f756e7420746f206265207472616e73a165627a7a7230582011446ee260fcb2c1ca8e889bd7c4436a3a7491a2b32c7c9ace58678f66e860e50029",
  "sourceMap": "618:43:11:-;562:190;618:43;;562:190;618:43;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;665:28:11;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;697:25:11;;;-1:-1:-1;;697:25:11;;;727:23;5:2:-1;;;;30:1;27;20:12;5:2;-1:-1;516:6:14;:19;;-1:-1:-1;;;;;;516:19:14;525:10;516:19;;;;550:40;;-1:-1:-1;;;;;583:6:14;;;;;516;550:40;;516:6;;550:40;269:22:13;280:10;269;;;;:22;:::i;:::-;562:190:11;;674:119:13;730:21;:8;743:7;730:12;;;;;;:21;:::i;:::-;766:20;;-1:-1:-1;;;;;766:20:13;;;;;;;;674:119;:::o;258:181:16:-;-1:-1:-1;;;;;334:21:16;;;;326:30;;;;;;375:18;379:4;385:7;375:3;;;;:18;:::i;:::-;374:19;366:28;;;;;;-1:-1:-1;;;;;405:20:16;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;405:27:16;428:4;405:27;;;258:181::o;780:190::-;876:4;-1:-1:-1;;;;;904:21:16;;;;896:30;;;;;;-1:-1:-1;;;;;;943:20:16;:11;:20;;;;;;;;;;;;;;;780:190::o;562::11:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;562:190:11;;;-1:-1:-1;562:190:11;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "562:190:11:-;;;;;;;;;-1:-1:-1;;;562:190:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;618:43;;8:9:-1;5:2;;;30:1;27;20:12;5:2;618:43:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;618:43:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3656:295:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3656:295:1;-1:-1:-1;;;;;3656:295:1;;;;;;;;;;;;;;;;;;;;;;;;;1425:89;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1425:89:1;;;;;;;;;;;;;;;;;;;;2509:519;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2509:519:1;-1:-1:-1;;;;;2509:519:1;;;;;;;;;;;;697:25:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;697:25:11;;;;;;;;;;;;;;;;;;;;;;;4414:378:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;4414:378:1;-1:-1:-1;;;;;4414:378:1;;;;;;;299:77:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;299:77:2;;;;;;;1667:104:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1667:104:1;-1:-1:-1;;;;;1667:104:1;;;;;1348:137:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1348:137:14;;;;628:93:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;628:93:2;-1:-1:-1;;;;;628:93:2;;;;;;;660:77:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;660:77:14;;;;;;;;-1:-1:-1;;;;;660:77:14;;;;;;;;;;;;;;980:90;;8:9:-1;5:2;;;30:1;27;20:12;5:2;980:90:14;;;;665:28:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;665:28:11;;;;499:90:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;499:90:13;-1:-1:-1;;;;;499:90:13;;;;;594:75;;8:9:-1;5:2;;;30:1;27;20:12;5:2;594:75:13;;;;5259:297:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;5259:297:1;-1:-1:-1;;;;;5259:297:1;;;;;;;7856:311;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;7856:311:1;-1:-1:-1;;;;;7856:311:1;;;;;;;387:107:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;387:107:13;-1:-1:-1;;;;;387:107:13;;;;;7188:293:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;7188:293:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7188:293:1;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7188:293:1;;-1:-1:-1;7188:293:1;;-1:-1:-1;;;;;;;7188:293:1;2099:129;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2099:129:1;-1:-1:-1;;;;;2099:129:1;;;;;;;;;;1656:107:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1656:107:14;-1:-1:-1;;;;;1656:107:14;;;;;12757:698:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;12757:698:1;-1:-1:-1;;;;;12757:698:1;;;;;;;6030:700;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;6030:700:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6030:700:1;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6030:700:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6030:700:1;;;;-1:-1:-1;6030:700:1;-1:-1:-1;6030:700:1;;-1:-1:-1;6030:700:1;;;;;;;;-1:-1:-1;6030:700:1;;-1:-1:-1;6030:700:1;;-1:-1:-1;;;;;;;6030:700:1;618:43:11;;;;;;;;;;;;;;;-1:-1:-1;;618:43:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3656:295:1:-;3721:4;-1:-1:-1;;;;;3746:21:1;;;;3737:87;;;;;-1:-1:-1;;;;;3737:87:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3844:10;3835:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;3835:29:1;;;;;;;;;;;;:37;;;3887:36;;;;;;;3835:29;;3844:10;3887:36;;;;;;;;;;;-1:-1:-1;3940:4:1;3656:295;;;;:::o;1425:89::-;1495:12;;1425:89;:::o;2509:519::-;2588:4;2603:18;2631:11;2655:15;2667:2;2655:11;:15::i;:::-;2652:347;;;2695:43;2715:4;2721:2;2725:5;2732;2695:19;:43::i;:::-;-1:-1:-1;;;;;2781:14:1;;;;;;:8;:14;;;;;;;;2796:10;2781:26;;;;;;;;2686:52;;-1:-1:-1;2781:37:1;;2812:5;2781:37;:30;:37;:::i;:::-;-1:-1:-1;;;;;2752:14:1;;;;;;:8;:14;;;;;;;;2767:10;2752:26;;;;;;;:66;2652:347;;;2866:42;2885:4;2891:2;2895:5;2902;2866:18;:42::i;:::-;-1:-1:-1;;;;;2951:14:1;;;;;;:8;:14;;;;;;;;2966:10;2951:26;;;;;;;;2857:51;;-1:-1:-1;2951:37:1;;2982:5;2951:37;:30;:37;:::i;:::-;-1:-1:-1;;;;;2922:14:1;;;;;;:8;:14;;;;;;;;2937:10;2922:26;;;;;;;:66;2652:347;3015:6;2509:519;-1:-1:-1;;;;;2509:519:1:o;697:25:11:-;;;;;;:::o;4414:378:1:-;4494:4;-1:-1:-1;;;;;4518:21:1;;;;4509:89;;;;;-1:-1:-1;;;;;4509:89:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4651:10;4642:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4642:29:1;;;;;;;;;;:45;;4676:10;4642:45;:33;:45;:::i;:::-;4618:10;4609:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4609:29:1;;;;;;;;;;;;:79;;;4704:60;;;;;;4609:29;;4704:60;;;;;;;;;;;-1:-1:-1;4781:4:1;4414:378;;;;:::o;299:77:2:-;345:24;351:10;363:5;345;:24::i;:::-;299:77;:::o;1667:104:1:-;-1:-1:-1;;;;;1748:16:1;1722:7;1748:16;;;:9;:16;;;;;;;1667:104::o;1348:137:14:-;864:9;:7;:9::i;:::-;856:18;;;;;;;;1446:1;1430:6;;1409:40;;-1:-1:-1;;;;;1430:6:14;;;;1409:40;;1446:1;;1409:40;1476:1;1459:19;;-1:-1:-1;;1459:19:14;;;1348:137::o;628:93:2:-;692:22;702:4;708:5;692:9;:22::i;:::-;628:93;;:::o;660:77:14:-;698:7;724:6;-1:-1:-1;;;;;724:6:14;660:77;:::o;980:90::-;1020:4;1057:6;-1:-1:-1;;;;;1057:6:14;1043:10;:20;;980:90::o;665:28:11:-;;;;;;;;;;;;;;;-1:-1:-1;;665:28:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;499:90:13;343:20;352:10;343:8;:20::i;:::-;335:29;;;;;;;;563:19;574:7;563:10;:19::i;594:75::-;637:25;651:10;637:13;:25::i;:::-;594:75::o;5259:297:1:-;5410:10;5344:4;5401:20;;;:8;:20;;;;;;;;-1:-1:-1;;;;;5401:29:1;;;;;;;;;;:50;;5435:15;5401:50;:33;:50;:::i;7856:311::-;7914:12;7938:18;7969:15;7981:2;7969:11;:15::i;:::-;7966:195;;;8007:49;8027:10;8039:2;8043:5;8050;8007:19;:49::i;:::-;8000:56;;;;7966:195;8102:48;8121:10;8133:2;8137:5;8144;8102:18;:48::i;7966:195::-;7856:311;;;;;:::o;387:107:13:-;443:4;466:21;:8;479:7;466:21;:12;:21;:::i;:::-;459:28;387:107;-1:-1:-1;;387:107:13:o;7188:293:1:-;7258:12;7285:15;7297:2;7285:11;:15::i;:::-;7282:193;;;7323:48;7343:10;7355:2;7359:5;7366:4;7323:19;:48::i;:::-;7316:55;;;;7282:193;7417:47;7436:10;7448:2;7452:5;7459:4;7417:18;:47::i;7282:193::-;7188:293;;;;;:::o;2099:129::-;-1:-1:-1;;;;;2197:15:1;;;2171:7;2197:15;;;:8;:15;;;;;;;;:24;;;;;;;;;;;;;2099:129::o;1656:107:14:-;864:9;:7;:9::i;:::-;856:18;;;;;;;;1728:28;1747:8;1728:18;:28::i;12757:698:1:-;13091:17;12869:7;12847:18;12857:7;12847:9;:18::i;:::-;:29;;12838:112;;;;;-1:-1:-1;;;;;12838:112:1;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;12838:112:1;;;;-1:-1:-1;;;;;;;;;;;12838:112:1;;;;-1:-1:-1;;;;;12838:112:1;;;;;;;;;;;;;;;12991:7;-1:-1:-1;;;;;12983:22:1;;:24;;;;;-1:-1:-1;;;12983:24:1;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12983:24:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12983:24:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;12983:24:1;-1:-1:-1;;;;;12969:38:1;:10;:38;12960:121;;;;;-1:-1:-1;;;;;12960:121:1;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;12960:121:1;;;;-1:-1:-1;;;;;;;;;;;12960:121:1;;;;-1:-1:-1;;;;;12960:121:1;;;;;;;;;;;;;;;13119:7;-1:-1:-1;;;;;13111:26:1;;:28;;;;;-1:-1:-1;;;13111:28:1;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13111:28:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13111:28:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;13111:28:1;13154:19;;;;;;;;13111:28;;-1:-1:-1;13154:19:1;;;;;;13111:28;13154:19;;;13212:23;13191:45;;13183:87;;;;;-1:-1:-1;;;;;13183:87:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;13315:10;13305:21;;;;:9;:21;;;;;;:34;;13331:7;13305:34;:25;:34;:::i;:::-;13291:10;13281:21;;;;:9;:21;;;;;;:58;;;;-1:-1:-1;;;;;13417:18:1;;;;;;:31;;13440:7;13417:31;:22;:31;:::i;:::-;-1:-1:-1;;;;;13396:18:1;;;;;;;:9;:18;;;;;:52;;;;-1:-1:-1;;12757:698:1:o;6030:700::-;6124:12;6151:15;6163:2;6151:11;:15::i;:::-;6148:576;;;6215:5;6191:21;6201:10;6191:9;:21::i;:::-;:29;6182:112;;;;;-1:-1:-1;;;;;6182:112:1;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;6182:112:1;;;;-1:-1:-1;;;;;;;;;;;6182:112:1;;;;-1:-1:-1;;;;;6182:112:1;;;;;;;;;;;;;;;6332:32;6358:5;6332:21;6342:10;6332:9;:21::i;:::-;:25;:32;:25;:32;:::i;:::-;6318:10;6308:21;;;;:9;:21;;;;;:56;6394:24;6412:5;6394:13;6404:2;6394:9;:13::i;:::-;:17;:24;:17;:24;:::i;:::-;6378:9;:13;6388:2;-1:-1:-1;;;;;6378:13:1;-1:-1:-1;;;;;6378:13:1;;;;;;;;;;;;:40;;;;6439:2;-1:-1:-1;;;;;6439:7:1;6453:1;6490:15;6473:33;;;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;6473:33:1;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;6473:33:1;;;6463:44;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;6463:44:1;;;;;;;;;;;;;;;;-1:-1:-1;;;6439:95:1;;;6510:10;6522:5;6529:4;6439:95;;;;;-1:-1:-1;;;6439:95:1;;;;;;;-1:-1:-1;;;;;6439:95:1;-1:-1:-1;;;;;6439:95:1;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;6439:95:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6432:103;;;;;;6590:4;6554:41;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;6554:41:1;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6554:41:1;;;-1:-1:-1;6567:10:1;;6554:41;;-1:-1:-1;6554:41:1;;;;;;;-1:-1:-1;6616:4:1;6609:11;;6148:576;6666:47;6685:10;6697:2;6701:5;6708:4;6666:18;:47::i;:::-;6659:54;;6148:576;6030:700;;;;;;:::o;10268:205::-;10326:16;10412:18;;10457:8;;10268:205::o;11867:619::-;11967:12;12019:6;12000:16;12010:5;12000:9;:16::i;:::-;:25;11991:108;;;;;-1:-1:-1;;;;;11991:108:1;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;11991:108:1;;;;-1:-1:-1;;;;;;;;;;;11991:108:1;;;;-1:-1:-1;;;;;11991:108:1;;;;;;;;;;;;;;;-1:-1:-1;;;;;12118:17:1;;;;12109:72;;;;;-1:-1:-1;;;;;12109:72:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12211:28;12232:6;12211:16;12221:5;12211:9;:16::i;:28::-;-1:-1:-1;;;;;12192:16:1;;;;;;:9;:16;;;;;:47;12266:26;12285:6;12266:14;12276:3;12266:9;:14::i;:26::-;12249:9;:14;12259:3;-1:-1:-1;;;;;12249:14:1;-1:-1:-1;;;;;12249:14:1;;;;;;;;;;;;:43;;;;12312:3;-1:-1:-1;;;;;12302:28:1;;12331:5;12338:6;12346:5;12302:50;;;;;-1:-1:-1;;;12302:50:1;;;;;;;-1:-1:-1;;;;;12302:50:1;-1:-1:-1;;;;;12302:50:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;12302:50:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12302:50:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;12376:28:1;;;;;;;;-1:-1:-1;;;;;12376:28:1;;;;-1:-1:-1;12376:28:1;;;-1:-1:-1;12376:28:1;;;;;;;;;12452:5;12419:39;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;12419:39:1;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;12419:39:1;;;;-1:-1:-1;12419:39:1;;;;;-1:-1:-1;12419:39:1;;;;;;;-1:-1:-1;12475:4:1;11867:619;;;;;;:::o;1155:145:17:-;1213:7;;1240:6;;;;1232:15;;;;;;-1:-1:-1;;1269:5:17;;;1155:145::o;10855:550:1:-;10954:12;11006:6;10987:16;10997:5;10987:9;:16::i;:::-;:25;10978:108;;;;;-1:-1:-1;;;;;10978:108:1;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;10978:108:1;;;;-1:-1:-1;;;;;;;;;;;10978:108:1;;;;-1:-1:-1;;;;;10978:108:1;;;;;;;;;;;;;;;-1:-1:-1;;;;;11105:17:1;;;;11096:72;;;;;-1:-1:-1;;;;;11096:72:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11198:28;11219:6;11198:16;11208:5;11198:9;:16::i;:28::-;-1:-1:-1;;;;;11179:16:1;;;;;;:9;:16;;;;;:47;11253:26;11272:6;11253:14;11263:3;11253:9;:14::i;:26::-;-1:-1:-1;;;;;11236:14:1;;;;;;;:9;:14;;;;;;;;;:43;;;;11295:28;;;;;;;11236:14;;11295:28;;;;;;;;;;;;;11371:5;11338:39;;;;;;;;;;;;;66:2:-1;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;1371:145:17;1429:7;1460:5;;;1483:6;;;;1475:15;;;;;9045:222:1;9126:12;;:23;;9143:5;9126:23;:16;:23;:::i;:::-;9111:12;:38;-1:-1:-1;;;;;9180:18:1;;;;;;:9;:18;;;;;;:29;;9203:5;9180:29;:22;:29;:::i;:::-;-1:-1:-1;;;;;9159:18:1;;;;;;:9;:18;;;;;;;;:50;;;;9224:36;;;;;;;9159:18;;9224:36;;;;;;;;;;;9045:222;;:::o;9583:431::-;-1:-1:-1;;;;;9852:17:1;;;;;;:8;:17;;;;;;;;9870:10;9852:29;;;;;;;;:49;;9895:5;9852:49;:33;:49;:::i;:::-;-1:-1:-1;;;;;9820:17:1;;;;;;:8;:17;;;;;;;;9838:10;9820:29;;;;;;;:81;9911:21;9829:7;9926:5;9911;:21::i;:::-;-1:-1:-1;;;;;9947:60:1;;9977:17;;;;:8;:17;;;;;;;;9965:10;9977:29;;;;;;;;;;;9947:60;;;;;;;9965:10;;9947:60;;;;;;;;;;;;9583:431;;:::o;674:119:13:-;730:21;:8;743:7;730:21;:12;:21;:::i;:::-;766:20;;-1:-1:-1;;;;;766:20:13;;;;;;;;674:119;:::o;798:127::-;857:24;:8;873:7;857:24;:15;:24;:::i;:::-;896:22;;-1:-1:-1;;;;;896:22:13;;;;;;;;798:127;:::o;780:190:16:-;876:4;-1:-1:-1;;;;;904:21:16;;;;896:30;;;;;;-1:-1:-1;;;;;;943:20:16;:11;:20;;;;;;;;;;;;;;;780:190::o;1907:183:14:-;-1:-1:-1;;;;;1980:22:14;;;;1972:31;;;;;;2039:6;;;2018:38;;-1:-1:-1;;;;;2018:38:14;;;;2039:6;;;2018:38;;;2066:6;:17;;-1:-1:-1;;2066:17:14;-1:-1:-1;;;;;2066:17:14;;;;;;;;;;1907:183::o;258:181:16:-;-1:-1:-1;;;;;334:21:16;;;;326:30;;;;;;375:18;379:4;385:7;375:3;:18::i;:::-;374:19;366:28;;;;;;-1:-1:-1;;;;;405:20:16;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;405:27:16;428:4;405:27;;;258:181::o;511:184::-;-1:-1:-1;;;;;590:21:16;;;;582:30;;;;;;630:18;634:4;640:7;630:3;:18::i;:::-;622:27;;;;;;;;-1:-1:-1;;;;;660:20:16;683:5;660:20;;;;;;;;;;;:28;;-1:-1:-1;;660:28:16;;;511:184::o",
  "source": "pragma solidity ^0.4.24;\n\nimport \"./ERC223Mintable.sol\";\nimport \"./ERC223Burnable.sol\";\n\n/**\n * @title ERC223 Token\n *\n * @dev Lendflo implementation of ERC223 Token originally suggested by: \n * https://github.com/Dexaran/ERC223-token-standard\n * and strongly based on standard ERC20 Token:\n * https://github.com/OpenZeppelin/openzeppelin-solidity/blob/master/contracts/token/ERC20/ERC20.sol\n * Lendflo ERC223 implements light fallback function that is not pure\n * and therefore allows to execute other functions in the contract after the transfer of funds.\n */\ncontract LDFToken is ERC223Mintable, ERC223Burnable{\n\n  string public name = \"Lendflo Digital Fiat\";\n  string public symbol = \"LDF\";\n  uint8 public decimals = 0;\n\n  constructor() public {}\n}",
  "sourcePath": "/home/ubuntu/Lendflo-LDF-ERC223/contracts/LDFToken.sol",
  "ast": {
    "absolutePath": "/home/ubuntu/Lendflo-LDF-ERC223/contracts/LDFToken.sol",
    "exportedSymbols": {
      "LDFToken": [
        1439
      ]
    },
    "id": 1440,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1419,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:11"
      },
      {
        "absolutePath": "/home/ubuntu/Lendflo-LDF-ERC223/contracts/ERC223Mintable.sol",
        "file": "./ERC223Mintable.sol",
        "id": 1420,
        "nodeType": "ImportDirective",
        "scope": 1440,
        "sourceUnit": 991,
        "src": "26:30:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/ubuntu/Lendflo-LDF-ERC223/contracts/ERC223Burnable.sol",
        "file": "./ERC223Burnable.sol",
        "id": 1421,
        "nodeType": "ImportDirective",
        "scope": 1440,
        "sourceUnit": 910,
        "src": "57:30:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1422,
              "name": "ERC223Mintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 990,
              "src": "583:14:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC223Mintable_$990",
                "typeString": "contract ERC223Mintable"
              }
            },
            "id": 1423,
            "nodeType": "InheritanceSpecifier",
            "src": "583:14:11"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1424,
              "name": "ERC223Burnable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 909,
              "src": "599:14:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC223Burnable_$909",
                "typeString": "contract ERC223Burnable"
              }
            },
            "id": 1425,
            "nodeType": "InheritanceSpecifier",
            "src": "599:14:11"
          }
        ],
        "contractDependencies": [
          878,
          909,
          990,
          1599,
          1708
        ],
        "contractKind": "contract",
        "documentation": "@title ERC223 Token\n * @dev Lendflo implementation of ERC223 Token originally suggested by: \nhttps://github.com/Dexaran/ERC223-token-standard\nand strongly based on standard ERC20 Token:\nhttps://github.com/OpenZeppelin/openzeppelin-solidity/blob/master/contracts/token/ERC20/ERC20.sol\nLendflo ERC223 implements light fallback function that is not pure\nand therefore allows to execute other functions in the contract after the transfer of funds.",
        "fullyImplemented": true,
        "id": 1439,
        "linearizedBaseContracts": [
          1439,
          909,
          990,
          1599,
          878,
          1708
        ],
        "name": "LDFToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1428,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 1439,
            "src": "618:43:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 1426,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "618:6:11",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "4c656e64666c6f204469676974616c2046696174",
              "id": 1427,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "639:22:11",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_2698fbba4a534c117b80ece121283eb038e15649e5ee1773666b5aac8da23b47",
                "typeString": "literal_string \"Lendflo Digital Fiat\""
              },
              "value": "Lendflo Digital Fiat"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1431,
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "scope": 1439,
            "src": "665:28:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 1429,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "665:6:11",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "4c4446",
              "id": 1430,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "688:5:11",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_3ab6fbe3a1284a9736bde8b0b1cbca1ec6795868719ff20d9be292b58efc4708",
                "typeString": "literal_string \"LDF\""
              },
              "value": "LDF"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1434,
            "name": "decimals",
            "nodeType": "VariableDeclaration",
            "scope": 1439,
            "src": "697:25:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 1432,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "697:5:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 1433,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "721:1:11",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1437,
              "nodeType": "Block",
              "src": "748:2:11",
              "statements": []
            },
            "documentation": null,
            "id": 1438,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1435,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "738:2:11"
            },
            "payable": false,
            "returnParameters": {
              "id": 1436,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "748:0:11"
            },
            "scope": 1439,
            "src": "727:23:11",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1440,
        "src": "562:190:11"
      }
    ],
    "src": "0:752:11"
  },
  "legacyAST": {
    "absolutePath": "/home/ubuntu/Lendflo-LDF-ERC223/contracts/LDFToken.sol",
    "exportedSymbols": {
      "LDFToken": [
        1439
      ]
    },
    "id": 1440,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1419,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:11"
      },
      {
        "absolutePath": "/home/ubuntu/Lendflo-LDF-ERC223/contracts/ERC223Mintable.sol",
        "file": "./ERC223Mintable.sol",
        "id": 1420,
        "nodeType": "ImportDirective",
        "scope": 1440,
        "sourceUnit": 991,
        "src": "26:30:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/ubuntu/Lendflo-LDF-ERC223/contracts/ERC223Burnable.sol",
        "file": "./ERC223Burnable.sol",
        "id": 1421,
        "nodeType": "ImportDirective",
        "scope": 1440,
        "sourceUnit": 910,
        "src": "57:30:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1422,
              "name": "ERC223Mintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 990,
              "src": "583:14:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC223Mintable_$990",
                "typeString": "contract ERC223Mintable"
              }
            },
            "id": 1423,
            "nodeType": "InheritanceSpecifier",
            "src": "583:14:11"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1424,
              "name": "ERC223Burnable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 909,
              "src": "599:14:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC223Burnable_$909",
                "typeString": "contract ERC223Burnable"
              }
            },
            "id": 1425,
            "nodeType": "InheritanceSpecifier",
            "src": "599:14:11"
          }
        ],
        "contractDependencies": [
          878,
          909,
          990,
          1599,
          1708
        ],
        "contractKind": "contract",
        "documentation": "@title ERC223 Token\n * @dev Lendflo implementation of ERC223 Token originally suggested by: \nhttps://github.com/Dexaran/ERC223-token-standard\nand strongly based on standard ERC20 Token:\nhttps://github.com/OpenZeppelin/openzeppelin-solidity/blob/master/contracts/token/ERC20/ERC20.sol\nLendflo ERC223 implements light fallback function that is not pure\nand therefore allows to execute other functions in the contract after the transfer of funds.",
        "fullyImplemented": true,
        "id": 1439,
        "linearizedBaseContracts": [
          1439,
          909,
          990,
          1599,
          878,
          1708
        ],
        "name": "LDFToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1428,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 1439,
            "src": "618:43:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 1426,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "618:6:11",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "4c656e64666c6f204469676974616c2046696174",
              "id": 1427,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "639:22:11",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_2698fbba4a534c117b80ece121283eb038e15649e5ee1773666b5aac8da23b47",
                "typeString": "literal_string \"Lendflo Digital Fiat\""
              },
              "value": "Lendflo Digital Fiat"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1431,
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "scope": 1439,
            "src": "665:28:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 1429,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "665:6:11",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "4c4446",
              "id": 1430,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "688:5:11",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_3ab6fbe3a1284a9736bde8b0b1cbca1ec6795868719ff20d9be292b58efc4708",
                "typeString": "literal_string \"LDF\""
              },
              "value": "LDF"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1434,
            "name": "decimals",
            "nodeType": "VariableDeclaration",
            "scope": 1439,
            "src": "697:25:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 1432,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "697:5:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 1433,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "721:1:11",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1437,
              "nodeType": "Block",
              "src": "748:2:11",
              "statements": []
            },
            "documentation": null,
            "id": 1438,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1435,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "738:2:11"
            },
            "payable": false,
            "returnParameters": {
              "id": 1436,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "748:0:11"
            },
            "scope": 1439,
            "src": "727:23:11",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1440,
        "src": "562:190:11"
      }
    ],
    "src": "0:752:11"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Linux.g++"
  },
  "networks": {},
  "schemaVersion": "3.0.1",
  "updatedAt": "2019-01-28T15:36:07.740Z",
  "devdoc": {
    "methods": {
      "allowance(address,address)": {
        "details": "Function to check the amount of tokens that an owner allowed to a spender.",
        "params": {
          "owner": "address The address which owns the funds.",
          "spender": "address The address which will spend the funds."
        },
        "return": "A uint256 specifying the amount of tokens still available for the spender."
      },
      "approve(address,uint256)": {
        "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
        "params": {
          "spender": "The address which will spend the funds.",
          "value": "The amount of tokens to be spent."
        }
      },
      "balanceOf(address)": {
        "details": "Function to return a balance of the address.",
        "return": "A uint256 specifying the amount of tokens by the spender."
      },
      "burn(uint256)": {
        "details": "Burns a specific amount of tokens.",
        "params": {
          "value": "The amount of token to be burned."
        }
      },
      "burnFrom(address,uint256)": {
        "details": "Burns a specific amount of tokens from the target address and decrements allowance",
        "params": {
          "from": "address The address which you want to send tokens from",
          "value": "uint256 The amount of token to be burned"
        }
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol",
        "params": {
          "spender": "The address which will spend the funds.",
          "subtractedValue": "The amount of tokens to decrease the allowance by."
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol",
        "params": {
          "addedValue": "The amount of tokens to increase the allowance by.",
          "spender": "The address which will spend the funds."
        }
      },
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "totalSupply()": {
        "details": "Function to access total supply of tokens ",
        "return": "A uint256 specifying the total amount of coins in circulation."
      },
      "transfer(address,uint256)": {
        "details": "Public function that allows to transfer tokens. Function implements recognition if the recepeient is a contract or not and executes different subfunctions.",
        "params": {
          "to": "Address of the recepient of the tokens.",
          "value": "The amount of the tokens to be transfered."
        },
        "return": "A bool defining if the transfer was succesful."
      },
      "transfer(address,uint256,bytes)": {
        "details": "Public function that allows to transfer tokens with additional data.  Function implements recognition if the recepeient is a contract or not and executes different subfunctions.",
        "params": {
          "data": "Additional data to be send to the recepient.",
          "to": "Address of the recepient of the tokens.",
          "value": "The amount of the tokens to be transfered."
        },
        "return": "A bool defining if the transfer was succesful."
      },
      "transfer(address,uint256,bytes,string)": {
        "details": "Public function that allows to transfer tokens with additional data  and customized fallback.",
        "params": {
          "custom_fallback": "Customized fallback that is executed after the transfer of the tokens.",
          "data": "Additional data to be send to the recepient.",
          "to": "Address of the recepient of the tokens.",
          "value": "The amount of the tokens to be transfered."
        },
        "return": "A bool defining if the transfer was succesful."
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfer tokens from one address to another",
        "params": {
          "from": "address The address which you want to send tokens from",
          "to": "address The address which you want to transfer to",
          "value": "uint256 the amount of tokens to be transferred"
        }
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      },
      "withdraw(address,uint256)": {
        "details": "withdraw tokens from the contract only by owner and only in withdrawable state",
        "params": {
          "_amount": "amount of tokens to withdraw",
          "_holder": "contract that hold tokens"
        }
      }
    },
    "title": "ERC223 Token"
  },
  "userdoc": {
    "methods": {
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      }
    }
  }
}