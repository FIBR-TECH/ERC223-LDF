{
  "contractName": "LDFToken",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        },
        {
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        },
        {
          "name": "data",
          "type": "bytes"
        },
        {
          "name": "custom_fallback",
          "type": "string"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "TransferData",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    }
  ],
  "bytecode": "0x60c0604052601460808190527f4c656e64666c6f204469676974616c204669617400000000000000000000000060a0908152620000409160059190620001e8565b506040805180820190915260038082527f4c4446000000000000000000000000000000000000000000000000000000000060209092019182526200008791600691620001e8565b506007805460ff191690553480156200009f57600080fd5b5060008054600160a060020a0319163317808255604051600160a060020a039190911691907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3620000fd3364010000000062000103810204565b6200028d565b6200011e6004826401000000006200198f6200015582021704565b604051600160a060020a038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b600160a060020a03811615156200016b57600080fd5b620001808282640100000000620001b0810204565b156200018b57600080fd5b600160a060020a0316600090815260209190915260409020805460ff19166001179055565b6000600160a060020a0382161515620001c857600080fd5b50600160a060020a03166000908152602091909152604090205460ff1690565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200022b57805160ff19168380011785556200025b565b828001600101855582156200025b579182015b828111156200025b5782518255916020019190600101906200023e565b50620002699291506200026d565b5090565b6200028a91905b8082111562000269576000815560010162000274565b90565b611a75806200029d6000396000f3006080604052600436106101245763ffffffff60e060020a60003504166306fdde038114610129578063095ea7b3146101b357806318160ddd146101eb57806323b872dd14610212578063313ce5671461023c578063395093511461026757806340c10f191461028b57806342966c68146102af57806370a08231146102c9578063715018a6146102ea57806379cc6790146102ff5780638da5cb5b146103235780638f32d59b1461035457806395d89b4114610369578063983b2d561461037e578063986502751461039f578063a457c2d7146103b4578063a9059cbb146103d8578063aa271e1a146103fc578063be45fd621461041d578063dd62ed3e14610486578063f2fde38b146104ad578063f3fef3a3146104ce578063f6368f8a146104f2575b600080fd5b34801561013557600080fd5b5061013e610599565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610178578181015183820152602001610160565b50505050905090810190601f1680156101a55780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101bf57600080fd5b506101d7600160a060020a0360043516602435610627565b604080519115158252519081900360200190f35b3480156101f757600080fd5b50610200610716565b60408051918252519081900360200190f35b34801561021e57600080fd5b506101d7600160a060020a036004358116906024351660443561071c565b34801561024857600080fd5b5061025161080d565b6040805160ff9092168252519081900360200190f35b34801561027357600080fd5b506101d7600160a060020a0360043516602435610816565b34801561029757600080fd5b506101d7600160a060020a0360043516602435610937565b3480156102bb57600080fd5b506102c7600435610960565b005b3480156102d557600080fd5b50610200600160a060020a036004351661096d565b3480156102f657600080fd5b506102c7610988565b34801561030b57600080fd5b506102c7600160a060020a03600435166024356109f2565b34801561032f57600080fd5b50610338610a00565b60408051600160a060020a039092168252519081900360200190f35b34801561036057600080fd5b506101d7610a0f565b34801561037557600080fd5b5061013e610a20565b34801561038a57600080fd5b506102c7600160a060020a0360043516610a7b565b3480156103ab57600080fd5b506102c7610a98565b3480156103c057600080fd5b506101d7600160a060020a0360043516602435610aa3565b3480156103e457600080fd5b506101d7600160a060020a0360043516602435610ad7565b34801561040857600080fd5b506101d7600160a060020a0360043516610b0f565b34801561042957600080fd5b50604080516020600460443581810135601f81018490048402850184019095528484526101d7948235600160a060020a0316946024803595369594606494920191908190840183828082843750949750610b289650505050505050565b34801561049257600080fd5b50610200600160a060020a0360043581169060243516610b5e565b3480156104b957600080fd5b506102c7600160a060020a0360043516610b89565b3480156104da57600080fd5b506102c7600160a060020a0360043516602435610ba5565b3480156104fe57600080fd5b50604080516020600460443581810135601f81018490048402850184019095528484526101d7948235600160a060020a031694602480359536959460649492019190819084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a999881019791965091820194509250829150840183828082843750949750610d8c9650505050505050565b6005805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561061f5780601f106105f45761010080835404028352916020019161061f565b820191906000526020600020905b81548152906001019060200180831161060257829003601f168201915b505050505081565b6000600160a060020a03831615156106af576040805160e560020a62461bcd02815260206004820152603460248201527f5b417070726f7665204572726f725d205370656e646572206163636f756e742060448201527f63616e6e6f742062652030782061646472657373000000000000000000000000606482015290519081900360840190fd5b336000818152600260209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b60035490565b60006060600061072b856110ea565b1561079c5761073c868686856110f2565b600160a060020a0387166000908152600260209081526040808320338452909152902054909150610773908563ffffffff61143b16565b600160a060020a0387166000908152600260209081526040808320338452909152902055610804565b6107a886868685611452565b600160a060020a03871660009081526002602090815260408083203384529091529020549091506107df908563ffffffff61143b16565b600160a060020a03871660009081526002602090815260408083203384529091529020555b95945050505050565b60075460ff1681565b6000600160a060020a038316151561089e576040805160e560020a62461bcd02815260206004820152603660248201527f5b416c6c6f77616e6365204572726f725d205370656e646572206163636f756e60448201527f742063616e6e6f74206265203078206164647265737300000000000000000000606482015290519081900360840190fd5b336000908152600260209081526040808320600160a060020a03871684529091529020546108d2908363ffffffff61162d16565b336000818152600260209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b600061094233610b0f565b151561094d57600080fd5b610957838361163f565b50600192915050565b61096a338261174a565b50565b600160a060020a031660009081526001602052604090205490565b610990610a0f565b151561099b57600080fd5b60008054604051600160a060020a03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b6109fc82826117ce565b5050565b600054600160a060020a031690565b600054600160a060020a0316331490565b6006805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561061f5780601f106105f45761010080835404028352916020019161061f565b610a8433610b0f565b1515610a8f57600080fd5b61096a8161184b565b610aa133611893565b565b336000908152600260209081526040808320600160a060020a03861684529091528120546108d2908363ffffffff61143b16565b60006060610ae4846110ea565b15610afc57610af5338585846110f2565b9150610b08565b610af533858584611452565b5092915050565b6000610b2260048363ffffffff6118db16565b92915050565b6000610b33846110ea565b15610b4b57610b44338585856110f2565b9050610b57565b610b4433858585611452565b9392505050565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b610b91610a0f565b1515610b9c57600080fd5b61096a81611912565b80610baf3361096d565b1015610c2b576040805160e560020a62461bcd02815260206004820152603460248201527f42616c616e6365206d7573742062652067726561746572207468656e20616d6f60448201527f756e7420746f206265207472616e736665726564000000000000000000000000606482015290519081900360840190fd5b33600160a060020a0316634d840bcc6040518163ffffffff1660e060020a028152600401602060405180830381600087803b158015610c6957600080fd5b505af1158015610c7d573d6000803e3d6000fd5b505050506040513d6020811015610c9357600080fd5b50511515600114610cee576040805160e560020a62461bcd02815260206004820152601d60248201527f636f6e7472616374206973206e6f742077697468726472617761626c65000000604482015290519081900360640190fd5b600160a060020a038216600090815260016020526040902054610d17908263ffffffff61162d16565b600160a060020a038316600090815260016020526040808220929092553381522054610d49908263ffffffff61143b16565b336000818152600160209081526040918290209390935580518481529051600160a060020a03861693600080516020611a2a833981519152928290030190a35050565b6000610d97856110ea565b156110d35783610da63361096d565b1015610e48576040805160e560020a62461bcd02815260206004820152604560248201527f5b5472616e73666572204572726f725d2042616c616e6365206d75737420626560448201527f2067726561746572207468656e20616d6f756e7420746f206265207472616e7360648201527f6665726564000000000000000000000000000000000000000000000000000000608482015290519081900360a40190fd5b610e6184610e553361096d565b9063ffffffff61143b16565b33600090815260016020526040902055610e8a84610e7e8761096d565b9063ffffffff61162d16565b6001600087600160a060020a0316600160a060020a031681526020019081526020016000208190555084600160a060020a03166000836040516020018082805190602001908083835b60208310610ef25780518252601f199092019160209182019101610ed3565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b60208310610f555780518252601f199092019160209182019101610f36565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902060e060020a9004903387876040518563ffffffff1660e060020a0281526004018084600160a060020a0316600160a060020a03168152602001838152602001828051906020019080838360005b83811015610fe7578181015183820152602001610fcf565b50505050905090810190601f1680156110145780820380516001836020036101000a031916815260200191505b50935050505060006040518083038185885af19350505050151561103457fe5b826040518082805190602001908083835b602083106110645780518252601f199092019160209182019101611045565b51815160209384036101000a6000190180199092169116179052604080519290940182900382208a83529351939550600160a060020a038b16945033937f9b6aa1faccbd47218eb2870ae6411b374a3cf25c4285a37ef90bcb3c1fdde9ac9350918290030190a45060016110e2565b6110df33868686611452565b90505b949350505050565b6000903b1190565b6000826110fe8661096d565b10156111a0576040805160e560020a62461bcd02815260206004820152604560248201527f5b5472616e73666572204572726f725d2042616c616e6365206d75737420626560448201527f2067726561746572207468656e20616d6f756e7420746f206265207472616e7360648201527f6665726564000000000000000000000000000000000000000000000000000000608482015290519081900360a40190fd5b600160a060020a0384161515611226576040805160e560020a62461bcd02815260206004820152602960248201527f5b5472616e73666572204572726f725d205f746f2063616e6e6f74206265203060448201527f7820616464726573730000000000000000000000000000000000000000000000606482015290519081900360840190fd5b61123383610e558761096d565b600160a060020a03861660009081526001602052604090205561125983610e7e8661096d565b6001600086600160a060020a0316600160a060020a031681526020019081526020016000208190555083600160a060020a031663c0ee0b8a8685856040518463ffffffff1660e060020a0281526004018084600160a060020a0316600160a060020a0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156113015781810151838201526020016112e9565b50505050905090810190601f16801561132e5780820380516001836020036101000a031916815260200191505b50945050505050600060405180830381600087803b15801561134f57600080fd5b505af1158015611363573d6000803e3d6000fd5b5050604080518681529051600160a060020a03808916945089169250600080516020611a2a8339815191529181900360200190a3816040518082805190602001908083835b602083106113c75780518252601f1990920191602091820191016113a8565b51815160209384036101000a6000190180199092169116179052604080519290940182900382208983529351939550600160a060020a038a811695508b16937f9b6aa1faccbd47218eb2870ae6411b374a3cf25c4285a37ef90bcb3c1fdde9ac9350918290030190a4506001949350505050565b6000808383111561144b57600080fd5b5050900390565b60008261145e8661096d565b1015611500576040805160e560020a62461bcd02815260206004820152604560248201527f5b5472616e73666572204572726f725d2042616c616e6365206d75737420626560448201527f2067726561746572207468656e20616d6f756e7420746f206265207472616e7360648201527f6665726564000000000000000000000000000000000000000000000000000000608482015290519081900360a40190fd5b600160a060020a0384161515611586576040805160e560020a62461bcd02815260206004820152602960248201527f5b5472616e73666572204572726f725d205f746f2063616e6e6f74206265203060448201527f7820616464726573730000000000000000000000000000000000000000000000606482015290519081900360840190fd5b61159383610e558761096d565b600160a060020a0386166000908152600160205260409020556115b983610e7e8661096d565b600160a060020a038086166000818152600160209081526040918290209490945580518781529051919392891692600080516020611a2a83398151915292918290030190a381604051808280519060200190808383602083106113c75780518252601f1990920191602091820191016113a8565b600082820183811015610b5757600080fd5b600160a060020a03821615156116c5576040805160e560020a62461bcd02815260206004820152603460248201527f5b4d696e74204572726f725d20526563697069656e74206f6620746f6b656e7360448201527f2063616e6e6f7420626520616464726573732030000000000000000000000000606482015290519081900360840190fd5b6003546116d8908263ffffffff61162d16565b600355600160a060020a038216600090815260016020526040902054611704908263ffffffff61162d16565b600160a060020a0383166000818152600160209081526040808320949094558351858152935192939192600080516020611a2a8339815191529281900390910190a35050565b60035461175d908263ffffffff61143b16565b600355600160a060020a038216600090815260016020526040902054611789908263ffffffff61143b16565b600160a060020a038316600081815260016020908152604080832094909455835185815293519193600080516020611a2a833981519152929081900390910190a35050565b6117d6610a0f565b15156117e157600080fd5b6117eb828261174a565b600160a060020a0382166000818152600260209081526040808320338085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35050565b61185c60048263ffffffff61198f16565b604051600160a060020a038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b6118a460048263ffffffff6119dd16565b604051600160a060020a038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b6000600160a060020a03821615156118f257600080fd5b50600160a060020a03166000908152602091909152604090205460ff1690565b600160a060020a038116151561192757600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600160a060020a03811615156119a457600080fd5b6119ae82826118db565b156119b857600080fd5b600160a060020a0316600090815260209190915260409020805460ff19166001179055565b600160a060020a03811615156119f257600080fd5b6119fc82826118db565b1515611a0757600080fd5b600160a060020a0316600090815260209190915260409020805460ff191690555600ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa165627a7a7230582029f99c9499038b27a43283741ec05f09d26bcf992c515a39842cc21c3364e7c10029",
  "deployedBytecode": "0x6080604052600436106101245763ffffffff60e060020a60003504166306fdde038114610129578063095ea7b3146101b357806318160ddd146101eb57806323b872dd14610212578063313ce5671461023c578063395093511461026757806340c10f191461028b57806342966c68146102af57806370a08231146102c9578063715018a6146102ea57806379cc6790146102ff5780638da5cb5b146103235780638f32d59b1461035457806395d89b4114610369578063983b2d561461037e578063986502751461039f578063a457c2d7146103b4578063a9059cbb146103d8578063aa271e1a146103fc578063be45fd621461041d578063dd62ed3e14610486578063f2fde38b146104ad578063f3fef3a3146104ce578063f6368f8a146104f2575b600080fd5b34801561013557600080fd5b5061013e610599565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610178578181015183820152602001610160565b50505050905090810190601f1680156101a55780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101bf57600080fd5b506101d7600160a060020a0360043516602435610627565b604080519115158252519081900360200190f35b3480156101f757600080fd5b50610200610716565b60408051918252519081900360200190f35b34801561021e57600080fd5b506101d7600160a060020a036004358116906024351660443561071c565b34801561024857600080fd5b5061025161080d565b6040805160ff9092168252519081900360200190f35b34801561027357600080fd5b506101d7600160a060020a0360043516602435610816565b34801561029757600080fd5b506101d7600160a060020a0360043516602435610937565b3480156102bb57600080fd5b506102c7600435610960565b005b3480156102d557600080fd5b50610200600160a060020a036004351661096d565b3480156102f657600080fd5b506102c7610988565b34801561030b57600080fd5b506102c7600160a060020a03600435166024356109f2565b34801561032f57600080fd5b50610338610a00565b60408051600160a060020a039092168252519081900360200190f35b34801561036057600080fd5b506101d7610a0f565b34801561037557600080fd5b5061013e610a20565b34801561038a57600080fd5b506102c7600160a060020a0360043516610a7b565b3480156103ab57600080fd5b506102c7610a98565b3480156103c057600080fd5b506101d7600160a060020a0360043516602435610aa3565b3480156103e457600080fd5b506101d7600160a060020a0360043516602435610ad7565b34801561040857600080fd5b506101d7600160a060020a0360043516610b0f565b34801561042957600080fd5b50604080516020600460443581810135601f81018490048402850184019095528484526101d7948235600160a060020a0316946024803595369594606494920191908190840183828082843750949750610b289650505050505050565b34801561049257600080fd5b50610200600160a060020a0360043581169060243516610b5e565b3480156104b957600080fd5b506102c7600160a060020a0360043516610b89565b3480156104da57600080fd5b506102c7600160a060020a0360043516602435610ba5565b3480156104fe57600080fd5b50604080516020600460443581810135601f81018490048402850184019095528484526101d7948235600160a060020a031694602480359536959460649492019190819084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a999881019791965091820194509250829150840183828082843750949750610d8c9650505050505050565b6005805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561061f5780601f106105f45761010080835404028352916020019161061f565b820191906000526020600020905b81548152906001019060200180831161060257829003601f168201915b505050505081565b6000600160a060020a03831615156106af576040805160e560020a62461bcd02815260206004820152603460248201527f5b417070726f7665204572726f725d205370656e646572206163636f756e742060448201527f63616e6e6f742062652030782061646472657373000000000000000000000000606482015290519081900360840190fd5b336000818152600260209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b60035490565b60006060600061072b856110ea565b1561079c5761073c868686856110f2565b600160a060020a0387166000908152600260209081526040808320338452909152902054909150610773908563ffffffff61143b16565b600160a060020a0387166000908152600260209081526040808320338452909152902055610804565b6107a886868685611452565b600160a060020a03871660009081526002602090815260408083203384529091529020549091506107df908563ffffffff61143b16565b600160a060020a03871660009081526002602090815260408083203384529091529020555b95945050505050565b60075460ff1681565b6000600160a060020a038316151561089e576040805160e560020a62461bcd02815260206004820152603660248201527f5b416c6c6f77616e6365204572726f725d205370656e646572206163636f756e60448201527f742063616e6e6f74206265203078206164647265737300000000000000000000606482015290519081900360840190fd5b336000908152600260209081526040808320600160a060020a03871684529091529020546108d2908363ffffffff61162d16565b336000818152600260209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b600061094233610b0f565b151561094d57600080fd5b610957838361163f565b50600192915050565b61096a338261174a565b50565b600160a060020a031660009081526001602052604090205490565b610990610a0f565b151561099b57600080fd5b60008054604051600160a060020a03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b6109fc82826117ce565b5050565b600054600160a060020a031690565b600054600160a060020a0316331490565b6006805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561061f5780601f106105f45761010080835404028352916020019161061f565b610a8433610b0f565b1515610a8f57600080fd5b61096a8161184b565b610aa133611893565b565b336000908152600260209081526040808320600160a060020a03861684529091528120546108d2908363ffffffff61143b16565b60006060610ae4846110ea565b15610afc57610af5338585846110f2565b9150610b08565b610af533858584611452565b5092915050565b6000610b2260048363ffffffff6118db16565b92915050565b6000610b33846110ea565b15610b4b57610b44338585856110f2565b9050610b57565b610b4433858585611452565b9392505050565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b610b91610a0f565b1515610b9c57600080fd5b61096a81611912565b80610baf3361096d565b1015610c2b576040805160e560020a62461bcd02815260206004820152603460248201527f42616c616e6365206d7573742062652067726561746572207468656e20616d6f60448201527f756e7420746f206265207472616e736665726564000000000000000000000000606482015290519081900360840190fd5b33600160a060020a0316634d840bcc6040518163ffffffff1660e060020a028152600401602060405180830381600087803b158015610c6957600080fd5b505af1158015610c7d573d6000803e3d6000fd5b505050506040513d6020811015610c9357600080fd5b50511515600114610cee576040805160e560020a62461bcd02815260206004820152601d60248201527f636f6e7472616374206973206e6f742077697468726472617761626c65000000604482015290519081900360640190fd5b600160a060020a038216600090815260016020526040902054610d17908263ffffffff61162d16565b600160a060020a038316600090815260016020526040808220929092553381522054610d49908263ffffffff61143b16565b336000818152600160209081526040918290209390935580518481529051600160a060020a03861693600080516020611a2a833981519152928290030190a35050565b6000610d97856110ea565b156110d35783610da63361096d565b1015610e48576040805160e560020a62461bcd02815260206004820152604560248201527f5b5472616e73666572204572726f725d2042616c616e6365206d75737420626560448201527f2067726561746572207468656e20616d6f756e7420746f206265207472616e7360648201527f6665726564000000000000000000000000000000000000000000000000000000608482015290519081900360a40190fd5b610e6184610e553361096d565b9063ffffffff61143b16565b33600090815260016020526040902055610e8a84610e7e8761096d565b9063ffffffff61162d16565b6001600087600160a060020a0316600160a060020a031681526020019081526020016000208190555084600160a060020a03166000836040516020018082805190602001908083835b60208310610ef25780518252601f199092019160209182019101610ed3565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b60208310610f555780518252601f199092019160209182019101610f36565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902060e060020a9004903387876040518563ffffffff1660e060020a0281526004018084600160a060020a0316600160a060020a03168152602001838152602001828051906020019080838360005b83811015610fe7578181015183820152602001610fcf565b50505050905090810190601f1680156110145780820380516001836020036101000a031916815260200191505b50935050505060006040518083038185885af19350505050151561103457fe5b826040518082805190602001908083835b602083106110645780518252601f199092019160209182019101611045565b51815160209384036101000a6000190180199092169116179052604080519290940182900382208a83529351939550600160a060020a038b16945033937f9b6aa1faccbd47218eb2870ae6411b374a3cf25c4285a37ef90bcb3c1fdde9ac9350918290030190a45060016110e2565b6110df33868686611452565b90505b949350505050565b6000903b1190565b6000826110fe8661096d565b10156111a0576040805160e560020a62461bcd02815260206004820152604560248201527f5b5472616e73666572204572726f725d2042616c616e6365206d75737420626560448201527f2067726561746572207468656e20616d6f756e7420746f206265207472616e7360648201527f6665726564000000000000000000000000000000000000000000000000000000608482015290519081900360a40190fd5b600160a060020a0384161515611226576040805160e560020a62461bcd02815260206004820152602960248201527f5b5472616e73666572204572726f725d205f746f2063616e6e6f74206265203060448201527f7820616464726573730000000000000000000000000000000000000000000000606482015290519081900360840190fd5b61123383610e558761096d565b600160a060020a03861660009081526001602052604090205561125983610e7e8661096d565b6001600086600160a060020a0316600160a060020a031681526020019081526020016000208190555083600160a060020a031663c0ee0b8a8685856040518463ffffffff1660e060020a0281526004018084600160a060020a0316600160a060020a0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156113015781810151838201526020016112e9565b50505050905090810190601f16801561132e5780820380516001836020036101000a031916815260200191505b50945050505050600060405180830381600087803b15801561134f57600080fd5b505af1158015611363573d6000803e3d6000fd5b5050604080518681529051600160a060020a03808916945089169250600080516020611a2a8339815191529181900360200190a3816040518082805190602001908083835b602083106113c75780518252601f1990920191602091820191016113a8565b51815160209384036101000a6000190180199092169116179052604080519290940182900382208983529351939550600160a060020a038a811695508b16937f9b6aa1faccbd47218eb2870ae6411b374a3cf25c4285a37ef90bcb3c1fdde9ac9350918290030190a4506001949350505050565b6000808383111561144b57600080fd5b5050900390565b60008261145e8661096d565b1015611500576040805160e560020a62461bcd02815260206004820152604560248201527f5b5472616e73666572204572726f725d2042616c616e6365206d75737420626560448201527f2067726561746572207468656e20616d6f756e7420746f206265207472616e7360648201527f6665726564000000000000000000000000000000000000000000000000000000608482015290519081900360a40190fd5b600160a060020a0384161515611586576040805160e560020a62461bcd02815260206004820152602960248201527f5b5472616e73666572204572726f725d205f746f2063616e6e6f74206265203060448201527f7820616464726573730000000000000000000000000000000000000000000000606482015290519081900360840190fd5b61159383610e558761096d565b600160a060020a0386166000908152600160205260409020556115b983610e7e8661096d565b600160a060020a038086166000818152600160209081526040918290209490945580518781529051919392891692600080516020611a2a83398151915292918290030190a381604051808280519060200190808383602083106113c75780518252601f1990920191602091820191016113a8565b600082820183811015610b5757600080fd5b600160a060020a03821615156116c5576040805160e560020a62461bcd02815260206004820152603460248201527f5b4d696e74204572726f725d20526563697069656e74206f6620746f6b656e7360448201527f2063616e6e6f7420626520616464726573732030000000000000000000000000606482015290519081900360840190fd5b6003546116d8908263ffffffff61162d16565b600355600160a060020a038216600090815260016020526040902054611704908263ffffffff61162d16565b600160a060020a0383166000818152600160209081526040808320949094558351858152935192939192600080516020611a2a8339815191529281900390910190a35050565b60035461175d908263ffffffff61143b16565b600355600160a060020a038216600090815260016020526040902054611789908263ffffffff61143b16565b600160a060020a038316600081815260016020908152604080832094909455835185815293519193600080516020611a2a833981519152929081900390910190a35050565b6117d6610a0f565b15156117e157600080fd5b6117eb828261174a565b600160a060020a0382166000818152600260209081526040808320338085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35050565b61185c60048263ffffffff61198f16565b604051600160a060020a038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b6118a460048263ffffffff6119dd16565b604051600160a060020a038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b6000600160a060020a03821615156118f257600080fd5b50600160a060020a03166000908152602091909152604090205460ff1690565b600160a060020a038116151561192757600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600160a060020a03811615156119a457600080fd5b6119ae82826118db565b156119b857600080fd5b600160a060020a0316600090815260209190915260409020805460ff19166001179055565b600160a060020a03811615156119f257600080fd5b6119fc82826118db565b1515611a0757600080fd5b600160a060020a0316600090815260209190915260409020805460ff191690555600ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa165627a7a7230582029f99c9499038b27a43283741ec05f09d26bcf992c515a39842cc21c3364e7c10029",
  "sourceMap": "618:43:11:-;562:190;618:43;;562:190;618:43;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;665:28:11;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;697:25:11;;;-1:-1:-1;;697:25:11;;;727:23;5:2:-1;;;;30:1;27;20:12;5:2;-1:-1;516:6:14;:19;;-1:-1:-1;;;;;;516:19:14;525:10;516:19;;;;550:40;;-1:-1:-1;;;;;583:6:14;;;;;516;550:40;;516:6;;550:40;269:22:13;280:10;269;;;;:22;:::i;:::-;562:190:11;;674:119:13;730:21;:8;743:7;730:12;;;;;;:21;:::i;:::-;766:20;;-1:-1:-1;;;;;766:20:13;;;;;;;;674:119;:::o;258:181:16:-;-1:-1:-1;;;;;334:21:16;;;;326:30;;;;;;375:18;379:4;385:7;375:3;;;;:18;:::i;:::-;374:19;366:28;;;;;;-1:-1:-1;;;;;405:20:16;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;405:27:16;428:4;405:27;;;258:181::o;780:190::-;876:4;-1:-1:-1;;;;;904:21:16;;;;896:30;;;;;;-1:-1:-1;;;;;;943:20:16;:11;:20;;;;;;;;;;;;;;;780:190::o;562::11:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;562:190:11;;;-1:-1:-1;562:190:11;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "562:190:11:-;;;;;;;;;-1:-1:-1;;;562:190:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;618:43;;8:9:-1;5:2;;;30:1;27;20:12;5:2;618:43:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;618:43:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3659:301:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3659:301:1;-1:-1:-1;;;;;3659:301:1;;;;;;;;;;;;;;;;;;;;;;;;;1377:91;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1377:91:1;;;;;;;;;;;;;;;;;;;;2489:531;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2489:531:1;-1:-1:-1;;;;;2489:531:1;;;;;;;;;;;;697:25:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;697:25:11;;;;;;;;;;;;;;;;;;;;;;;4434:385:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;4434:385:1;-1:-1:-1;;;;;4434:385:1;;;;;;;433:120:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;433:120:4;-1:-1:-1;;;;;433:120:4;;;;;;;299:77:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;299:77:2;;;;;;;1627:106:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1627:106:1;-1:-1:-1;;;;;1627:106:1;;;;;1348:137:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1348:137:14;;;;628:93:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;628:93:2;-1:-1:-1;;;;;628:93:2;;;;;;;660:77:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;660:77:14;;;;;;;;-1:-1:-1;;;;;660:77:14;;;;;;;;;;;;;;980:90;;8:9:-1;5:2;;;30:1;27;20:12;5:2;980:90:14;;;;665:28:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;665:28:11;;;;499:90:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;499:90:13;-1:-1:-1;;;;;499:90:13;;;;;594:75;;8:9:-1;5:2;;;30:1;27;20:12;5:2;594:75:13;;;;5297:303:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;5297:303:1;-1:-1:-1;;;;;5297:303:1;;;;;;;7950:319;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;7950:319:1;-1:-1:-1;;;;;7950:319:1;;;;;;;387:107:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;387:107:13;-1:-1:-1;;;;;387:107:13;;;;;7266:300:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;7266:300:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7266:300:1;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7266:300:1;;-1:-1:-1;7266:300:1;;-1:-1:-1;;;;;;;7266:300:1;2069:131;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2069:131:1;-1:-1:-1;;;;;2069:131:1;;;;;;;;;;1656:107:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1656:107:14;-1:-1:-1;;;;;1656:107:14;;;;;12857:461:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;12857:461:1;-1:-1:-1;;;;;12857:461:1;;;;;;;6085:713;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;6085:713:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6085:713:1;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6085:713:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6085:713:1;;;;-1:-1:-1;6085:713:1;-1:-1:-1;6085:713:1;;-1:-1:-1;6085:713:1;;;;;;;;-1:-1:-1;6085:713:1;;-1:-1:-1;6085:713:1;;-1:-1:-1;;;;;;;6085:713:1;618:43:11;;;;;;;;;;;;;;;-1:-1:-1;;618:43:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3659:301:1:-;3724:4;-1:-1:-1;;;;;3750:21:1;;;;3741:87;;;;;-1:-1:-1;;;;;3741:87:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3850:10;3841:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;3841:29:1;;;;;;;;;;;;:37;;;3894:36;;;;;;;3841:29;;3850:10;3894:36;;;;;;;;;;;-1:-1:-1;3948:4:1;3659:301;;;;:::o;1377:91::-;1448:12;;1377:91;:::o;2489:531::-;2568:4;2584:18;2613:11;2638:15;2650:2;2638:11;:15::i;:::-;2635:354;;;2679:43;2699:4;2705:2;2709:5;2716;2679:19;:43::i;:::-;-1:-1:-1;;;;;2766:14:1;;;;;;:8;:14;;;;;;;;2781:10;2766:26;;;;;;;;2670:52;;-1:-1:-1;2766:37:1;;2797:5;2766:37;:30;:37;:::i;:::-;-1:-1:-1;;;;;2737:14:1;;;;;;:8;:14;;;;;;;;2752:10;2737:26;;;;;;;:66;2635:354;;;2854:42;2873:4;2879:2;2883:5;2890;2854:18;:42::i;:::-;-1:-1:-1;;;;;2940:14:1;;;;;;:8;:14;;;;;;;;2955:10;2940:26;;;;;;;;2845:51;;-1:-1:-1;2940:37:1;;2971:5;2940:37;:30;:37;:::i;:::-;-1:-1:-1;;;;;2911:14:1;;;;;;:8;:14;;;;;;;;2926:10;2911:26;;;;;;;:66;2635:354;3006:6;2489:531;-1:-1:-1;;;;;2489:531:1:o;697:25:11:-;;;;;;:::o;4434:385:1:-;4514:4;-1:-1:-1;;;;;4539:21:1;;;;4530:89;;;;;-1:-1:-1;;;;;4530:89:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4674:10;4665:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4665:29:1;;;;;;;;;;:45;;4699:10;4665:45;:33;:45;:::i;:::-;4641:10;4632:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4632:29:1;;;;;;;;;;;;:79;;;4729:60;;;;;;4632:29;;4729:60;;;;;;;;;;;-1:-1:-1;4807:4:1;4434:385;;;;:::o;433:120:4:-;501:4;343:20:13;352:10;343:8;:20::i;:::-;335:29;;;;;;;;513:16:4;519:2;523:5;513;:16::i;:::-;-1:-1:-1;543:4:4;433:120;;;;:::o;299:77:2:-;345:24;351:10;363:5;345;:24::i;:::-;299:77;:::o;1627:106:1:-;-1:-1:-1;;;;;1709:16:1;1682:7;1709:16;;;:9;:16;;;;;;;1627:106::o;1348:137:14:-;864:9;:7;:9::i;:::-;856:18;;;;;;;;1446:1;1430:6;;1409:40;;-1:-1:-1;;;;;1430:6:14;;;;1409:40;;1446:1;;1409:40;1476:1;1459:19;;-1:-1:-1;;1459:19:14;;;1348:137::o;628:93:2:-;692:22;702:4;708:5;692:9;:22::i;:::-;628:93;;:::o;660:77:14:-;698:7;724:6;-1:-1:-1;;;;;724:6:14;660:77;:::o;980:90::-;1020:4;1057:6;-1:-1:-1;;;;;1057:6:14;1043:10;:20;;980:90::o;665:28:11:-;;;;;;;;;;;;;;;-1:-1:-1;;665:28:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;499:90:13;343:20;352:10;343:8;:20::i;:::-;335:29;;;;;;;;563:19;574:7;563:10;:19::i;594:75::-;637:25;651:10;637:13;:25::i;:::-;594:75::o;5297:303:1:-;5450:10;5382:4;5441:20;;;:8;:20;;;;;;;;-1:-1:-1;;;;;5441:29:1;;;;;;;;;;:50;;5475:15;5441:50;:33;:50;:::i;7950:319::-;8008:12;8033:18;8065:15;8077:2;8065:11;:15::i;:::-;8062:200;;;8104:49;8124:10;8136:2;8140:5;8147;8104:19;:49::i;:::-;8097:56;;;;8062:200;8202:48;8221:10;8233:2;8237:5;8244;8202:18;:48::i;8062:200::-;7950:319;;;;;:::o;387:107:13:-;443:4;466:21;:8;479:7;466:21;:12;:21;:::i;:::-;459:28;387:107;-1:-1:-1;;387:107:13:o;7266:300:1:-;7336:12;7364:15;7376:2;7364:11;:15::i;:::-;7361:198;;;7403:48;7423:10;7435:2;7439:5;7446:4;7403:19;:48::i;:::-;7396:55;;;;7361:198;7500:47;7519:10;7531:2;7535:5;7542:4;7500:18;:47::i;7361:198::-;7266:300;;;;;:::o;2069:131::-;-1:-1:-1;;;;;2168:15:1;;;2141:7;2168:15;;;:8;:15;;;;;;;;:24;;;;;;;;;;;;;2069:131::o;1656:107:14:-;864:9;:7;:9::i;:::-;856:18;;;;;;;;1728:28;1747:8;1728:18;:28::i;12857:461:1:-;12972:6;12947:21;12957:10;12947:9;:21::i;:::-;:31;;12938:97;;;;;-1:-1:-1;;;;;12938:97:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13062:10;-1:-1:-1;;;;;13054:34:1;;:36;;;;;-1:-1:-1;;;13054:36:1;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13054:36:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13054:36:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;13054:36:1;:44;;13094:4;13054:44;13046:86;;;;;-1:-1:-1;;;;;13046:86:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;13162:16:1;;;;;;:9;:16;;;;;;:28;;13183:6;13162:28;:20;:28;:::i;:::-;-1:-1:-1;;;;;13143:16:1;;;;;;:9;:16;;;;;;:47;;;;13236:10;13226:21;;;;:33;;13252:6;13226:33;:25;:33;:::i;:::-;13212:10;13202:21;;;;:9;:21;;;;;;;;;:57;;;;13275:35;;;;;;;-1:-1:-1;;;;;13275:35:1;;;-1:-1:-1;;;;;;;;;;;13275:35:1;;;;;;;12857:461;;:::o;6085:713::-;6179:12;6207:15;6219:2;6207:11;:15::i;:::-;6204:587;;;6273:5;6248:21;6258:10;6248:9;:21::i;:::-;:30;;6239:113;;;;;-1:-1:-1;;;;;6239:113:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6391:32;6417:5;6391:21;6401:10;6391:9;:21::i;:::-;:25;:32;:25;:32;:::i;:::-;6377:10;6367:21;;;;:9;:21;;;;;:56;6454:24;6472:5;6454:13;6464:2;6454:9;:13::i;:::-;:17;:24;:17;:24;:::i;:::-;6438:9;:13;6448:2;-1:-1:-1;;;;;6438:13:1;-1:-1:-1;;;;;6438:13:1;;;;;;;;;;;;:40;;;;6500:2;-1:-1:-1;;;;;6500:7:1;6514:1;6551:15;6534:33;;;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;6534:33:1;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;6534:33:1;;;6524:44;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;6524:44:1;;;;;;;;;;;;;;;;-1:-1:-1;;;6500:95:1;;;6571:10;6583:5;6590:4;6500:95;;;;;-1:-1:-1;;;6500:95:1;;;;;;;-1:-1:-1;;;;;6500:95:1;-1:-1:-1;;;;;6500:95:1;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;6500:95:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6493:103;;;;;;6652:4;6616:41;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;6616:41:1;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6616:41:1;;;-1:-1:-1;6629:10:1;;6616:41;;-1:-1:-1;6616:41:1;;;;;;;-1:-1:-1;6679:4:1;6672:11;;6204:587;6732:47;6751:10;6763:2;6767:5;6774:4;6732:18;:47::i;:::-;6725:54;;6204:587;6085:713;;;;;;:::o;10337:211::-;10395:16;10484:18;;10531:8;;10337:211::o;11973:631::-;12073:12;12127:6;12107:16;12117:5;12107:9;:16::i;:::-;:26;;12098:109;;;;;-1:-1:-1;;;;;12098:109:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;12227:17:1;;;;12218:72;;;;;-1:-1:-1;;;;;12218:72:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12322:28;12343:6;12322:16;12332:5;12322:9;:16::i;:28::-;-1:-1:-1;;;;;12303:16:1;;;;;;:9;:16;;;;;:47;12378:26;12397:6;12378:14;12388:3;12378:9;:14::i;:26::-;12361:9;:14;12371:3;-1:-1:-1;;;;;12361:14:1;-1:-1:-1;;;;;12361:14:1;;;;;;;;;;;;:43;;;;12425:3;-1:-1:-1;;;;;12415:28:1;;12444:5;12451:6;12459:5;12415:50;;;;;-1:-1:-1;;;12415:50:1;;;;;;;-1:-1:-1;;;;;12415:50:1;-1:-1:-1;;;;;12415:50:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;12415:50:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12415:50:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;12491:28:1;;;;;;;;-1:-1:-1;;;;;12491:28:1;;;;-1:-1:-1;12491:28:1;;;-1:-1:-1;;;;;;;;;;;;12491:28:1;;;;;;;;12568:5;12535:39;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;12535:39:1;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;12535:39:1;;;;-1:-1:-1;12535:39:1;;;;;-1:-1:-1;12535:39:1;;;;;;;-1:-1:-1;12592:4:1;11973:631;;;;;;:::o;1155:145:17:-;1213:7;;1240:6;;;;1232:15;;;;;;-1:-1:-1;;1269:5:17;;;1155:145::o;10940:561:1:-;11039:12;11093:6;11073:16;11083:5;11073:9;:16::i;:::-;:26;;11064:109;;;;;-1:-1:-1;;;;;11064:109:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11193:17:1;;;;11184:72;;;;;-1:-1:-1;;;;;11184:72:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11288:28;11309:6;11288:16;11298:5;11288:9;:16::i;:28::-;-1:-1:-1;;;;;11269:16:1;;;;;;:9;:16;;;;;:47;11344:26;11363:6;11344:14;11354:3;11344:9;:14::i;:26::-;-1:-1:-1;;;;;11327:14:1;;;;;;;:9;:14;;;;;;;;;:43;;;;11388:28;;;;;;;11327:14;;11388:28;;;;-1:-1:-1;;;;;;;;;;;11388:28:1;;;;;;;;11465:5;11432:39;;;;;;;;;;;;;66:2:-1;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;1371:145:17;1429:7;1460:5;;;1483:6;;;;1475:15;;;;;8615:326:1;-1:-1:-1;;;;;8691:21:1;;;;8682:87;;;;;-1:-1:-1;;;;;8682:87:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8797:12;;:23;;8814:5;8797:23;:16;:23;:::i;:::-;8782:12;:38;-1:-1:-1;;;;;8852:18:1;;;;;;:9;:18;;;;;;:29;;8875:5;8852:29;:22;:29;:::i;:::-;-1:-1:-1;;;;;8831:18:1;;;;;;:9;:18;;;;;;;;:50;;;;8897:36;;;;;;;8831:18;;;;-1:-1:-1;;;;;;;;;;;8897:36:1;;;;;;;;;8615:326;;:::o;9170:226::-;9252:12;;:23;;9269:5;9252:23;:16;:23;:::i;:::-;9237:12;:38;-1:-1:-1;;;;;9307:18:1;;;;;;:9;:18;;;;;;:29;;9330:5;9307:29;:22;:29;:::i;:::-;-1:-1:-1;;;;;9286:18:1;;;;;;:9;:18;;;;;;;;:50;;;;9352:36;;;;;;;9286:18;;-1:-1:-1;;;;;;;;;;;9352:36:1;;;;;;;;;;9170:226;;:::o;9721:354::-;864:9:14;:7;:9::i;:::-;856:18;;;;;;;;9970:21:1;9976:7;9985:5;9970;:21::i;:::-;-1:-1:-1;;;;;10007:60:1;;10037:17;;;;:8;:17;;;;;;;;10025:10;10037:29;;;;;;;;;;;10007:60;;;;;;;10025:10;;10007:60;;;;;;;;;;;;9721:354;;:::o;674:119:13:-;730:21;:8;743:7;730:21;:12;:21;:::i;:::-;766:20;;-1:-1:-1;;;;;766:20:13;;;;;;;;674:119;:::o;798:127::-;857:24;:8;873:7;857:24;:15;:24;:::i;:::-;896:22;;-1:-1:-1;;;;;896:22:13;;;;;;;;798:127;:::o;780:190:16:-;876:4;-1:-1:-1;;;;;904:21:16;;;;896:30;;;;;;-1:-1:-1;;;;;;943:20:16;:11;:20;;;;;;;;;;;;;;;780:190::o;1907:183:14:-;-1:-1:-1;;;;;1980:22:14;;;;1972:31;;;;;;2039:6;;;2018:38;;-1:-1:-1;;;;;2018:38:14;;;;2039:6;;;2018:38;;;2066:6;:17;;-1:-1:-1;;2066:17:14;-1:-1:-1;;;;;2066:17:14;;;;;;;;;;1907:183::o;258:181:16:-;-1:-1:-1;;;;;334:21:16;;;;326:30;;;;;;375:18;379:4;385:7;375:3;:18::i;:::-;374:19;366:28;;;;;;-1:-1:-1;;;;;405:20:16;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;405:27:16;428:4;405:27;;;258:181::o;511:184::-;-1:-1:-1;;;;;590:21:16;;;;582:30;;;;;;630:18;634:4;640:7;630:3;:18::i;:::-;622:27;;;;;;;;-1:-1:-1;;;;;660:20:16;683:5;660:20;;;;;;;;;;;:28;;-1:-1:-1;;660:28:16;;;511:184::o",
  "source": "pragma solidity ^0.4.24;\n\nimport \"./ERC223Mintable.sol\";\nimport \"./ERC223Burnable.sol\";\n\n/**\n * @title ERC223 Token\n *\n * @dev Lendflo implementation of ERC223 Token originally suggested by: \n * https://github.com/Dexaran/ERC223-token-standard\n * and strongly based on standard ERC20 Token:\n * https://github.com/OpenZeppelin/openzeppelin-solidity/blob/master/contracts/token/ERC20/ERC20.sol\n * Lendflo ERC223 implements light fallback function that is not pure\n * and therefore allows to execute other functions in the contract after the transfer of funds.\n */\ncontract LDFToken is ERC223Mintable, ERC223Burnable{\n\n  string public name = \"Lendflo Digital Fiat\";\n  string public symbol = \"LDF\";\n  uint8 public decimals = 0;\n\n  constructor() public {}\n}",
  "sourcePath": "/home/ubuntu/Lendflo-LDF-ERC223/contracts/LDFToken.sol",
  "ast": {
    "absolutePath": "/home/ubuntu/Lendflo-LDF-ERC223/contracts/LDFToken.sol",
    "exportedSymbols": {
      "LDFToken": [
        1403
      ]
    },
    "id": 1404,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1383,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:11"
      },
      {
        "absolutePath": "/home/ubuntu/Lendflo-LDF-ERC223/contracts/ERC223Mintable.sol",
        "file": "./ERC223Mintable.sol",
        "id": 1384,
        "nodeType": "ImportDirective",
        "scope": 1404,
        "sourceUnit": 950,
        "src": "26:30:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/ubuntu/Lendflo-LDF-ERC223/contracts/ERC223Burnable.sol",
        "file": "./ERC223Burnable.sol",
        "id": 1385,
        "nodeType": "ImportDirective",
        "scope": 1404,
        "sourceUnit": 867,
        "src": "57:30:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1386,
              "name": "ERC223Mintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 949,
              "src": "583:14:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC223Mintable_$949",
                "typeString": "contract ERC223Mintable"
              }
            },
            "id": 1387,
            "nodeType": "InheritanceSpecifier",
            "src": "583:14:11"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1388,
              "name": "ERC223Burnable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 866,
              "src": "599:14:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC223Burnable_$866",
                "typeString": "contract ERC223Burnable"
              }
            },
            "id": 1389,
            "nodeType": "InheritanceSpecifier",
            "src": "599:14:11"
          }
        ],
        "contractDependencies": [
          835,
          866,
          949,
          1563,
          1672
        ],
        "contractKind": "contract",
        "documentation": "@title ERC223 Token\n * @dev Lendflo implementation of ERC223 Token originally suggested by: \nhttps://github.com/Dexaran/ERC223-token-standard\nand strongly based on standard ERC20 Token:\nhttps://github.com/OpenZeppelin/openzeppelin-solidity/blob/master/contracts/token/ERC20/ERC20.sol\nLendflo ERC223 implements light fallback function that is not pure\nand therefore allows to execute other functions in the contract after the transfer of funds.",
        "fullyImplemented": true,
        "id": 1403,
        "linearizedBaseContracts": [
          1403,
          866,
          949,
          1563,
          835,
          1672
        ],
        "name": "LDFToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1392,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 1403,
            "src": "618:43:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 1390,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "618:6:11",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "4c656e64666c6f204469676974616c2046696174",
              "id": 1391,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "639:22:11",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_2698fbba4a534c117b80ece121283eb038e15649e5ee1773666b5aac8da23b47",
                "typeString": "literal_string \"Lendflo Digital Fiat\""
              },
              "value": "Lendflo Digital Fiat"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1395,
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "scope": 1403,
            "src": "665:28:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 1393,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "665:6:11",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "4c4446",
              "id": 1394,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "688:5:11",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_3ab6fbe3a1284a9736bde8b0b1cbca1ec6795868719ff20d9be292b58efc4708",
                "typeString": "literal_string \"LDF\""
              },
              "value": "LDF"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1398,
            "name": "decimals",
            "nodeType": "VariableDeclaration",
            "scope": 1403,
            "src": "697:25:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 1396,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "697:5:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 1397,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "721:1:11",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1401,
              "nodeType": "Block",
              "src": "748:2:11",
              "statements": []
            },
            "documentation": null,
            "id": 1402,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1399,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "738:2:11"
            },
            "payable": false,
            "returnParameters": {
              "id": 1400,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "748:0:11"
            },
            "scope": 1403,
            "src": "727:23:11",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1404,
        "src": "562:190:11"
      }
    ],
    "src": "0:752:11"
  },
  "legacyAST": {
    "absolutePath": "/home/ubuntu/Lendflo-LDF-ERC223/contracts/LDFToken.sol",
    "exportedSymbols": {
      "LDFToken": [
        1403
      ]
    },
    "id": 1404,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1383,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:11"
      },
      {
        "absolutePath": "/home/ubuntu/Lendflo-LDF-ERC223/contracts/ERC223Mintable.sol",
        "file": "./ERC223Mintable.sol",
        "id": 1384,
        "nodeType": "ImportDirective",
        "scope": 1404,
        "sourceUnit": 950,
        "src": "26:30:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/ubuntu/Lendflo-LDF-ERC223/contracts/ERC223Burnable.sol",
        "file": "./ERC223Burnable.sol",
        "id": 1385,
        "nodeType": "ImportDirective",
        "scope": 1404,
        "sourceUnit": 867,
        "src": "57:30:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1386,
              "name": "ERC223Mintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 949,
              "src": "583:14:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC223Mintable_$949",
                "typeString": "contract ERC223Mintable"
              }
            },
            "id": 1387,
            "nodeType": "InheritanceSpecifier",
            "src": "583:14:11"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1388,
              "name": "ERC223Burnable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 866,
              "src": "599:14:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC223Burnable_$866",
                "typeString": "contract ERC223Burnable"
              }
            },
            "id": 1389,
            "nodeType": "InheritanceSpecifier",
            "src": "599:14:11"
          }
        ],
        "contractDependencies": [
          835,
          866,
          949,
          1563,
          1672
        ],
        "contractKind": "contract",
        "documentation": "@title ERC223 Token\n * @dev Lendflo implementation of ERC223 Token originally suggested by: \nhttps://github.com/Dexaran/ERC223-token-standard\nand strongly based on standard ERC20 Token:\nhttps://github.com/OpenZeppelin/openzeppelin-solidity/blob/master/contracts/token/ERC20/ERC20.sol\nLendflo ERC223 implements light fallback function that is not pure\nand therefore allows to execute other functions in the contract after the transfer of funds.",
        "fullyImplemented": true,
        "id": 1403,
        "linearizedBaseContracts": [
          1403,
          866,
          949,
          1563,
          835,
          1672
        ],
        "name": "LDFToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1392,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 1403,
            "src": "618:43:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 1390,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "618:6:11",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "4c656e64666c6f204469676974616c2046696174",
              "id": 1391,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "639:22:11",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_2698fbba4a534c117b80ece121283eb038e15649e5ee1773666b5aac8da23b47",
                "typeString": "literal_string \"Lendflo Digital Fiat\""
              },
              "value": "Lendflo Digital Fiat"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1395,
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "scope": 1403,
            "src": "665:28:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 1393,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "665:6:11",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "4c4446",
              "id": 1394,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "688:5:11",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_3ab6fbe3a1284a9736bde8b0b1cbca1ec6795868719ff20d9be292b58efc4708",
                "typeString": "literal_string \"LDF\""
              },
              "value": "LDF"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1398,
            "name": "decimals",
            "nodeType": "VariableDeclaration",
            "scope": 1403,
            "src": "697:25:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 1396,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "697:5:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 1397,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "721:1:11",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1401,
              "nodeType": "Block",
              "src": "748:2:11",
              "statements": []
            },
            "documentation": null,
            "id": 1402,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1399,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "738:2:11"
            },
            "payable": false,
            "returnParameters": {
              "id": 1400,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "748:0:11"
            },
            "scope": 1403,
            "src": "727:23:11",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1404,
        "src": "562:190:11"
      }
    ],
    "src": "0:752:11"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Linux.g++"
  },
  "networks": {},
  "schemaVersion": "3.0.1",
  "updatedAt": "2019-05-20T08:10:12.216Z",
  "devdoc": {
    "methods": {
      "allowance(address,address)": {
        "details": "Function to check the amount of tokens that an owner allowed to a spender.\r",
        "params": {
          "owner": "address The address which owns the funds.\r",
          "spender": "address The address which will spend the funds.\r"
        },
        "return": "A uint256 specifying the amount of tokens still available for the spender.\r"
      },
      "approve(address,uint256)": {
        "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\r Beware that changing an allowance with this method brings the risk that someone may use both the old\r and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\r race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\r https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r",
        "params": {
          "spender": "The address which will spend the funds.\r",
          "value": "The amount of tokens to be spent.\r"
        }
      },
      "balanceOf(address)": {
        "details": "Function to return a balance of the address.\r",
        "return": "A uint256 specifying the amount of tokens by the spender.\r"
      },
      "burn(uint256)": {
        "details": "Burns a specific amount of tokens.",
        "params": {
          "value": "The amount of token to be burned."
        }
      },
      "burnFrom(address,uint256)": {
        "details": "Burns a specific amount of tokens from the target address and decrements allowance",
        "params": {
          "from": "address The address which you want to send tokens from",
          "value": "uint256 The amount of token to be burned"
        }
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Decrease the amount of tokens that an owner allowed to a spender.\r approve should be called when allowed_[spender] == 0. To decrement\r allowed value is better to use this function to avoid 2 calls (and wait until\r the first transaction is mined)\r From MonolithDAO Token.sol\r",
        "params": {
          "spender": "The address which will spend the funds.\r",
          "subtractedValue": "The amount of tokens to decrease the allowance by.\r"
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Increase the amount of tokens that an owner allowed to a spender.\r approve should be called when allowed_[_spender] == 0. To increment\r allowed value is better to use this function to avoid 2 calls (and wait until\r the first transaction is mined)\r From MonolithDAO Token.sol\r",
        "params": {
          "addedValue": "The amount of tokens to increase the allowance by.\r",
          "spender": "The address which will spend the funds.\r"
        }
      },
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "mint(address,uint256)": {
        "details": "Function to mint tokens\r",
        "params": {
          "to": "The address that will receive the minted tokens.\r",
          "value": "The amount of tokens to mint.\r"
        },
        "return": "A boolean that indicates if the operation was successful.\r"
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "totalSupply()": {
        "details": "Function to access total supply of tokens \r",
        "return": "A uint256 specifying the total amount of coins in circulation.\r"
      },
      "transfer(address,uint256)": {
        "details": "Public function that allows to transfer tokens.\r Function implements recognition if the recepeient is a contract or not and executes different subfunctions.\r",
        "params": {
          "to": "Address of the recepient of the tokens.\r",
          "value": "The amount of the tokens to be transfered.\r"
        },
        "return": "A bool defining if the transfer was succesful.\r"
      },
      "transfer(address,uint256,bytes)": {
        "details": "Public function that allows to transfer tokens with additional data. \r Function implements recognition if the recepeient is a contract or not and executes different subfunctions.\r",
        "params": {
          "data": "Additional data to be send to the recepient.\r",
          "to": "Address of the recepient of the tokens.\r",
          "value": "The amount of the tokens to be transfered.\r"
        },
        "return": "A bool defining if the transfer was succesful.\r"
      },
      "transfer(address,uint256,bytes,string)": {
        "details": "Public function that allows to transfer tokens with additional data \r and customized fallback.\r",
        "params": {
          "custom_fallback": "Customized fallback that is executed after the transfer of the tokens.\r",
          "data": "Additional data to be send to the recepient.\r",
          "to": "Address of the recepient of the tokens.\r",
          "value": "The amount of the tokens to be transfered.\r"
        },
        "return": "A bool defining if the transfer was succesful.\r"
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfer tokens from one address to another\r",
        "params": {
          "from": "address The address which you want to send tokens from\r",
          "to": "address The address which you want to transfer to\r",
          "value": "uint256 the amount of tokens to be transferred\r"
        }
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      },
      "withdraw(address,uint256)": {
        "details": "withdraw tokens from the contract. Function can only be called by a contract which holds the money.\r",
        "params": {
          "_from": "address that executed the contract\r",
          "_value": "amount of tokens to withdraw\r"
        }
      }
    },
    "title": "ERC223 Token"
  },
  "userdoc": {
    "methods": {
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      }
    }
  }
}